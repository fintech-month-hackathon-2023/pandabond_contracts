{
	"id": "dbddd6ba95aa24668c73d7bc0a89cdcc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SoulBoundToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/ISoulBoundToken.sol\";\n\ncontract SoulBoundToken is ERC721, Ownable, ISoulBoundToken {\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _tokenIdCounter;\n\n    mapping(uint256 => uint8) _accessTier;\n    mapping(uint256 => bool) _isActive;\n    mapping(uint256 => bytes32) _hashedIdentity;\n    mapping(address => uint256) _ownerToTokenId;\n\n    modifier validLevel(uint8 tier) {\n        require(tier >= 1 && tier <= 3, \"IT\");\n        _;\n    }\n\n    constructor() ERC721(\"SoulBoundToken\", \"SBT\") {\n        _tokenIdCounter.increment();\n    }\n\n    function safeMint(\n        address to,\n        uint8 tier,\n        bytes32 hashed\n    ) public onlyOwner validLevel(tier) {\n        require(_ownerToTokenId[to] == 0, \"STAE\");\n        uint256 tokenId = _tokenIdCounter.current();\n        _tokenIdCounter.increment();\n        _isActive[tokenId] = true;\n        _accessTier[tokenId] = tier;\n        _hashedIdentity[tokenId] = hashed;\n        _ownerToTokenId[to] = tokenId;\n        _safeMint(to, tokenId);\n    }\n\n    function burn(uint256 tokenId) external {\n        require(\n            ownerOf(tokenId) == msg.sender,\n            \"NO\"\n        );\n        _burn(tokenId);\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256,\n        uint256\n    ) internal pure override {\n        require(\n            from == address(0) || to == address(0),\n            \"SBTCT\"\n        );\n    }\n\n    function _burn(uint256 tokenId) internal override(ERC721) {\n        super._burn(tokenId);\n    }\n\n    function modifyLevel(\n        uint256 id,\n        uint8 tier\n    ) public onlyOwner validLevel(tier) {\n        _accessTier[id] = tier;\n    }\n\n    function deactivate(uint256 id) public onlyOwner {\n        _isActive[id] = false;\n    }\n\n    function reactivate(uint256 id) public onlyOwner {\n        _isActive[id] = true;\n    }\n\n    //getters\n    function accessTier(uint256 id) public view returns (uint8) {\n        return _accessTier[id];\n    }\n\n    function accessTier(address owner) public view returns (uint8) {\n        return accessTier(ownerToTokenId(owner));\n    }\n\n    function isActive(uint256 id) public view returns (bool) {\n        return _isActive[id];\n    }\n\n    function hashedIdentity(uint256 id) public view returns (bytes32) {\n        return _hashedIdentity[id];\n    }\n\n    function hasActiveSBT(address owner) public view returns (bool) {\n        return _isActive[ownerToTokenId(owner)];\n    }\n\n    function ownerToTokenId(address owner) public view returns (uint256) {\n        return _ownerToTokenId[owner];\n    }\n}\n"
			},
			"contracts/interfaces/ISoulBoundToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface ISoulBoundToken {\n    function hasActiveSBT(address owner) external view returns (bool);\n\n    function ownerToTokenId(address owner) external view returns (uint256);\n\n    function accessTier(uint256 id) external view returns (uint8);\n\n    function accessTier(address owner) external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2848:2873   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2836:2838   */\n      0x20\n        /* \"#utility.yul\":2821:2839   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":2702:2879   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4011:4018  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4044  _requireMinted */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4086  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5345:5366   */\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x21\n        /* \"#utility.yul\":5382:5400   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5375:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5475   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5421:5439   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5414:5476   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5492:5510   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5485:5516   */\n      mstore\n        /* \"#utility.yul\":5533:5552   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_98\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3728:3733  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5765:5767   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5747:5768   */\n      mstore\n        /* \"#utility.yul\":5804:5806   */\n      0x3d\n        /* \"#utility.yul\":5784:5802   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5777:5807   */\n      mstore\n        /* \"#utility.yul\":5843:5877   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":5823:5841   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5816:5878   */\n      mstore\n        /* \"#utility.yul\":5914:5945   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":5894:5912   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5887:5946   */\n      mstore\n        /* \"#utility.yul\":5963:5982   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_93\n        /* \"#utility.yul\":5563:5988   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3855:3857  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3859:3866  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  _approve */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4842  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4834:4841  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4819  _isApprovedOrOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4842  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4793:4892  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4931  _transfer(from, to, tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4913:4917  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4919:4921  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4923:4930  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4912  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4931  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5154:5158  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5160:5162  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5164:5171  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5153  safeTransferFrom */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6962:6964   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6944:6965   */\n      mstore\n        /* \"#utility.yul\":7001:7003   */\n      0x29\n        /* \"#utility.yul\":6981:6999   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6974:7004   */\n      mstore\n        /* \"#utility.yul\":7040:7074   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7020:7038   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7013:7075   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":7091:7109   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7084:7123   */\n      mstore\n        /* \"#utility.yul\":7140:7159   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_93\n        /* \"#utility.yul\":6760:7165   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_123:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4296:4304  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4314  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4281  _setApprovalForAll */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5458  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_137\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5450:5457  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5435  _isApprovedOrOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5458  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5409:5508  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5556  _safeTransfer(from, to, tokenId, data) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5532:5536  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5538:5540  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5542:5549  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5551:5555  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5531  _safeTransfer */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5556  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_147\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_148)\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13466:13599  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13466:13599  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12768:12939  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12857  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12871  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12918  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12909  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12918  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12886:12932  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12768:12939  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7540:7801  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7633:7637  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7649:7662  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7688  ERC721.ownerOf(tokenId) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7680:7687  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7679  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7688  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7649:7688  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7717:7722  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7722  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7713  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7722  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7758  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_166\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7758  isApprovedForAll(owner, spender) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7743:7748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7750:7757  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7742  isApprovedForAll */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7758  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7793  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7786:7793  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7793  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7782  getApproved(tokenId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7774:7781  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7773  getApproved */\n      tag_31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7782  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7793  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7793  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7698:7794  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7540:7801  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11423:12656  function _transfer(... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11577:11581  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11581  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11573  ERC721.ownerOf(tokenId) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11565:11572  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11564  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11573  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11581  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11542:11623  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11641:11657  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8279:8281   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8261:8282   */\n      mstore\n        /* \"#utility.yul\":8318:8320   */\n      0x24\n        /* \"#utility.yul\":8298:8316   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8291:8321   */\n      mstore\n        /* \"#utility.yul\":8357:8391   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":8337:8355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8330:8392   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8408:8426   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8401:8435   */\n      mstore\n        /* \"#utility.yul\":8452:8471   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_93\n        /* \"#utility.yul\":8077:8477   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11751  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11730:11734  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11736:11738  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11740:11747  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11749:11750  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11729  _beforeTokenTransfer */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11751  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11878:11882  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11882  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11874  ERC721.ownerOf(tokenId) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11866:11873  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11865  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11874  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11882  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11843:11924  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12017  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12008  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12017  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11986:12017  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12476  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12470  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12476  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12481  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12508  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12513  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11986:12017  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12513  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12549  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12540  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12549  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12554  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12570:12597  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12009:12016  tokenId */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12570:12597  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13075:13382  function _setApprovalForAll(... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13225:13233  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13233  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13221  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13233  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8684:8686   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8666:8687   */\n      mstore\n        /* \"#utility.yul\":8723:8725   */\n      0x19\n        /* \"#utility.yul\":8703:8721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8696:8726   */\n      mstore\n        /* \"#utility.yul\":8762:8789   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":8742:8760   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8735:8790   */\n      mstore\n        /* \"#utility.yul\":8807:8825   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_93\n        /* \"#utility.yul\":8482:8831   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13298  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13291  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13298  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13308  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13319  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13075:13382  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6424:6729  function _safeTransfer(... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6602  _transfer(from, to, tokenId) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6584:6588  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6590:6592  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6594:6601  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6583  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6602  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6667  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6643:6647  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6649:6651  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6653:6660  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6662:6666  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6642  _checkOnERC721Received */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6667  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6612:6722  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":471:484  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:534  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":548:553  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:547  Math.log10 */\n      tag_200\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":557:558  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:558  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:558  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:592  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":606:612  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":595:613  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_202\n      jumpi\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_204:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:613  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":749:751  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_205:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":942:956  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":937:967  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:968  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1012:1014  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1003:1014  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1094  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:16094  function _beforeTokenTransfer(... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15882:15883  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15879  batchSize */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15883  batchSize > 1 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15866:16088  if (batchSize > 1) {... */\n      iszero\n      tag_141\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15903:15921  from != address(0) */\n      dup5\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15899:15984  if (from != address(0)) {... */\n      tag_215\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15950  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15960:15969  batchSize */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      tag_216\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15960:15969  batchSize */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      tag_217\n      jump\t// in\n    tag_216:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15899:15984  if (from != address(0)) {... */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16001:16017  to != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15997:16078  if (to != address(0)) {... */\n      tag_141\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16046  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16054:16063  batchSize */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      tag_219\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16054:16063  batchSize */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      tag_220\n      jump\t// in\n    tag_219:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:16094  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14151:14982  function _checkOnERC721Received(... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14300:14304  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14320:14333  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14316:14976  if (to.isContract()) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14391  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_227\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14406:14410  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14412:14419  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14421:14425  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_228\n      jump\t// in\n    tag_227:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_230\n      swap2\n      dup2\n      add\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      0x01\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14351:14924  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_232\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_237\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_236)\n    tag_237:\n      0x60\n      swap2\n      pop\n    tag_236:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14599  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14606  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14610:14611  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14611  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14910  if (reason.length == 0) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14635:14695  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14910  if (reason.length == 0) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14862:14868  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14856:14869  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14847:14853  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14843:14845  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14839:14854  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14832:14870  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14351:14924  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_232:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14476:14527  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14469:14527  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_167)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14316:14976  if (to.isContract()) {... */\n    tag_225:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14961:14965  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14151:14982  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9942:9949  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10032  value >= 10**64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n      tag_244\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10052:10067  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10095:10097  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10085:10097  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10138:10144  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10134  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10144  value >= 10**32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10173:10179  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10164:10179  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10207:10209  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10197:10209  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10250:10256  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10246  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10256  value >= 10**16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10285:10291  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10291  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10319:10321  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10309:10321  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10362:10367  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10358  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10367  value >= 10**8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10396:10401  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10387:10401  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10430  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10419:10430  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10471:10476  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10467  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10476  value >= 10**4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10505:10510  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10496:10510  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10538:10539  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10528:10539  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10580:10585  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10576  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10585  value >= 10**2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10614:10619  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10605:10619  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10647:10648  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10637:10648  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10689:10694  10**1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10685  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10694  value >= 10**1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n      tag_78\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10725  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10714:10725  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10766:10772  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_264:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_20:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_273:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_148\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_264\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_265:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_277:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_277)\n    tag_279:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_266:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_281\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_265\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_27:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_148\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_266\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_30:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_285:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_267:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_288:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_36:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_290:\n        /* \"#utility.yul\":2087:2116   */\n      tag_291\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_267\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2178:2506   */\n    tag_40:\n        /* \"#utility.yul\":2255:2261   */\n      0x00\n        /* \"#utility.yul\":2263:2269   */\n      dup1\n        /* \"#utility.yul\":2271:2277   */\n      0x00\n        /* \"#utility.yul\":2324:2326   */\n      0x60\n        /* \"#utility.yul\":2312:2321   */\n      dup5\n        /* \"#utility.yul\":2303:2310   */\n      dup7\n        /* \"#utility.yul\":2299:2322   */\n      sub\n        /* \"#utility.yul\":2295:2327   */\n      slt\n        /* \"#utility.yul\":2292:2344   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":2340:2341   */\n      0x00\n        /* \"#utility.yul\":2337:2338   */\n      dup1\n        /* \"#utility.yul\":2330:2342   */\n      revert\n        /* \"#utility.yul\":2292:2344   */\n    tag_293:\n        /* \"#utility.yul\":2363:2392   */\n      tag_294\n        /* \"#utility.yul\":2382:2391   */\n      dup5\n        /* \"#utility.yul\":2363:2392   */\n      tag_267\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2353:2392   */\n      swap3\n      pop\n        /* \"#utility.yul\":2411:2449   */\n      tag_295\n        /* \"#utility.yul\":2445:2447   */\n      0x20\n        /* \"#utility.yul\":2434:2443   */\n      dup6\n        /* \"#utility.yul\":2430:2448   */\n      add\n        /* \"#utility.yul\":2411:2449   */\n      tag_267\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2401:2449   */\n      swap2\n      pop\n        /* \"#utility.yul\":2496:2498   */\n      0x40\n        /* \"#utility.yul\":2485:2494   */\n      dup5\n        /* \"#utility.yul\":2481:2499   */\n      add\n        /* \"#utility.yul\":2468:2500   */\n      calldataload\n        /* \"#utility.yul\":2458:2500   */\n      swap1\n      pop\n        /* \"#utility.yul\":2178:2506   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2511:2697   */\n    tag_51:\n        /* \"#utility.yul\":2570:2576   */\n      0x00\n        /* \"#utility.yul\":2623:2625   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup3\n        /* \"#utility.yul\":2602:2609   */\n      dup5\n        /* \"#utility.yul\":2598:2621   */\n      sub\n        /* \"#utility.yul\":2594:2626   */\n      slt\n        /* \"#utility.yul\":2591:2643   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":2639:2640   */\n      0x00\n        /* \"#utility.yul\":2636:2637   */\n      dup1\n        /* \"#utility.yul\":2629:2641   */\n      revert\n        /* \"#utility.yul\":2591:2643   */\n    tag_297:\n        /* \"#utility.yul\":2662:2691   */\n      tag_148\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2662:2691   */\n      tag_267\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_60:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_301:\n        /* \"#utility.yul\":3049:3078   */\n      tag_302\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_267\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_303:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_203:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:4506   */\n    tag_64:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3479:3485   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup1\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3528:3537   */\n      dup6\n        /* \"#utility.yul\":3519:3526   */\n      dup8\n        /* \"#utility.yul\":3515:3538   */\n      sub\n        /* \"#utility.yul\":3511:3544   */\n      slt\n        /* \"#utility.yul\":3508:3561   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3508:3561   */\n    tag_306:\n        /* \"#utility.yul\":3580:3609   */\n      tag_307\n        /* \"#utility.yul\":3599:3608   */\n      dup6\n        /* \"#utility.yul\":3580:3609   */\n      tag_267\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3570:3609   */\n      swap4\n      pop\n        /* \"#utility.yul\":3628:3666   */\n      tag_308\n        /* \"#utility.yul\":3662:3664   */\n      0x20\n        /* \"#utility.yul\":3651:3660   */\n      dup7\n        /* \"#utility.yul\":3647:3665   */\n      add\n        /* \"#utility.yul\":3628:3666   */\n      tag_267\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":3618:3666   */\n      swap3\n      pop\n        /* \"#utility.yul\":3713:3715   */\n      0x40\n        /* \"#utility.yul\":3702:3711   */\n      dup6\n        /* \"#utility.yul\":3698:3716   */\n      add\n        /* \"#utility.yul\":3685:3717   */\n      calldataload\n        /* \"#utility.yul\":3675:3717   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3757:3766   */\n      dup6\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3791:3809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3832:3834   */\n      dup1\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3821:3835   */\n      gt\n        /* \"#utility.yul\":3818:3852   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3845:3846   */\n      dup1\n        /* \"#utility.yul\":3838:3850   */\n      revert\n        /* \"#utility.yul\":3818:3852   */\n    tag_309:\n        /* \"#utility.yul\":3886:3892   */\n      dup2\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3861:3893   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3938   */\n      dup8\n        /* \"#utility.yul\":3924:3928   */\n      0x1f\n        /* \"#utility.yul\":3920:3922   */\n      dup4\n        /* \"#utility.yul\":3916:3929   */\n      add\n        /* \"#utility.yul\":3912:3939   */\n      slt\n        /* \"#utility.yul\":3902:3957   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3950:3951   */\n      dup1\n        /* \"#utility.yul\":3943:3955   */\n      revert\n        /* \"#utility.yul\":3902:3957   */\n    tag_310:\n        /* \"#utility.yul\":3989:3991   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      calldataload\n        /* \"#utility.yul\":4011:4013   */\n      dup2\n        /* \"#utility.yul\":4007:4009   */\n      dup2\n        /* \"#utility.yul\":4004:4014   */\n      gt\n        /* \"#utility.yul\":4001:4037   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":4017:4035   */\n      tag_312\n      tag_203\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4086:4095   */\n      mload\n        /* \"#utility.yul\":4060:4062   */\n      0x1f\n        /* \"#utility.yul\":4146:4159   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4142:4164   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4166:4168   */\n      0x3f\n        /* \"#utility.yul\":4138:4169   */\n      add\n        /* \"#utility.yul\":4134:4174   */\n      and\n        /* \"#utility.yul\":4122:4175   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4190:4208   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4210:4232   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4187:4233   */\n      or\n        /* \"#utility.yul\":4184:4256   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":4236:4254   */\n      tag_314\n      tag_203\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4276:4286   */\n      dup2\n        /* \"#utility.yul\":4272:4274   */\n      0x40\n        /* \"#utility.yul\":4265:4287   */\n      mstore\n        /* \"#utility.yul\":4311:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4296:4314   */\n      mstore\n        /* \"#utility.yul\":4351:4358   */\n      dup11\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4343   */\n      dup5\n        /* \"#utility.yul\":4337:4339   */\n      dup8\n        /* \"#utility.yul\":4333:4344   */\n      add\n        /* \"#utility.yul\":4329:4349   */\n      add\n        /* \"#utility.yul\":4326:4359   */\n      gt\n        /* \"#utility.yul\":4323:4376   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4323:4376   */\n    tag_315:\n        /* \"#utility.yul\":4428:4430   */\n      dup3\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4419:4421   */\n      dup7\n        /* \"#utility.yul\":4415:4426   */\n      add\n        /* \"#utility.yul\":4410:4412   */\n      0x20\n        /* \"#utility.yul\":4402:4408   */\n      dup4\n        /* \"#utility.yul\":4398:4413   */\n      add\n        /* \"#utility.yul\":4385:4431   */\n      calldatacopy\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4463:4465   */\n      dup5\n        /* \"#utility.yul\":4455:4461   */\n      dup4\n        /* \"#utility.yul\":4451:4466   */\n      add\n        /* \"#utility.yul\":4447:4471   */\n      add\n        /* \"#utility.yul\":4440:4475   */\n      mstore\n        /* \"#utility.yul\":4494:4500   */\n      dup1\n        /* \"#utility.yul\":4484:4500   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:4506   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:4771   */\n    tag_72:\n        /* \"#utility.yul\":4579:4585   */\n      0x00\n        /* \"#utility.yul\":4587:4593   */\n      dup1\n        /* \"#utility.yul\":4640:4642   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4626   */\n      dup6\n        /* \"#utility.yul\":4615:4638   */\n      sub\n        /* \"#utility.yul\":4611:4643   */\n      slt\n        /* \"#utility.yul\":4608:4660   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":4656:4657   */\n      0x00\n        /* \"#utility.yul\":4653:4654   */\n      dup1\n        /* \"#utility.yul\":4646:4658   */\n      revert\n        /* \"#utility.yul\":4608:4660   */\n    tag_317:\n        /* \"#utility.yul\":4679:4708   */\n      tag_318\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4679:4708   */\n      tag_267\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4669:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4727:4765   */\n      tag_319\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup5\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4727:4765   */\n      tag_267\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4717:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5156   */\n    tag_82:\n        /* \"#utility.yul\":4855:4856   */\n      0x01\n        /* \"#utility.yul\":4851:4863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4898:4910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4919:4980   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":4973:4977   */\n      0x7f\n        /* \"#utility.yul\":4965:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4978   */\n      and\n        /* \"#utility.yul\":4951:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:4980   */\n    tag_321:\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5015:5029   */\n      lt\n        /* \"#utility.yul\":4995:5013   */\n      dup2\n        /* \"#utility.yul\":4992:5030   */\n      sub\n        /* \"#utility.yul\":4989:5150   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":5072:5082   */\n      0x4e487b71\n        /* \"#utility.yul\":5067:5070   */\n      0xe0\n        /* \"#utility.yul\":5063:5083   */\n      shl\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5053:5084   */\n      mstore\n        /* \"#utility.yul\":5107:5111   */\n      0x22\n        /* \"#utility.yul\":5104:5105   */\n      0x04\n        /* \"#utility.yul\":5097:5112   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":4989:5150   */\n    tag_322:\n      pop\n        /* \"#utility.yul\":4776:5156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5993:6402   */\n    tag_111:\n        /* \"#utility.yul\":6195:6197   */\n      0x20\n        /* \"#utility.yul\":6177:6198   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6234:6236   */\n      0x2d\n        /* \"#utility.yul\":6214:6232   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6207:6237   */\n      mstore\n        /* \"#utility.yul\":6273:6307   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":6268:6270   */\n      0x40\n        /* \"#utility.yul\":6253:6271   */\n      dup3\n      add\n        /* \"#utility.yul\":6246:6308   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6339:6341   */\n      0x60\n        /* \"#utility.yul\":6324:6342   */\n      dup3\n      add\n        /* \"#utility.yul\":6317:6360   */\n      mstore\n        /* \"#utility.yul\":6392:6395   */\n      0x80\n        /* \"#utility.yul\":6377:6396   */\n      add\n      swap1\n        /* \"#utility.yul\":5993:6402   */\n      jump\t// out\n        /* \"#utility.yul\":7170:7666   */\n    tag_152:\n        /* \"#utility.yul\":7349:7352   */\n      0x00\n        /* \"#utility.yul\":7387:7393   */\n      dup4\n        /* \"#utility.yul\":7381:7394   */\n      mload\n        /* \"#utility.yul\":7403:7469   */\n      tag_329\n        /* \"#utility.yul\":7462:7468   */\n      dup2\n        /* \"#utility.yul\":7457:7460   */\n      dup5\n        /* \"#utility.yul\":7450:7454   */\n      0x20\n        /* \"#utility.yul\":7442:7448   */\n      dup9\n        /* \"#utility.yul\":7438:7455   */\n      add\n        /* \"#utility.yul\":7403:7469   */\n      tag_265\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7532:7545   */\n      dup4\n      mload\n        /* \"#utility.yul\":7491:7507   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":7554:7624   */\n      tag_330\n        /* \"#utility.yul\":7532:7545   */\n      dup2\n        /* \"#utility.yul\":7491:7507   */\n      dup4\n        /* \"#utility.yul\":7601:7605   */\n      0x20\n        /* \"#utility.yul\":7589:7606   */\n      dup9\n      add\n        /* \"#utility.yul\":7554:7624   */\n      tag_265\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7640:7660   */\n      add\n      swap5\n        /* \"#utility.yul\":7170:7666   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:8072   */\n    tag_173:\n        /* \"#utility.yul\":7873:7875   */\n      0x20\n        /* \"#utility.yul\":7855:7876   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7912:7914   */\n      0x25\n        /* \"#utility.yul\":7892:7910   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7885:7915   */\n      mstore\n        /* \"#utility.yul\":7951:7985   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":7946:7948   */\n      0x40\n        /* \"#utility.yul\":7931:7949   */\n      dup3\n      add\n        /* \"#utility.yul\":7924:7986   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":8017:8019   */\n      0x60\n        /* \"#utility.yul\":8002:8020   */\n      dup3\n      add\n        /* \"#utility.yul\":7995:8030   */\n      mstore\n        /* \"#utility.yul\":8062:8065   */\n      0x80\n        /* \"#utility.yul\":8047:8066   */\n      add\n      swap1\n        /* \"#utility.yul\":7671:8072   */\n      jump\t// out\n        /* \"#utility.yul\":8836:9250   */\n    tag_196:\n        /* \"#utility.yul\":9038:9040   */\n      0x20\n        /* \"#utility.yul\":9020:9041   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9077:9079   */\n      0x32\n        /* \"#utility.yul\":9057:9075   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9050:9080   */\n      mstore\n        /* \"#utility.yul\":9116:9150   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":9111:9113   */\n      0x40\n        /* \"#utility.yul\":9096:9114   */\n      dup3\n      add\n        /* \"#utility.yul\":9089:9151   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9182:9184   */\n      0x60\n        /* \"#utility.yul\":9167:9185   */\n      dup3\n      add\n        /* \"#utility.yul\":9160:9208   */\n      mstore\n        /* \"#utility.yul\":9240:9243   */\n      0x80\n        /* \"#utility.yul\":9225:9244   */\n      add\n      swap1\n        /* \"#utility.yul\":8836:9250   */\n      jump\t// out\n        /* \"#utility.yul\":9387:9514   */\n    tag_268:\n        /* \"#utility.yul\":9448:9458   */\n      0x4e487b71\n        /* \"#utility.yul\":9443:9446   */\n      0xe0\n        /* \"#utility.yul\":9439:9459   */\n      shl\n        /* \"#utility.yul\":9436:9437   */\n      0x00\n        /* \"#utility.yul\":9429:9460   */\n      mstore\n        /* \"#utility.yul\":9479:9483   */\n      0x11\n        /* \"#utility.yul\":9476:9477   */\n      0x04\n        /* \"#utility.yul\":9469:9484   */\n      mstore\n        /* \"#utility.yul\":9503:9507   */\n      0x24\n        /* \"#utility.yul\":9500:9501   */\n      0x00\n        /* \"#utility.yul\":9493:9508   */\n      revert\n        /* \"#utility.yul\":9519:9647   */\n    tag_217:\n        /* \"#utility.yul\":9586:9595   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":9607:9618   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":9604:9641   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":9621:9639   */\n      tag_78\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":9652:9777   */\n    tag_220:\n        /* \"#utility.yul\":9717:9726   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9738:9748   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9735:9771   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":9751:9769   */\n      tag_78\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":9782:10271   */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10051:10066   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":10033:10067   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10103:10118   */\n      dup5\n      and\n        /* \"#utility.yul\":10098:10100   */\n      0x20\n        /* \"#utility.yul\":10083:10101   */\n      dup3\n      add\n        /* \"#utility.yul\":10076:10119   */\n      mstore\n        /* \"#utility.yul\":10150:10152   */\n      0x40\n        /* \"#utility.yul\":10135:10153   */\n      dup2\n      add\n        /* \"#utility.yul\":10128:10162   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10198:10201   */\n      0x80\n        /* \"#utility.yul\":10193:10195   */\n      0x60\n        /* \"#utility.yul\":10178:10196   */\n      dup3\n      add\n        /* \"#utility.yul\":10171:10202   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9976:9980   */\n      0x00\n      swap1\n        /* \"#utility.yul\":10219:10265   */\n      tag_344\n      swap1\n        /* \"#utility.yul\":10245:10264   */\n      dup4\n      add\n        /* \"#utility.yul\":10237:10243   */\n      dup5\n        /* \"#utility.yul\":10219:10265   */\n      tag_266\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10211:10265   */\n      swap7\n        /* \"#utility.yul\":9782:10271   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10276:10525   */\n    tag_231:\n        /* \"#utility.yul\":10345:10351   */\n      0x00\n        /* \"#utility.yul\":10398:10400   */\n      0x20\n        /* \"#utility.yul\":10386:10395   */\n      dup3\n        /* \"#utility.yul\":10377:10384   */\n      dup5\n        /* \"#utility.yul\":10373:10396   */\n      sub\n        /* \"#utility.yul\":10369:10401   */\n      slt\n        /* \"#utility.yul\":10366:10418   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":10414:10415   */\n      0x00\n        /* \"#utility.yul\":10411:10412   */\n      dup1\n        /* \"#utility.yul\":10404:10416   */\n      revert\n        /* \"#utility.yul\":10366:10418   */\n    tag_346:\n        /* \"#utility.yul\":10446:10455   */\n      dup2\n        /* \"#utility.yul\":10440:10456   */\n      mload\n        /* \"#utility.yul\":10465:10495   */\n      tag_148\n        /* \"#utility.yul\":10489:10494   */\n      dup2\n        /* \"#utility.yul\":10465:10495   */\n      tag_264\n      jump\t// in\n\n    auxdata: 0xa264697066735822122074d767db8da757096bfdcabb4947ecae2ceceec549326376ce67aa72c1e90d9c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_175": {
									"entryPoint": null,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:14"
															},
															"nodeType": "YulIf",
															"src": "220:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:14",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:14"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:14"
															},
															"nodeType": "YulIf",
															"src": "353:36:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:14"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:14"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:14"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:14"
															},
															"nodeType": "YulIf",
															"src": "536:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:14"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:14"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:14"
															},
															"nodeType": "YulIf",
															"src": "698:53:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:14"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:14"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:14"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:14"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:14"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:14",
																"statements": []
															},
															"src": "779:133:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:14"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:14"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:14",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:14",
														"type": ""
													}
												],
												"src": "146:840:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:14"
															},
															"nodeType": "YulIf",
															"src": "1119:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:14",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:14"
															},
															"nodeType": "YulIf",
															"src": "1256:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:14"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:14"
															},
															"nodeType": "YulIf",
															"src": "1429:36:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:14"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:14",
														"type": ""
													}
												],
												"src": "991:562:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:14"
															},
															"nodeType": "YulIf",
															"src": "1701:61:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:14"
															},
															"nodeType": "YulIf",
															"src": "1771:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:14",
														"type": ""
													}
												],
												"src": "1558:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:14",
														"type": ""
													}
												],
												"src": "1943:121:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:14"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:14"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:14"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:14",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:14"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:14"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:14"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:14",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:14"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:14"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:14"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:14"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:14"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:14"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:14"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:14"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:14"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:14",
																			"statements": []
																		},
																		"src": "2516:82:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:14"
															},
															"nodeType": "YulIf",
															"src": "2160:448:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:14",
														"type": ""
													}
												],
												"src": "2069:545:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:14",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:14"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:14"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:14",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:14"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:14",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:14",
														"type": ""
													}
												],
												"src": "2619:166:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:14",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:14"
															},
															"nodeType": "YulIf",
															"src": "2929:56:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:14"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:14"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:14",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:14"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:14"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:14"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:14"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:14",
																					"statements": []
																				},
																				"src": "3376:236:14"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:14",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:14",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:14"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:14"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:14"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:14",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:14"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:14"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:14",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:14"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:14"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:14"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:14"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:14"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:14"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:14"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:14",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:14"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:14"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:14"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:14"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:14",
														"type": ""
													}
												],
												"src": "2790:1352:14"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200149d3803806200149d83398101604081905262000034916200011f565b600062000042838262000218565b50600162000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6111a980620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610cf9565b6101ff565b60405190151581526020015b60405180910390f35b610104610251565b6040516100f39190610d66565b61012461011f366004610d79565b6102e3565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610dae565b61030a565b005b61014f61015f366004610dd8565b610424565b61014f610172366004610dd8565b610455565b610124610185366004610d79565b610470565b61019d610198366004610e14565b6104d0565b6040519081526020016100f3565b610104610556565b61014f6101c1366004610e2f565b610565565b61014f6101d4366004610e81565b610574565b6101046101e7366004610d79565b6105ac565b6100e76101fa366004610f5d565b610620565b60006001600160e01b031982166380ac58cd60e01b148061023057506001600160e01b03198216635b5e139f60e01b145b8061024b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461026090610f90565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610f90565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b60006102ee8261064e565b506000908152600460205260409020546001600160a01b031690565b600061031582610470565b9050806001600160a01b0316836001600160a01b0316036103875760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103a357506103a38133610620565b6104155760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161037e565b61041f83836106b0565b505050565b61042e338261071e565b61044a5760405162461bcd60e51b815260040161037e90610fca565b61041f83838361077d565b61041f83838360405180602001604052806000815250610574565b6000818152600260205260408120546001600160a01b03168061024b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161037e565b60006001600160a01b03821661053a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161037e565b506001600160a01b031660009081526003602052604090205490565b60606001805461026090610f90565b6105703383836108ee565b5050565b61057e338361071e565b61059a5760405162461bcd60e51b815260040161037e90610fca565b6105a6848484846109bc565b50505050565b60606105b78261064e565b60006105ce60408051602081019091526000815290565b905060008151116105ee5760405180602001604052806000815250610619565b806105f8846109ef565b604051602001610609929190611017565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b03166106ad5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161037e565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906106e582610470565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061072a83610470565b9050806001600160a01b0316846001600160a01b0316148061075157506107518185610620565b806107755750836001600160a01b031661076a846102e3565b6001600160a01b0316145b949350505050565b826001600160a01b031661079082610470565b6001600160a01b0316146107b65760405162461bcd60e51b815260040161037e90611046565b6001600160a01b0382166108185760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161037e565b6108258383836001610a82565b826001600160a01b031661083882610470565b6001600160a01b03161461085e5760405162461bcd60e51b815260040161037e90611046565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03160361094f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161037e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6109c784848461077d565b6109d384848484610b0a565b6105a65760405162461bcd60e51b815260040161037e9061108b565b606060006109fc83610c0b565b600101905060008167ffffffffffffffff811115610a1c57610a1c610e6b565b6040519080825280601f01601f191660200182016040528015610a46576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a5057509392505050565b60018111156105a6576001600160a01b03841615610ac8576001600160a01b03841660009081526003602052604081208054839290610ac29084906110f3565b90915550505b6001600160a01b038316156105a6576001600160a01b03831660009081526003602052604081208054839290610aff908490611106565b909155505050505050565b60006001600160a01b0384163b15610c0057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610b4e903390899088908890600401611119565b6020604051808303816000875af1925050508015610b89575060408051601f3d908101601f19168201909252610b8691810190611156565b60015b610be6573d808015610bb7576040519150601f19603f3d011682016040523d82523d6000602084013e610bbc565b606091505b508051600003610bde5760405162461bcd60e51b815260040161037e9061108b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610775565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c4a5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c76576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c9457662386f26fc10000830492506010015b6305f5e1008310610cac576305f5e100830492506008015b6127108310610cc057612710830492506004015b60648310610cd2576064830492506002015b600a831061024b5760010192915050565b6001600160e01b0319811681146106ad57600080fd5b600060208284031215610d0b57600080fd5b813561061981610ce3565b60005b83811015610d31578181015183820152602001610d19565b50506000910152565b60008151808452610d52816020860160208601610d16565b601f01601f19169290920160200192915050565b6020815260006106196020830184610d3a565b600060208284031215610d8b57600080fd5b5035919050565b80356001600160a01b0381168114610da957600080fd5b919050565b60008060408385031215610dc157600080fd5b610dca83610d92565b946020939093013593505050565b600080600060608486031215610ded57600080fd5b610df684610d92565b9250610e0460208501610d92565b9150604084013590509250925092565b600060208284031215610e2657600080fd5b61061982610d92565b60008060408385031215610e4257600080fd5b610e4b83610d92565b915060208301358015158114610e6057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610e9757600080fd5b610ea085610d92565b9350610eae60208601610d92565b925060408501359150606085013567ffffffffffffffff80821115610ed257600080fd5b818701915087601f830112610ee657600080fd5b813581811115610ef857610ef8610e6b565b604051601f8201601f19908116603f01168101908382118183101715610f2057610f20610e6b565b816040528281528a6020848701011115610f3957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610f7057600080fd5b610f7983610d92565b9150610f8760208401610d92565b90509250929050565b600181811c90821680610fa457607f821691505b602082108103610fc457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611029818460208801610d16565b83519083019061103d818360208801610d16565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561024b5761024b6110dd565b8082018082111561024b5761024b6110dd565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061114c90830184610d3a565b9695505050505050565b60006020828403121561116857600080fd5b815161061981610ce356fea264697066735822122074d767db8da757096bfdcabb4947ecae2ceceec549326376ce67aa72c1e90d9c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x149D CODESIZE SUB DUP1 PUSH3 0x149D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x0 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x11A9 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xDAE JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x556 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE81 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x230 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x24B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xF90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xF90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE DUP3 PUSH2 0x64E JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315 DUP3 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3A3 JUMPI POP PUSH2 0x3A3 DUP2 CALLER PUSH2 0x620 JUMP JUMPDEST PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 PUSH2 0x6B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x42E CALLER DUP3 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 DUP4 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x574 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x570 CALLER DUP4 DUP4 PUSH2 0x8EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x57E CALLER DUP4 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x5A6 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9BC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5B7 DUP3 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x619 JUMP JUMPDEST DUP1 PUSH2 0x5F8 DUP5 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x609 SWAP3 SWAP2 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E5 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x72A DUP4 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x751 JUMPI POP PUSH2 0x751 DUP2 DUP6 PUSH2 0x620 JUMP JUMPDEST DUP1 PUSH2 0x775 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x76A DUP5 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x790 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x818 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x825 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA82 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x838 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9C7 DUP5 DUP5 DUP5 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x9D3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9FC DUP4 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1C PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA46 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA50 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAC2 SWAP1 DUP5 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAFF SWAP1 DUP5 SWAP1 PUSH2 0x1106 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB4E SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB89 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB86 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBE6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x108B JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x775 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC4A JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC76 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC94 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xCAC JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xCC0 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCD2 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x24B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x619 DUP2 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD31 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD19 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD52 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x619 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCA DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF6 DUP5 PUSH2 0xD92 JUMP JUMPDEST SWAP3 POP PUSH2 0xE04 PUSH1 0x20 DUP6 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x619 DUP3 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4B DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA0 DUP6 PUSH2 0xD92 JUMP JUMPDEST SWAP4 POP PUSH2 0xEAE PUSH1 0x20 DUP7 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF8 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF20 PUSH2 0xE6B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF79 DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH2 0xF87 PUSH1 0x20 DUP5 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFC4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1029 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD16 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x103D DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD16 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x10DD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x114C SWAP1 DUP4 ADD DUP5 PUSH2 0xD3A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x619 DUP2 PUSH2 0xCE3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xD767DB8DA757096BFDCABB4947ECAE2CECEEC54932 PUSH4 0x76CE67AA PUSH19 0xC1E90D9C64736F6C6343000811003300000000 ",
							"sourceMap": "628:16327:1:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:5;:13;1464:5;1456;:13;:::i;:::-;-1:-1:-1;1479:7:1;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;628:16327;;14:127:14;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:14;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:14;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:14:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:14;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:14;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:14;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:14;;;3992:26;3943:89;-1:-1:-1;;2747:1:14;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:14;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:14;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:14;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:14:o;:::-;628:16327:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1056": {
									"entryPoint": null,
									"id": 1056,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_889": {
									"entryPoint": 1712,
									"id": 889,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_326": {
									"entryPoint": null,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1043": {
									"entryPoint": 2690,
									"id": 1043,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_997": {
									"entryPoint": 2826,
									"id": 997,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_558": {
									"entryPoint": null,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_592": {
									"entryPoint": 1822,
									"id": 592,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1560": {
									"entryPoint": null,
									"id": 1560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_540": {
									"entryPoint": null,
									"id": 540,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_935": {
									"entryPoint": 1614,
									"id": 935,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_527": {
									"entryPoint": 2492,
									"id": 527,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_921": {
									"entryPoint": 2286,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_865": {
									"entryPoint": 1917,
									"id": 865,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_369": {
									"entryPoint": 778,
									"id": 369,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_230": {
									"entryPoint": 1232,
									"id": 230,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_387": {
									"entryPoint": 739,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_422": {
									"entryPoint": 1568,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1236": {
									"entryPoint": null,
									"id": 1236,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2557": {
									"entryPoint": 3083,
									"id": 2557,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_268": {
									"entryPoint": 593,
									"id": 268,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_258": {
									"entryPoint": 1136,
									"id": 258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_468": {
									"entryPoint": 1109,
									"id": 468,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_498": {
									"entryPoint": 1396,
									"id": 498,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_404": {
									"entryPoint": 1381,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1842": {
									"entryPoint": null,
									"id": 1842,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_206": {
									"entryPoint": 511,
									"id": 206,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_278": {
									"entryPoint": 1366,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1702": {
									"entryPoint": 2543,
									"id": 1702,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_317": {
									"entryPoint": 1452,
									"id": 317,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_449": {
									"entryPoint": 1060,
									"id": 449,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4119,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4377,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3350,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3691,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10527:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:14",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:14",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:14"
															},
															"nodeType": "YulIf",
															"src": "68:71:14"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:14",
														"type": ""
													}
												],
												"src": "14:131:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:14"
															},
															"nodeType": "YulIf",
															"src": "229:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:14",
														"type": ""
													}
												],
												"src": "150:245:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:14",
														"type": ""
													}
												],
												"src": "400:187:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:14",
																"statements": []
															},
															"src": "687:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:14",
														"type": ""
													}
												],
												"src": "592:250:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:14",
														"type": ""
													}
												],
												"src": "847:271:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:14",
														"type": ""
													}
												],
												"src": "1123:220:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:14"
															},
															"nodeType": "YulIf",
															"src": "1428:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:14",
														"type": ""
													}
												],
												"src": "1348:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:14",
														"type": ""
													}
												],
												"src": "1533:203:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:14"
															},
															"nodeType": "YulIf",
															"src": "1838:70:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:14",
														"type": ""
													}
												],
												"src": "1741:173:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:14"
															},
															"nodeType": "YulIf",
															"src": "2016:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:14",
														"type": ""
													}
												],
												"src": "1919:254:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2282:224:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2328:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2340:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2330:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2330:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2330:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2303:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2312:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2324:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2295:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:32:14"
															},
															"nodeType": "YulIf",
															"src": "2292:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2353:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2382:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2363:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2363:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2401:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2445:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2430:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2411:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2458:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2485:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2496:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2468:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2232:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2243:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2255:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2263:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2271:6:14",
														"type": ""
													}
												],
												"src": "2178:328:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2581:116:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2627:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2639:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2629:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2629:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2629:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2602:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2598:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2598:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2623:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2594:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:32:14"
															},
															"nodeType": "YulIf",
															"src": "2591:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2652:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2547:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2558:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2570:6:14",
														"type": ""
													}
												],
												"src": "2511:186:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2803:76:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2813:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2825:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2836:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2821:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2813:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2855:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2866:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2848:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2772:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2783:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2794:4:14",
														"type": ""
													}
												],
												"src": "2702:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3014:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:32:14"
															},
															"nodeType": "YulIf",
															"src": "2978:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3039:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:32:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3185:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:40:14"
															},
															"nodeType": "YulIf",
															"src": "3141:60:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3220:5:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2926:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2937:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2949:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2957:6:14",
														"type": ""
													}
												],
												"src": "2884:347:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3268:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3498:1008:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3545:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:33:14"
															},
															"nodeType": "YulIf",
															"src": "3508:53:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3570:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3580:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3628:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3675:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3702:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3698:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3726:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3730:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3781:28:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3791:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3836:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3848:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3838:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3838:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3832:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3821:14:14"
															},
															"nodeType": "YulIf",
															"src": "3818:34:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3861:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:22:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3865:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3941:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3953:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3943:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3943:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3920:2:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3916:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3931:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:35:14"
															},
															"nodeType": "YulIf",
															"src": "3902:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3966:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3989:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3976:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:16:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3970:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4015:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4007:2:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4011:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4004:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:10:14"
															},
															"nodeType": "YulIf",
															"src": "4001:36:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4046:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:7:14"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4050:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4072:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4150:2:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4154:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4146:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4146:13:14"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4161:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4142:22:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4166:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4138:31:14"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4171:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4134:40:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:53:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4108:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4234:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4236:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4236:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4193:10:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4213:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4210:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:46:14"
															},
															"nodeType": "YulIf",
															"src": "4184:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4276:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:14"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:18:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:18:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4360:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4337:2:14"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4341:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4333:11:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4329:20:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4351:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4326:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:33:14"
															},
															"nodeType": "YulIf",
															"src": "4323:53:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4402:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4398:15:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4419:2:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4415:11:14"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4428:2:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4385:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4385:46:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:14"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4463:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4451:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4451:15:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4447:24:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4440:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:16:14",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4494:6:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3440:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3451:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3463:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3471:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3479:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3487:6:14",
														"type": ""
													}
												],
												"src": "3368:1138:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4598:173:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4644:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4646:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4619:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:32:14"
															},
															"nodeType": "YulIf",
															"src": "4608:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4669:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4679:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4717:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4746:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4727:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4556:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4567:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4579:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4587:6:14",
														"type": ""
													}
												],
												"src": "4511:260:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4831:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4841:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4872:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4902:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4898:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4876:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4949:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4951:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4965:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4973:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4961:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4961:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:26:14"
															},
															"nodeType": "YulIf",
															"src": "4919:61:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5039:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5072:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5063:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5063:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5053:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5107:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5135:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5125:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4995:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5015:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5015:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:38:14"
															},
															"nodeType": "YulIf",
															"src": "4989:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4811:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4820:6:14",
														"type": ""
													}
												],
												"src": "4776:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5335:223:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5345:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5382:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:14",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5375:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5375:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5441:34:14",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:14"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5512:3:14",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5485:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5485:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5525:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5537:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5533:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5533:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5525:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5312:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:14",
														"type": ""
													}
												],
												"src": "5161:397:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5737:251:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5754:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5747:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5747:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5799:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5804:2:14",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5777:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5827:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5838:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5823:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5823:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5843:34:14",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5816:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5816:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5898:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5909:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5894:18:14"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5914:31:14",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5887:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5887:59:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5887:59:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5955:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5967:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5978:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5955:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5714:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5728:4:14",
														"type": ""
													}
												],
												"src": "5563:425:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6167:235:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6184:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6195:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6177:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6177:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6218:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6229:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6214:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6214:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6234:2:14",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6207:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6257:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6268:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6253:18:14"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6273:34:14",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6246:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6246:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6324:18:14"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6344:15:14",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6317:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6317:43:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6369:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6381:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6392:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6377:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6369:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6144:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6158:4:14",
														"type": ""
													}
												],
												"src": "5993:409:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6581:174:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6598:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6591:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6632:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6643:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6628:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6648:2:14",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6621:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6621:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6671:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6682:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6667:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6667:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6687:26:14",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:54:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6660:54:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6723:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6735:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6723:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6558:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6572:4:14",
														"type": ""
													}
												],
												"src": "6407:348:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6934:231:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6951:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6962:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6944:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6985:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6996:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6981:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6981:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7001:2:14",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6974:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6974:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6974:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7024:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7035:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7020:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7020:18:14"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7040:34:14",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7013:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7013:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:14"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7111:11:14",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:39:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:39:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7132:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7144:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7155:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7140:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7140:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7132:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6911:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6925:4:14",
														"type": ""
													}
												],
												"src": "6760:405:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7357:309:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7367:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7381:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7381:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7371:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7442:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7450:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7438:17:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7457:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7462:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7403:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7403:66:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7403:66:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7478:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7495:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7500:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7491:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7491:16:14"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "7482:5:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7516:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7538:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7532:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7532:13:14"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "7520:8:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7593:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7601:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7589:17:14"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "7608:5:14"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "7615:8:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7554:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7554:70:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7554:70:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7633:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "7644:5:14"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "7651:8:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7640:20:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7633:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7325:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7330:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7338:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7349:3:14",
														"type": ""
													}
												],
												"src": "7170:496:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7845:227:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7862:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7873:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7855:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7855:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7896:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7907:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7912:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7885:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7885:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7935:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7946:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7931:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7931:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7951:34:14",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7924:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7924:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7924:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8006:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8017:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8002:18:14"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8022:7:14",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7995:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7995:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8039:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8062:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8039:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7822:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7836:4:14",
														"type": ""
													}
												],
												"src": "7671:401:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8251:226:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8268:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8261:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8261:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8302:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8313:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8298:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8318:2:14",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8291:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8291:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8341:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8352:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8337:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8337:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8357:34:14",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8330:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8330:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8330:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8412:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8423:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8408:18:14"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8428:6:14",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8401:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8401:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8444:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8456:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8467:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8452:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8452:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8444:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8228:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8242:4:14",
														"type": ""
													}
												],
												"src": "8077:400:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8656:175:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8673:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8684:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8666:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8666:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8703:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8703:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8723:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8696:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8696:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8696:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8746:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8757:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8742:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8742:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8762:27:14",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8735:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8735:55:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8735:55:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8799:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8811:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8822:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8807:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8633:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8647:4:14",
														"type": ""
													}
												],
												"src": "8482:349:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9010:240:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9027:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9038:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9020:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9020:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9061:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9072:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9077:2:14",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9050:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9050:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9100:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9111:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9096:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9096:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9116:34:14",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9089:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9089:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9182:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9167:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9167:18:14"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9187:20:14",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9160:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9160:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9217:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9240:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9225:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9225:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9217:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8987:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9001:4:14",
														"type": ""
													}
												],
												"src": "8836:414:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9287:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9304:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9311:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9316:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9307:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9297:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9297:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9297:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9344:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9347:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9337:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9337:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9368:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9371:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9361:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9361:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9361:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9255:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9419:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9436:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9443:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9448:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9439:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9429:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9429:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9429:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9476:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9479:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9469:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9469:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9469:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9500:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9503:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9493:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9493:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9493:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9387:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9568:79:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9578:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9590:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9593:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9586:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9586:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9578:4:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9619:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9621:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9621:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9621:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "9610:4:14"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9616:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9607:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9607:11:14"
															},
															"nodeType": "YulIf",
															"src": "9604:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9550:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9553:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9559:4:14",
														"type": ""
													}
												],
												"src": "9519:128:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9700:77:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9710:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9721:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9724:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9717:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9717:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9710:3:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9749:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9751:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9751:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9751:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9741:1:14"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9744:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9738:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9738:10:14"
															},
															"nodeType": "YulIf",
															"src": "9735:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9683:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9686:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9692:3:14",
														"type": ""
													}
												],
												"src": "9652:125:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9985:286:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9995:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10013:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10018:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10009:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10009:11:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10022:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10005:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10005:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9999:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10040:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10055:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10063:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10051:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10051:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10033:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10033:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10087:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10098:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10083:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10083:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10107:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10115:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10103:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10103:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10076:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10076:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10076:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10139:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10150:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10135:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10135:18:14"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10155:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10128:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10128:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10182:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10193:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10178:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10178:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10198:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10171:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10171:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10171:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10211:54:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10237:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10249:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10260:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10245:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10245:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "10219:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10219:46:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10211:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9930:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9941:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9949:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9957:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9965:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9976:4:14",
														"type": ""
													}
												],
												"src": "9782:489:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10356:169:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10402:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10411:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10414:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10404:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10404:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10404:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10377:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10386:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10373:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10373:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10398:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10369:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10369:32:14"
															},
															"nodeType": "YulIf",
															"src": "10366:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10427:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10446:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10440:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10440:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10431:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10489:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "10465:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10465:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10465:30:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10504:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10514:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10504:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10322:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10333:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10345:6:14",
														"type": ""
													}
												],
												"src": "10276:249:14"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610cf9565b6101ff565b60405190151581526020015b60405180910390f35b610104610251565b6040516100f39190610d66565b61012461011f366004610d79565b6102e3565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610dae565b61030a565b005b61014f61015f366004610dd8565b610424565b61014f610172366004610dd8565b610455565b610124610185366004610d79565b610470565b61019d610198366004610e14565b6104d0565b6040519081526020016100f3565b610104610556565b61014f6101c1366004610e2f565b610565565b61014f6101d4366004610e81565b610574565b6101046101e7366004610d79565b6105ac565b6100e76101fa366004610f5d565b610620565b60006001600160e01b031982166380ac58cd60e01b148061023057506001600160e01b03198216635b5e139f60e01b145b8061024b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461026090610f90565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610f90565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b60006102ee8261064e565b506000908152600460205260409020546001600160a01b031690565b600061031582610470565b9050806001600160a01b0316836001600160a01b0316036103875760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103a357506103a38133610620565b6104155760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161037e565b61041f83836106b0565b505050565b61042e338261071e565b61044a5760405162461bcd60e51b815260040161037e90610fca565b61041f83838361077d565b61041f83838360405180602001604052806000815250610574565b6000818152600260205260408120546001600160a01b03168061024b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161037e565b60006001600160a01b03821661053a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161037e565b506001600160a01b031660009081526003602052604090205490565b60606001805461026090610f90565b6105703383836108ee565b5050565b61057e338361071e565b61059a5760405162461bcd60e51b815260040161037e90610fca565b6105a6848484846109bc565b50505050565b60606105b78261064e565b60006105ce60408051602081019091526000815290565b905060008151116105ee5760405180602001604052806000815250610619565b806105f8846109ef565b604051602001610609929190611017565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b03166106ad5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161037e565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906106e582610470565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061072a83610470565b9050806001600160a01b0316846001600160a01b0316148061075157506107518185610620565b806107755750836001600160a01b031661076a846102e3565b6001600160a01b0316145b949350505050565b826001600160a01b031661079082610470565b6001600160a01b0316146107b65760405162461bcd60e51b815260040161037e90611046565b6001600160a01b0382166108185760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161037e565b6108258383836001610a82565b826001600160a01b031661083882610470565b6001600160a01b03161461085e5760405162461bcd60e51b815260040161037e90611046565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03160361094f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161037e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6109c784848461077d565b6109d384848484610b0a565b6105a65760405162461bcd60e51b815260040161037e9061108b565b606060006109fc83610c0b565b600101905060008167ffffffffffffffff811115610a1c57610a1c610e6b565b6040519080825280601f01601f191660200182016040528015610a46576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a5057509392505050565b60018111156105a6576001600160a01b03841615610ac8576001600160a01b03841660009081526003602052604081208054839290610ac29084906110f3565b90915550505b6001600160a01b038316156105a6576001600160a01b03831660009081526003602052604081208054839290610aff908490611106565b909155505050505050565b60006001600160a01b0384163b15610c0057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610b4e903390899088908890600401611119565b6020604051808303816000875af1925050508015610b89575060408051601f3d908101601f19168201909252610b8691810190611156565b60015b610be6573d808015610bb7576040519150601f19603f3d011682016040523d82523d6000602084013e610bbc565b606091505b508051600003610bde5760405162461bcd60e51b815260040161037e9061108b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610775565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c4a5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c76576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c9457662386f26fc10000830492506010015b6305f5e1008310610cac576305f5e100830492506008015b6127108310610cc057612710830492506004015b60648310610cd2576064830492506002015b600a831061024b5760010192915050565b6001600160e01b0319811681146106ad57600080fd5b600060208284031215610d0b57600080fd5b813561061981610ce3565b60005b83811015610d31578181015183820152602001610d19565b50506000910152565b60008151808452610d52816020860160208601610d16565b601f01601f19169290920160200192915050565b6020815260006106196020830184610d3a565b600060208284031215610d8b57600080fd5b5035919050565b80356001600160a01b0381168114610da957600080fd5b919050565b60008060408385031215610dc157600080fd5b610dca83610d92565b946020939093013593505050565b600080600060608486031215610ded57600080fd5b610df684610d92565b9250610e0460208501610d92565b9150604084013590509250925092565b600060208284031215610e2657600080fd5b61061982610d92565b60008060408385031215610e4257600080fd5b610e4b83610d92565b915060208301358015158114610e6057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610e9757600080fd5b610ea085610d92565b9350610eae60208601610d92565b925060408501359150606085013567ffffffffffffffff80821115610ed257600080fd5b818701915087601f830112610ee657600080fd5b813581811115610ef857610ef8610e6b565b604051601f8201601f19908116603f01168101908382118183101715610f2057610f20610e6b565b816040528281528a6020848701011115610f3957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610f7057600080fd5b610f7983610d92565b9150610f8760208401610d92565b90509250929050565b600181811c90821680610fa457607f821691505b602082108103610fc457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611029818460208801610d16565b83519083019061103d818360208801610d16565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561024b5761024b6110dd565b8082018082111561024b5761024b6110dd565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061114c90830184610d3a565b9695505050505050565b60006020828403121561116857600080fd5b815161061981610ce356fea264697066735822122074d767db8da757096bfdcabb4947ecae2ceceec549326376ce67aa72c1e90d9c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xDAE JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE14 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x556 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE81 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xF5D JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x230 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x24B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xF90 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xF90 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE DUP3 PUSH2 0x64E JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315 DUP3 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3A3 JUMPI POP PUSH2 0x3A3 DUP2 CALLER PUSH2 0x620 JUMP JUMPDEST PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 PUSH2 0x6B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x42E CALLER DUP3 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 DUP4 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x574 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x570 CALLER DUP4 DUP4 PUSH2 0x8EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x57E CALLER DUP4 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x5A6 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9BC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5B7 DUP3 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x619 JUMP JUMPDEST DUP1 PUSH2 0x5F8 DUP5 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x609 SWAP3 SWAP2 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E5 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x72A DUP4 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x751 JUMPI POP PUSH2 0x751 DUP2 DUP6 PUSH2 0x620 JUMP JUMPDEST DUP1 PUSH2 0x775 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x76A DUP5 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x790 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x818 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x825 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA82 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x838 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9C7 DUP5 DUP5 DUP5 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x9D3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9FC DUP4 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1C PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA46 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA50 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAC2 SWAP1 DUP5 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAFF SWAP1 DUP5 SWAP1 PUSH2 0x1106 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB4E SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB89 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB86 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1156 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBE6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x108B JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x775 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC4A JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC76 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC94 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xCAC JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xCC0 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCD2 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x24B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x619 DUP2 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD31 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD19 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD52 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x619 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCA DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF6 DUP5 PUSH2 0xD92 JUMP JUMPDEST SWAP3 POP PUSH2 0xE04 PUSH1 0x20 DUP6 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x619 DUP3 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4B DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA0 DUP6 PUSH2 0xD92 JUMP JUMPDEST SWAP4 POP PUSH2 0xEAE PUSH1 0x20 DUP7 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF8 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF20 PUSH2 0xE6B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF79 DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH2 0xF87 PUSH1 0x20 DUP5 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFA4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFC4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1029 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD16 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x103D DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD16 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x10DD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x114C SWAP1 DUP4 ADD DUP5 PUSH2 0xD3A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x619 DUP2 PUSH2 0xCE3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xD767DB8DA757096BFDCABB4947ECAE2CECEEC54932 PUSH4 0x76CE67AA PUSH19 0xC1E90D9C64736F6C6343000811003300000000 ",
							"sourceMap": "628:16327:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:14;;558:22;540:41;;528:2;513:18;1570:300:1;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:14;;;1679:51;;1667:2;1652:18;3935:167:1;1533:203:14;3468:406:1;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;:::i;:::-;;:::i;5004:179::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:14;;;2836:2;2821:18;1929:204:1;2702:177:14;2633:102:1;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5249:314::-;;;;;;:::i;:::-;;:::i;2801:276::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:1;;-1:-1:-1;;;1707:40:1;;:104;;-1:-1:-1;;;;;;;1763:48:1;;-1:-1:-1;;;1763:48:1;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1827:36:1;1688:175;1570:300;-1:-1:-1;;1570:300:1:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:1;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:1;:2;-1:-1:-1;;;;;3605:11:1;;3597:57;;;;-1:-1:-1;;;3597:57:1;;5363:2:14;3597:57:1;;;5345:21:14;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:14;;;5485:31;5533:19;;3597:57:1;;;;;;;;;719:10:6;-1:-1:-1;;;;;3686:21:1;;;;:62;;-1:-1:-1;3711:37:1;3728:5;719:10:6;4388:162:1;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:1;;5765:2:14;3665:170:1;;;5747:21:14;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:1;5563:425:14;3665:170:1;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;719:10:6;4834:7:1;4801:18;:41::i;:::-;4793:99;;;;-1:-1:-1;;;4793:99:1;;;;;;;:::i;:::-;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:1;;2324:56;;;;-1:-1:-1;;;2324:56:1;;6609:2:14;2324:56:1;;;6591:21:14;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:14;;;6660:54;6731:18;;2324:56:1;6407:348:14;1929:204:1;2001:7;-1:-1:-1;;;;;2028:19:1;;2020:73;;;;-1:-1:-1;;;2020:73:1;;6962:2:14;2020:73:1;;;6944:21:14;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:14;;;7084:39;7140:19;;2020:73:1;6760:405:14;2020:73:1;-1:-1:-1;;;;;;2110:16:1;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:6;4296:8:1;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;719:10:6;5450:7:1;5417:18;:41::i;:::-;5409:99;;;;-1:-1:-1;;;5409:99:1;;;;;;;:::i;:::-;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:1;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:1:o;4388:162::-;-1:-1:-1;;;;;4508:25:1;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;13466:133::-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:1;13539:53;;;;-1:-1:-1;;;13539:53:1;;6609:2:14;13539:53:1;;;6591:21:14;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:14;;;6660:54;6731:18;;13539:53:1;6407:348:14;13539:53:1;13466:133;:::o;12768:171::-;12842:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12842:29:1;-1:-1:-1;;;;;12842:29:1;;;;;;;;:24;;12895:23;12842:24;12895:14;:23::i;:::-;-1:-1:-1;;;;;12886:46:1;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;-1:-1:-1;;;;;7706:16:1;:7;-1:-1:-1;;;;;7706:16:1;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:87;;;;7786:7;-1:-1:-1;;;;;7762:31:1;:20;7774:7;7762:11;:20::i;:::-;-1:-1:-1;;;;;7762:31:1;;7706:87;7698:96;7540:261;-1:-1:-1;;;;7540:261:1:o;11423:1233::-;11577:4;-1:-1:-1;;;;;11550:31:1;:23;11565:7;11550:14;:23::i;:::-;-1:-1:-1;;;;;11550:31:1;;11542:81;;;;-1:-1:-1;;;11542:81:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;11641:16:1;;11633:65;;;;-1:-1:-1;;;11633:65:1;;8279:2:14;11633:65:1;;;8261:21:14;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:14;;;8401:34;8452:19;;11633:65:1;8077:400:14;11633:65:1;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;-1:-1:-1;;;;;11851:31:1;:23;11866:7;11851:14;:23::i;:::-;-1:-1:-1;;;;;11851:31:1;;11843:81;;;;-1:-1:-1;;;11843:81:1;;;;;;;:::i;:::-;11993:24;;;;:15;:24;;;;;;;;11986:31;;-1:-1:-1;;;;;;11986:31:1;;;;;;-1:-1:-1;;;;;12461:15:1;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12461:20:1;;;12495:13;;;;;;;;;:18;;11986:31;12495:18;;;12533:16;;;:7;:16;;;;;;:21;;;;;;;;;;12570:27;;12009:7;;12570:27;;;3538:336;3468:406;;:::o;13075:307::-;13225:8;-1:-1:-1;;;;;13216:17:1;:5;-1:-1:-1;;;;;13216:17:1;;13208:55;;;;-1:-1:-1;;;13208:55:1;;8684:2:14;13208:55:1;;;8666:21:14;8723:2;8703:18;;;8696:30;8762:27;8742:18;;;8735:55;8807:18;;13208:55:1;8482:349:14;13208:55:1;-1:-1:-1;;;;;13273:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13273:46:1;;;;;;;;;;13334:41;;540::14;;;13334::1;;513:18:14;13334:41:1;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;-1:-1:-1;;;6612:110:1;;;;;;;:::i;415:696:8:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:8;-1:-1:-1;572:41:8;-1:-1:-1;733:28:8;;;749:2;733:28;788:280;-1:-1:-1;;819:5:8;-1:-1:-1;;;953:2:8;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:8;788:280;1032:21;-1:-1:-1;1088:6:8;415:696;-1:-1:-1;;;415:696:8:o;15698:396:1:-;15882:1;15870:9;:13;15866:222;;;-1:-1:-1;;;;;15903:18:1;;;15899:85;;-1:-1:-1;;;;;15941:15:1;;;;;;:9;:15;;;;;:28;;15960:9;;15941:15;:28;;15960:9;;15941:28;:::i;:::-;;;;-1:-1:-1;;15899:85:1;-1:-1:-1;;;;;16001:16:1;;;15997:81;;-1:-1:-1;;;;;16037:13:1;;;;;;:9;:13;;;;;:26;;16054:9;;16037:13;:26;;16054:9;;16037:26;:::i;:::-;;;;-1:-1:-1;;15698:396:1;;;;:::o;14151:831::-;14300:4;-1:-1:-1;;;;;14320:13:1;;1465:19:5;:23;14316:660:1;;14355:71;;-1:-1:-1;;;14355:71:1;;-1:-1:-1;;;;;14355:36:1;;;;;:71;;719:10:6;;14406:4:1;;14412:7;;14421:4;;14355:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14355:71:1;;;;;;;;-1:-1:-1;;14355:71:1;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:6;:13;14610:1;14593:18;14589:321;;14635:60;;-1:-1:-1;;;14635:60:1;;;;;;;:::i;14589:321::-;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;-1:-1:-1;;;;;;14476:51:1;-1:-1:-1;;;14476:51:1;;-1:-1:-1;14469:58:1;;14316:660;-1:-1:-1;14961:4:1;14151:831;;;;;;:::o;9889:890:11:-;9942:7;;-1:-1:-1;;;10017:15:11;;10013:99;;-1:-1:-1;;;10052:15:11;;;-1:-1:-1;10095:2:11;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:11;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:11;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:11;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:11;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:11;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:11:o;14:131:14:-;-1:-1:-1;;;;;;88:32:14;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:14;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:14;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:14:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:14;;1348:180;-1:-1:-1;1348:180:14:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:14;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:14:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:14;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:14;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:496::-;7349:3;7387:6;7381:13;7403:66;7462:6;7457:3;7450:4;7442:6;7438:17;7403:66;:::i;:::-;7532:13;;7491:16;;;;7554:70;7532:13;7491:16;7601:4;7589:17;;7554:70;:::i;:::-;7640:20;;7170:496;-1:-1:-1;;;;7170:496:14:o;7671:401::-;7873:2;7855:21;;;7912:2;7892:18;;;7885:30;7951:34;7946:2;7931:18;;7924:62;-1:-1:-1;;;8017:2:14;8002:18;;7995:35;8062:3;8047:19;;7671:401::o;8836:414::-;9038:2;9020:21;;;9077:2;9057:18;;;9050:30;9116:34;9111:2;9096:18;;9089:62;-1:-1:-1;;;9182:2:14;9167:18;;9160:48;9240:3;9225:19;;8836:414::o;9387:127::-;9448:10;9443:3;9439:20;9436:1;9429:31;9479:4;9476:1;9469:15;9503:4;9500:1;9493:15;9519:128;9586:9;;;9607:11;;;9604:37;;;9621:18;;:::i;9652:125::-;9717:9;;;9738:10;;;9735:36;;;9751:18;;:::i;9782:489::-;-1:-1:-1;;;;;10051:15:14;;;10033:34;;10103:15;;10098:2;10083:18;;10076:43;10150:2;10135:18;;10128:34;;;10198:3;10193:2;10178:18;;10171:31;;;9976:4;;10219:46;;10245:19;;10237:6;10219:46;:::i;:::-;10211:54;9782:489;-1:-1:-1;;;;;;9782:489:14:o;10276:249::-;10345:6;10398:2;10386:9;10377:7;10373:23;10369:32;10366:52;;;10414:1;10411;10404:12;10366:52;10446:9;10440:16;10465:30;10489:5;10465:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "904200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4769",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2561",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "511",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "24513",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 14,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 14,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122074d767db8da757096bfdcabb4947ecae2ceceec549326376ce67aa72c1e90d9c64736f6c63430008110033",
									".code": [
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2836,
											"end": 2838,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2702,
											"end": 2879,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4030,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5366,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5441,
											"end": 5475,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5414,
											"end": 5476,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5485,
											"end": 5516,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5768,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"source": 14,
											"value": "3D"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5843,
											"end": 5877,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5878,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5914,
											"end": 5945,
											"name": "PUSH",
											"source": 14,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5887,
											"end": 5946,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5563,
											"end": 5988,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4801,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4793,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4903,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5154,
											"end": 5158,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5162,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5164,
											"end": 5171,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5137,
											"end": 5176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6962,
											"end": 6964,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6965,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7001,
											"end": 7003,
											"name": "PUSH",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6974,
											"end": 7004,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7040,
											"end": 7074,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7013,
											"end": 7075,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7084,
											"end": 7123,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6760,
											"end": 7165,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4263,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5417,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5409,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5549,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5555,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5518,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13466,
											"end": 13599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12857,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 12895,
											"end": 12918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7680,
											"end": 7687,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 7665,
											"end": 7688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7713,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7743,
											"end": 7748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7750,
											"end": 7757,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 7726,
											"end": 7758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7786,
											"end": 7793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7774,
											"end": 7781,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7762,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7762,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7794,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7540,
											"end": 7801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11577,
											"end": 11581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 11565,
											"end": 11572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 11550,
											"end": 11573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 11542,
											"end": 11623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8261,
											"end": 8282,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8318,
											"end": 8320,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8291,
											"end": 8321,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8357,
											"end": 8391,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8330,
											"end": 8392,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8401,
											"end": 8435,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8077,
											"end": 8477,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 11730,
											"end": 11734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11749,
											"end": 11750,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11709,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 11709,
											"end": 11751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 11882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 11866,
											"end": 11873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 11851,
											"end": 11874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 11843,
											"end": 11924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12008,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12470,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12540,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12009,
											"end": 12016,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12009,
											"end": 12016,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13216,
											"end": 13221,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8684,
											"end": 8686,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8666,
											"end": 8687,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8723,
											"end": 8725,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8696,
											"end": 8726,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8735,
											"end": 8790,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8482,
											"end": 8831,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13291,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6584,
											"end": 6588,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6592,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6601,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6574,
											"end": 6602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6643,
											"end": 6647,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6662,
											"end": 6666,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6620,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6612,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 471,
											"end": 484,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 537,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 537,
											"end": 554,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 520,
											"end": 558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 520,
											"end": 558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 595,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 572,
											"end": 613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 733,
											"end": 761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 733,
											"end": 761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 819,
											"end": 824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 942,
											"end": 956,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 942,
											"end": 956,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 967,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 924,
											"end": 968,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 415,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15882,
											"end": 15883,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15870,
											"end": 15879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15950,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 15941,
											"end": 15969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15997,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 15997,
											"end": 16078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 16037,
											"end": 16063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 16094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14300,
											"end": 14304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14412,
											"end": 14419,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14412,
											"end": 14419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14425,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 14355,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14355,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14606,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14610,
											"end": 14611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14593,
											"end": 14611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 14635,
											"end": 14695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14862,
											"end": 14868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14856,
											"end": 14869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14847,
											"end": 14853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14843,
											"end": 14845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14839,
											"end": 14854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14832,
											"end": 14870,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14961,
											"end": 14965,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10129,
											"end": 10144,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10241,
											"end": 10256,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10285,
											"end": 10291,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10362,
											"end": 10367,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10353,
											"end": 10367,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10396,
											"end": 10401,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10462,
											"end": 10476,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10614,
											"end": 10619,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 10680,
											"end": 10685,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9889,
											"end": 10779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2299,
											"end": 2322,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2327,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 2363,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2445,
											"end": 2447,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 2411,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2496,
											"end": 2498,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2468,
											"end": 2500,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2570,
											"end": 2576,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2625,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 2662,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3515,
											"end": 3538,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3511,
											"end": 3544,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 3628,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3835,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 3929,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3912,
											"end": 3939,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3943,
											"end": 3955,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 4017,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 4138,
											"end": 4169,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4134,
											"end": 4174,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4187,
											"end": 4233,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 4236,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4326,
											"end": 4359,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4415,
											"end": 4426,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4385,
											"end": 4431,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4451,
											"end": 4466,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4440,
											"end": 4475,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4611,
											"end": 4643,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4658,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 4679,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 4727,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "tag",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5084,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4776,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6234,
											"end": 6236,
											"name": "PUSH",
											"source": 14,
											"value": "2D"
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6207,
											"end": 6237,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 6268,
											"end": 6270,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6246,
											"end": 6308,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6317,
											"end": 6360,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6392,
											"end": 6395,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5993,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "tag",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7387,
											"end": 7393,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7381,
											"end": 7394,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7462,
											"end": 7468,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7457,
											"end": 7460,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7450,
											"end": 7454,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7442,
											"end": 7448,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 7438,
											"end": 7455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 7403,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 7554,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7170,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "tag",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7873,
											"end": 7875,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7912,
											"end": 7914,
											"name": "PUSH",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7885,
											"end": 7915,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7951,
											"end": 7985,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7924,
											"end": 7986,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8017,
											"end": 8019,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7995,
											"end": 8030,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8062,
											"end": 8065,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7671,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9077,
											"end": 9079,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9050,
											"end": 9080,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9116,
											"end": 9150,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 9111,
											"end": 9113,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9089,
											"end": 9151,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9182,
											"end": 9184,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9160,
											"end": 9208,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9240,
											"end": 9243,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8836,
											"end": 9250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9387,
											"end": 9514,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 9387,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9448,
											"end": 9458,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 9443,
											"end": 9446,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 9439,
											"end": 9459,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 9436,
											"end": 9437,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9429,
											"end": 9460,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9479,
											"end": 9483,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 9476,
											"end": 9477,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9469,
											"end": 9484,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9503,
											"end": 9507,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9500,
											"end": 9501,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9508,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9519,
											"end": 9647,
											"name": "tag",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 9519,
											"end": 9647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 9641,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 9604,
											"end": 9641,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 9621,
											"end": 9639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 9777,
											"name": "tag",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 9652,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9738,
											"end": 9748,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9738,
											"end": 9748,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9738,
											"end": 9748,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9735,
											"end": 9771,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9735,
											"end": 9771,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 9735,
											"end": 9771,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 9751,
											"end": 9769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9782,
											"end": 10271,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 9782,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10051,
											"end": 10066,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10051,
											"end": 10066,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10051,
											"end": 10066,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10103,
											"end": 10118,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10103,
											"end": 10118,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10098,
											"end": 10100,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 10119,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10150,
											"end": 10152,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10198,
											"end": 10201,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10193,
											"end": 10195,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9976,
											"end": 9980,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 9980,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10245,
											"end": 10264,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10245,
											"end": 10264,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10237,
											"end": 10243,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 10219,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10211,
											"end": 10265,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 9782,
											"end": 10271,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9782,
											"end": 10271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10276,
											"end": 10525,
											"name": "tag",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 10276,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10345,
											"end": 10351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10400,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10386,
											"end": 10395,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10377,
											"end": 10384,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10373,
											"end": 10396,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10369,
											"end": 10401,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10414,
											"end": 10415,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10404,
											"end": 10416,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 10455,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10465,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 10489,
											"end": 10494,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10465,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 10465,
											"end": 10495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SoulBoundToken.sol",
								"contracts/interfaces/ISoulBoundToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 144,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 148,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 152,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SWAP10 MLOAD PUSH26 0x1995B8E449C901C4B4C2BF03AC7D11A0E0A78D1677050F81215C 0xD7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8964:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SWAP10 MLOAD PUSH26 0x1995B8E449C901C4B4C2BF03AC7D11A0E0A78D1677050F81215C 0xD7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8964:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SoulBoundToken.sol",
								"contracts/interfaces/ISoulBoundToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d43d0ef1a472ecbf50bfcb77d2940a7ecaa6b0bb1bd21c66f8a7dfc9bb52b4b864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d43d0ef1a472ecbf50bfcb77d2940a7ecaa6b0bb1bd21c66f8a7dfc9bb52b4b864736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 RETURNDATASIZE 0xE CALL LOG4 PUSH19 0xECBF50BFCB77D2940A7ECAA6B0BB1BD21C66F8 0xA7 0xDF 0xC9 0xBB MSTORE 0xB4 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "424:971:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d43d0ef1a472ecbf50bfcb77d2940a7ecaa6b0bb1bd21c66f8a7dfc9bb52b4b864736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 RETURNDATASIZE 0xE CALL LOG4 PUSH19 0xECBF50BFCB77D2940A7ECAA6B0BB1BD21C66F8 0xA7 0xDF 0xC9 0xBB MSTORE 0xB4 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "424:971:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d43d0ef1a472ecbf50bfcb77d2940a7ecaa6b0bb1bd21c66f8a7dfc9bb52b4b864736f6c63430008110033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SoulBoundToken.sol",
								"contracts/interfaces/ISoulBoundToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bae0126c0f7bb817d0dc49cdfb342cdb8915c73987f523e01b6dccf5af7e146764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bae0126c0f7bb817d0dc49cdfb342cdb8915c73987f523e01b6dccf5af7e146764736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xE0 SLT PUSH13 0xF7BB817D0DC49CDFB342CDB89 ISZERO 0xC7 CODECOPY DUP8 CREATE2 0x23 0xE0 SHL PUSH14 0xCCF5AF7E146764736F6C63430008 GT STOP CALLER ",
							"sourceMap": "188:2065:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;188:2065:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bae0126c0f7bb817d0dc49cdfb342cdb8915c73987f523e01b6dccf5af7e146764736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xE0 SLT PUSH13 0xF7BB817D0DC49CDFB342CDB89 ISZERO 0xC7 CODECOPY DUP8 CREATE2 0x23 0xE0 SHL PUSH14 0xCCF5AF7E146764736F6C63430008 GT STOP CALLER ",
							"sourceMap": "188:2065:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bae0126c0f7bb817d0dc49cdfb342cdb8915c73987f523e01b6dccf5af7e146764736f6c63430008110033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SoulBoundToken.sol",
								"contracts/interfaces/ISoulBoundToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f9b3ebee196cdd7f9d21d5f1b8a981de67d22bfef6e027fce9b5e3fa80a93b7264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9b3ebee196cdd7f9d21d5f1b8a981de67d22bfef6e027fce9b5e3fa80a93b7264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xB3 0xEB 0xEE NOT PUSH13 0xDD7F9D21D5F1B8A981DE67D22B INVALID 0xF6 0xE0 0x27 0xFC 0xE9 0xB5 0xE3 STATICCALL DUP1 0xA9 EXTCODESIZE PUSH19 0x64736F6C634300081100330000000000000000 ",
							"sourceMap": "202:12302:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12302:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9b3ebee196cdd7f9d21d5f1b8a981de67d22bfef6e027fce9b5e3fa80a93b7264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xB3 0xEB 0xEE NOT PUSH13 0xDD7F9D21D5F1B8A981DE67D22B INVALID 0xF6 0xE0 0x27 0xFC 0xE9 0xB5 0xE3 STATICCALL DUP1 0xA9 EXTCODESIZE PUSH19 0x64736F6C634300081100330000000000000000 ",
							"sourceMap": "202:12302:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9b3ebee196cdd7f9d21d5f1b8a981de67d22bfef6e027fce9b5e3fa80a93b7264736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SoulBoundToken.sol",
								"contracts/interfaces/ISoulBoundToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SoulBoundToken.sol": {
				"SoulBoundToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "accessTier",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "accessTier",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "deactivate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "hasActiveSBT",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "hashedIdentity",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "isActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "tier",
									"type": "uint8"
								}
							],
							"name": "modifyLevel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ownerToTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "reactivate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "tier",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "hashed",
									"type": "bytes32"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SoulBoundToken.sol\":266:2813  contract SoulBoundToken is ERC721, Ownable, ISoulBoundToken {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SoulBoundToken.sol\":706:796  constructor() ERC721(\"SoulBoundToken\", \"SBT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x91, 0x29b7bab62137bab7322a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x14d095)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_10:\n    /* \"contracts/SoulBoundToken.sol\":762:789  _tokenIdCounter.increment() */\n  tag_15\n    /* \"contracts/SoulBoundToken.sol\":762:777  _tokenIdCounter */\n  0x07\n    /* \"contracts/SoulBoundToken.sol\":762:787  _tokenIdCounter.increment */\n  or(tag_0_144, shl(0x20, tag_16))\n    /* \"contracts/SoulBoundToken.sol\":762:789  _tokenIdCounter.increment() */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/SoulBoundToken.sol\":266:2813  contract SoulBoundToken is ERC721, Ownable, ISoulBoundToken {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x06\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\ntag_16:\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n  dup1\n  sload\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_22:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_29:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_30:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_24:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_34\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_34:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_35:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_33:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_7:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_41\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1582:1679   */\n  tag_42\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_43\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_45\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_46\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_46:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_37)\n    /* \"#utility.yul\":1810:2473   */\ntag_45:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_49:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_52:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\ntag_26:\n    /* \"contracts/SoulBoundToken.sol\":266:2813  contract SoulBoundToken is ERC721, Ownable, ISoulBoundToken {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SoulBoundToken.sol\":266:2813  contract SoulBoundToken is ERC721, Ownable, ISoulBoundToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb7caec87\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xc12290d2\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xc12290d2\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xb7caec87\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xbdca14cf\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x916b9bef\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x82afd23b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x3355594a\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x42842e0e\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4814f035\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x3355594a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x34566cdf\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39f920ab\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x09df30ec\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_40\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/SoulBoundToken.sol\":2018:2104  function reactivate(uint256 id) public onlyOwner {... */\n    tag_7:\n      tag_52\n      tag_57\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n    tag_8:\n      tag_52\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"contracts/SoulBoundToken.sol\":2455:2564  function hashedIdentity(uint256 id) public view returns (bytes32) {... */\n    tag_9:\n      tag_63\n      tag_64\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_64:\n        /* \"contracts/SoulBoundToken.sol\":2512:2519  bytes32 */\n      0x00\n        /* \"contracts/SoulBoundToken.sol\":2538:2557  _hashedIdentity[id] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SoulBoundToken.sol\":2538:2553  _hashedIdentity */\n      0x0a\n        /* \"contracts/SoulBoundToken.sol\":2538:2557  _hashedIdentity[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/SoulBoundToken.sol\":2455:2564  function hashedIdentity(uint256 id) public view returns (bytes32) {... */\n      jump\n    tag_63:\n      mload(0x40)\n        /* \"#utility.yul\":2657:2682   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2645:2647   */\n      0x20\n        /* \"#utility.yul\":2630:2648   */\n      add\n        /* \"contracts/SoulBoundToken.sol\":2455:2564  function hashedIdentity(uint256 id) public view returns (bytes32) {... */\n      tag_40\n        /* \"#utility.yul\":2511:2688   */\n      jump\n        /* \"contracts/SoulBoundToken.sol\":2124:2223  function accessTier(uint256 id) public view returns (uint8) {... */\n    tag_10:\n      tag_68\n      tag_69\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_69:\n        /* \"contracts/SoulBoundToken.sol\":2177:2182  uint8 */\n      0x00\n        /* \"contracts/SoulBoundToken.sol\":2201:2216  _accessTier[id] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SoulBoundToken.sol\":2201:2212  _accessTier */\n      0x08\n        /* \"contracts/SoulBoundToken.sol\":2201:2216  _accessTier[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/SoulBoundToken.sol\":2124:2223  function accessTier(uint256 id) public view returns (uint8) {... */\n      jump\n    tag_68:\n      mload(0x40)\n        /* \"#utility.yul\":2865:2869   */\n      0xff\n        /* \"#utility.yul\":2853:2870   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2835:2871   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2823:2825   */\n      0x20\n        /* \"#utility.yul\":2808:2826   */\n      add\n        /* \"contracts/SoulBoundToken.sol\":2124:2223  function accessTier(uint256 id) public view returns (uint8) {... */\n      tag_40\n        /* \"#utility.yul\":2693:2877   */\n      jump\n        /* \"contracts/SoulBoundToken.sol\":2570:2690  function hasActiveSBT(address owner) public view returns (bool) {... */\n    tag_11:\n      tag_36\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n    tag_12:\n      tag_52\n      tag_79\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"contracts/SoulBoundToken.sol\":1264:1424  function burn(uint256 tokenId) external {... */\n    tag_13:\n      tag_52\n      tag_82\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/SoulBoundToken.sol\":2696:2811  function ownerToTokenId(address owner) public view returns (uint256) {... */\n    tag_14:\n      tag_63\n      tag_85\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SoulBoundToken.sol\":2782:2804  _ownerToTokenId[owner] */\n      and\n        /* \"contracts/SoulBoundToken.sol\":2756:2763  uint256 */\n      0x00\n        /* \"contracts/SoulBoundToken.sol\":2782:2804  _ownerToTokenId[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SoulBoundToken.sol\":2782:2797  _ownerToTokenId */\n      0x0b\n        /* \"contracts/SoulBoundToken.sol\":2782:2804  _ownerToTokenId[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/SoulBoundToken.sol\":2696:2811  function ownerToTokenId(address owner) public view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_15:\n      tag_46\n      tag_90\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_16:\n      tag_63\n      tag_94\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_52\n      tag_98\n      jump\t// in\n        /* \"contracts/SoulBoundToken.sol\":2355:2449  function isActive(uint256 id) public view returns (bool) {... */\n    tag_18:\n      tag_36\n      tag_100\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_100:\n        /* \"contracts/SoulBoundToken.sol\":2406:2410  bool */\n      0x00\n        /* \"contracts/SoulBoundToken.sol\":2429:2442  _isActive[id] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SoulBoundToken.sol\":2429:2438  _isActive */\n      0x09\n        /* \"contracts/SoulBoundToken.sol\":2429:2442  _isActive[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/SoulBoundToken.sol\":2355:2449  function isActive(uint256 id) public view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_46)\n        /* \"contracts/SoulBoundToken.sol\":1925:2012  function deactivate(uint256 id) public onlyOwner {... */\n    tag_20:\n      tag_52\n      tag_107\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_21:\n      tag_42\n      tag_110\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_22:\n      tag_52\n      tag_113\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n        /* \"contracts/SoulBoundToken.sol\":2229:2349  function accessTier(address owner) public view returns (uint8) {... */\n    tag_23:\n      tag_68\n      tag_117\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n    tag_24:\n      tag_52\n      tag_121\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n        /* \"contracts/SoulBoundToken.sol\":1779:1919  function modifyLevel(... */\n    tag_25:\n      tag_52\n      tag_125\n      calldatasize\n      0x04\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n        /* \"contracts/SoulBoundToken.sol\":802:1258  function safeMint(... */\n    tag_26:\n      tag_52\n      tag_129\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_129:\n      tag_131\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_27:\n      tag_42\n      tag_133\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_28:\n      tag_36\n      tag_137\n      calldatasize\n      0x04\n      tag_138\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      tag_52\n      tag_142\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_146\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_148\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_153\n      swap1\n      tag_152\n      jump\t// in\n    tag_153:\n      dup1\n      iszero\n      tag_154\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_155\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_154)\n    tag_155:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_156:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_156\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4011:4018  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4044  _requireMinted */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      jump\t// in\n    tag_158:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4086  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6479:6481   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6461:6482   */\n      mstore\n        /* \"#utility.yul\":6518:6520   */\n      0x21\n        /* \"#utility.yul\":6498:6516   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6491:6521   */\n      mstore\n        /* \"#utility.yul\":6557:6591   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":6537:6555   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6530:6592   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":6608:6626   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6601:6632   */\n      mstore\n        /* \"#utility.yul\":6649:6668   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_168\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3728:3733  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_137\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6881:6883   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6863:6884   */\n      mstore\n        /* \"#utility.yul\":6920:6922   */\n      0x3d\n        /* \"#utility.yul\":6900:6918   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6893:6923   */\n      mstore\n        /* \"#utility.yul\":6959:6993   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":6939:6957   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6932:6994   */\n      mstore\n        /* \"#utility.yul\":7030:7061   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":7010:7028   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7003:7062   */\n      mstore\n        /* \"#utility.yul\":7079:7098   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_163\n        /* \"#utility.yul\":6679:7104   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3855:3857  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3859:3866  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  _approve */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SoulBoundToken.sol\":2018:2104  function reactivate(uint256 id) public onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/SoulBoundToken.sol\":2077:2090  _isActive[id] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SoulBoundToken.sol\":2077:2086  _isActive */\n      0x09\n        /* \"contracts/SoulBoundToken.sol\":2077:2090  _isActive[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SoulBoundToken.sol\":2077:2097  _isActive[id] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/SoulBoundToken.sol\":2093:2097  true */\n      0x01\n        /* \"contracts/SoulBoundToken.sol\":2077:2097  _isActive[id] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/SoulBoundToken.sol\":2018:2104  function reactivate(uint256 id) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4842  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_180\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4834:4841  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4819  _isApprovedOrOwner */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4842  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4793:4892  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_185\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4931  _transfer(from, to, tokenId) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4913:4917  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4919:4921  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4923:4930  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4912  _transfer */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4931  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"contracts/SoulBoundToken.sol\":2570:2690  function hasActiveSBT(address owner) public view returns (bool) {... */\n    tag_76:\n        /* \"contracts/SoulBoundToken.sol\":2628:2632  bool */\n      0x00\n        /* \"contracts/SoulBoundToken.sol\":2651:2660  _isActive */\n      0x09\n        /* \"contracts/SoulBoundToken.sol\":2651:2683  _isActive[ownerToTokenId(owner)] */\n      0x00\n        /* \"contracts/SoulBoundToken.sol\":2661:2682  ownerToTokenId(owner) */\n      tag_191\n        /* \"contracts/SoulBoundToken.sol\":2676:2681  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SoulBoundToken.sol\":2782:2804  _ownerToTokenId[owner] */\n      and\n        /* \"contracts/SoulBoundToken.sol\":2756:2763  uint256 */\n      0x00\n        /* \"contracts/SoulBoundToken.sol\":2782:2804  _ownerToTokenId[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SoulBoundToken.sol\":2782:2797  _ownerToTokenId */\n      0x0b\n        /* \"contracts/SoulBoundToken.sol\":2782:2804  _ownerToTokenId[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/SoulBoundToken.sol\":2696:2811  function ownerToTokenId(address owner) public view returns (uint256) {... */\n      jump\n        /* \"contracts/SoulBoundToken.sol\":2661:2682  ownerToTokenId(owner) */\n    tag_191:\n        /* \"contracts/SoulBoundToken.sol\":2651:2683  _isActive[ownerToTokenId(owner)] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n      swap3\n        /* \"contracts/SoulBoundToken.sol\":2570:2690  function hasActiveSBT(address owner) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5154:5158  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5160:5162  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5164:5171  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5153  safeTransferFrom */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"contracts/SoulBoundToken.sol\":1264:1424  function burn(uint256 tokenId) external {... */\n    tag_83:\n        /* \"contracts/SoulBoundToken.sol\":1355:1365  msg.sender */\n      caller\n        /* \"contracts/SoulBoundToken.sol\":1335:1351  ownerOf(tokenId) */\n      tag_195\n        /* \"contracts/SoulBoundToken.sol\":1343:1350  tokenId */\n      dup3\n        /* \"contracts/SoulBoundToken.sol\":1335:1342  ownerOf */\n      tag_91\n        /* \"contracts/SoulBoundToken.sol\":1335:1351  ownerOf(tokenId) */\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SoulBoundToken.sol\":1335:1365  ownerOf(tokenId) == msg.sender */\n      and\n      eq\n        /* \"contracts/SoulBoundToken.sol\":1314:1393  require(... */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7725:7727   */\n      0x20\n        /* \"contracts/SoulBoundToken.sol\":1314:1393  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7707:7728   */\n      mstore\n        /* \"#utility.yul\":7764:7765   */\n      0x02\n        /* \"#utility.yul\":7744:7762   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7737:7766   */\n      mstore\n      shl(0xf0, 0x4e4f)\n        /* \"#utility.yul\":7782:7800   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7775:7807   */\n      mstore\n        /* \"#utility.yul\":7824:7842   */\n      0x64\n      add\n        /* \"contracts/SoulBoundToken.sol\":1314:1393  require(... */\n      tag_163\n        /* \"#utility.yul\":7523:7848   */\n      jump\n        /* \"contracts/SoulBoundToken.sol\":1314:1393  require(... */\n    tag_196:\n        /* \"contracts/SoulBoundToken.sol\":1403:1417  _burn(tokenId) */\n      tag_199\n        /* \"contracts/SoulBoundToken.sol\":1409:1416  tokenId */\n      dup2\n        /* \"contracts/SoulBoundToken.sol\":1403:1408  _burn */\n      tag_200\n        /* \"contracts/SoulBoundToken.sol\":1403:1417  _burn(tokenId) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/SoulBoundToken.sol\":1264:1424  function burn(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8055:8057   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8037:8058   */\n      mstore\n        /* \"#utility.yul\":8094:8096   */\n      0x18\n        /* \"#utility.yul\":8074:8092   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8067:8097   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":8113:8131   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8106:8160   */\n      mstore\n        /* \"#utility.yul\":8177:8195   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_163\n        /* \"#utility.yul\":7853:8201   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8408:8410   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8390:8411   */\n      mstore\n        /* \"#utility.yul\":8447:8449   */\n      0x29\n        /* \"#utility.yul\":8427:8445   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8420:8450   */\n      mstore\n        /* \"#utility.yul\":8486:8520   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":8466:8484   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8459:8521   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":8537:8555   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8530:8569   */\n      mstore\n        /* \"#utility.yul\":8586:8605   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_163\n        /* \"#utility.yul\":8206:8611   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_209:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SoulBoundToken.sol\":1925:2012  function deactivate(uint256 id) public onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \"contracts/SoulBoundToken.sol\":2000:2005  false */\n      0x00\n        /* \"contracts/SoulBoundToken.sol\":1984:1997  _isActive[id] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SoulBoundToken.sol\":1984:1993  _isActive */\n      0x09\n        /* \"contracts/SoulBoundToken.sol\":1984:1997  _isActive[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SoulBoundToken.sol\":1984:2005  _isActive[id] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/SoulBoundToken.sol\":1925:2012  function deactivate(uint256 id) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_229\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4296:4304  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4314  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4281  _setApprovalForAll */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SoulBoundToken.sol\":2229:2349  function accessTier(address owner) public view returns (uint8) {... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SoulBoundToken.sol\":2782:2804  _ownerToTokenId[owner] */\n      dup2\n      and\n        /* \"contracts/SoulBoundToken.sol\":2285:2290  uint8 */\n      0x00\n        /* \"contracts/SoulBoundToken.sol\":2782:2804  _ownerToTokenId[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SoulBoundToken.sol\":2782:2797  _ownerToTokenId */\n      0x0b\n        /* \"contracts/SoulBoundToken.sol\":2782:2804  _ownerToTokenId[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/SoulBoundToken.sol\":2309:2342  accessTier(ownerToTokenId(owner)) */\n      tag_148\n      swap1\n        /* \"contracts/SoulBoundToken.sol\":2320:2341  ownerToTokenId(owner) */\n      tag_69\n        /* \"contracts/SoulBoundToken.sol\":2696:2811  function ownerToTokenId(address owner) public view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5458  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_236\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5450:5457  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5435  _isApprovedOrOwner */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5458  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5409:5508  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_185\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5556  _safeTransfer(from, to, tokenId, data) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5532:5536  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5538:5540  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5542:5549  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5551:5555  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5531  _safeTransfer */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5556  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SoulBoundToken.sol\":1779:1919  function modifyLevel(... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_243:\n        /* \"contracts/SoulBoundToken.sol\":1874:1878  tier */\n      dup1\n        /* \"contracts/SoulBoundToken.sol\":661:662  1 */\n      0x01\n        /* \"contracts/SoulBoundToken.sol\":653:657  tier */\n      dup2\n        /* \"contracts/SoulBoundToken.sol\":653:662  tier >= 1 */\n      0xff\n      and\n      lt\n      iszero\n        /* \"contracts/SoulBoundToken.sol\":653:675  tier >= 1 && tier <= 3 */\n      dup1\n      iszero\n      tag_245\n      jumpi\n      pop\n        /* \"contracts/SoulBoundToken.sol\":674:675  3 */\n      0x03\n        /* \"contracts/SoulBoundToken.sol\":666:670  tier */\n      dup2\n        /* \"contracts/SoulBoundToken.sol\":666:675  tier <= 3 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"contracts/SoulBoundToken.sol\":653:675  tier >= 1 && tier <= 3 */\n    tag_245:\n        /* \"contracts/SoulBoundToken.sol\":645:682  require(tier >= 1 && tier <= 3, \"IT\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8818:8820   */\n      0x20\n        /* \"contracts/SoulBoundToken.sol\":645:682  require(tier >= 1 && tier <= 3, \"IT\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8800:8821   */\n      mstore\n        /* \"#utility.yul\":8857:8858   */\n      0x02\n        /* \"#utility.yul\":8837:8855   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8830:8859   */\n      mstore\n      shl(0xf2, 0x1255)\n        /* \"#utility.yul\":8875:8893   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8868:8900   */\n      mstore\n        /* \"#utility.yul\":8917:8935   */\n      0x64\n      add\n        /* \"contracts/SoulBoundToken.sol\":645:682  require(tier >= 1 && tier <= 3, \"IT\") */\n      tag_163\n        /* \"#utility.yul\":8616:8941   */\n      jump\n        /* \"contracts/SoulBoundToken.sol\":645:682  require(tier >= 1 && tier <= 3, \"IT\") */\n    tag_246:\n      pop\n        /* \"contracts/SoulBoundToken.sol\":1890:1905  _accessTier[id] */\n      0x00\n      swap2\n      dup3\n      mstore\n        /* \"contracts/SoulBoundToken.sol\":1890:1901  _accessTier */\n      0x08\n        /* \"contracts/SoulBoundToken.sol\":1890:1905  _accessTier[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/SoulBoundToken.sol\":1890:1912  _accessTier[id] = tier */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/SoulBoundToken.sol\":1779:1919  function modifyLevel(... */\n      jump\t// out\n        /* \"contracts/SoulBoundToken.sol\":802:1258  function safeMint(... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/SoulBoundToken.sol\":918:922  tier */\n      dup2\n        /* \"contracts/SoulBoundToken.sol\":661:662  1 */\n      0x01\n        /* \"contracts/SoulBoundToken.sol\":653:657  tier */\n      dup2\n        /* \"contracts/SoulBoundToken.sol\":653:662  tier >= 1 */\n      0xff\n      and\n      lt\n      iszero\n        /* \"contracts/SoulBoundToken.sol\":653:675  tier >= 1 && tier <= 3 */\n      dup1\n      iszero\n      tag_253\n      jumpi\n      pop\n        /* \"contracts/SoulBoundToken.sol\":674:675  3 */\n      0x03\n        /* \"contracts/SoulBoundToken.sol\":666:670  tier */\n      dup2\n        /* \"contracts/SoulBoundToken.sol\":666:675  tier <= 3 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"contracts/SoulBoundToken.sol\":653:675  tier >= 1 && tier <= 3 */\n    tag_253:\n        /* \"contracts/SoulBoundToken.sol\":645:682  require(tier >= 1 && tier <= 3, \"IT\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8818:8820   */\n      0x20\n        /* \"contracts/SoulBoundToken.sol\":645:682  require(tier >= 1 && tier <= 3, \"IT\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8800:8821   */\n      mstore\n        /* \"#utility.yul\":8857:8858   */\n      0x02\n        /* \"#utility.yul\":8837:8855   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8830:8859   */\n      mstore\n      shl(0xf2, 0x1255)\n        /* \"#utility.yul\":8875:8893   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8868:8900   */\n      mstore\n        /* \"#utility.yul\":8917:8935   */\n      0x64\n      add\n        /* \"contracts/SoulBoundToken.sol\":645:682  require(tier >= 1 && tier <= 3, \"IT\") */\n      tag_163\n        /* \"#utility.yul\":8616:8941   */\n      jump\n        /* \"contracts/SoulBoundToken.sol\":645:682  require(tier >= 1 && tier <= 3, \"IT\") */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SoulBoundToken.sol\":942:961  _ownerToTokenId[to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SoulBoundToken.sol\":942:957  _ownerToTokenId */\n      0x0b\n        /* \"contracts/SoulBoundToken.sol\":942:961  _ownerToTokenId[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SoulBoundToken.sol\":942:966  _ownerToTokenId[to] == 0 */\n      iszero\n        /* \"contracts/SoulBoundToken.sol\":934:975  require(_ownerToTokenId[to] == 0, \"STAE\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n        /* \"#utility.yul\":9148:9150   */\n      0x20\n        /* \"#utility.yul\":9130:9151   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9187:9188   */\n      0x04\n        /* \"#utility.yul\":9167:9185   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9160:9189   */\n      mstore\n      shl(0xe0, 0x53544145)\n        /* \"#utility.yul\":9220:9222   */\n      0x40\n        /* \"#utility.yul\":9205:9223   */\n      dup3\n      add\n        /* \"#utility.yul\":9198:9232   */\n      mstore\n        /* \"#utility.yul\":9264:9266   */\n      0x60\n        /* \"#utility.yul\":9249:9267   */\n      add\n      swap1\n        /* \"#utility.yul\":8946:9273   */\n      jump\n        /* \"contracts/SoulBoundToken.sol\":934:975  require(_ownerToTokenId[to] == 0, \"STAE\") */\n    tag_257:\n        /* \"contracts/SoulBoundToken.sol\":985:1000  uint256 tokenId */\n      0x00\n        /* \"contracts/SoulBoundToken.sol\":1003:1028  _tokenIdCounter.current() */\n      tag_260\n        /* \"contracts/SoulBoundToken.sol\":1003:1018  _tokenIdCounter */\n      0x07\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/SoulBoundToken.sol\":1003:1028  _tokenIdCounter.current() */\n    tag_260:\n        /* \"contracts/SoulBoundToken.sol\":985:1028  uint256 tokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"contracts/SoulBoundToken.sol\":1038:1065  _tokenIdCounter.increment() */\n      tag_262\n        /* \"contracts/SoulBoundToken.sol\":1038:1053  _tokenIdCounter */\n      0x07\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/SoulBoundToken.sol\":1038:1065  _tokenIdCounter.increment() */\n    tag_262:\n        /* \"contracts/SoulBoundToken.sol\":1075:1093  _isActive[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SoulBoundToken.sol\":1075:1084  _isActive */\n      0x09\n        /* \"contracts/SoulBoundToken.sol\":1075:1093  _isActive[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SoulBoundToken.sol\":1075:1100  _isActive[tokenId] = true */\n      dup1\n      sload\n        /* \"contracts/SoulBoundToken.sol\":1096:1100  true */\n      0x01\n      not(0xff)\n        /* \"contracts/SoulBoundToken.sol\":1075:1100  _isActive[tokenId] = true */\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/SoulBoundToken.sol\":1110:1121  _accessTier */\n      0x08\n        /* \"contracts/SoulBoundToken.sol\":1110:1130  _accessTier[tokenId] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/SoulBoundToken.sol\":1110:1137  _accessTier[tokenId] = tier */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n        /* \"contracts/SoulBoundToken.sol\":1075:1100  _isActive[tokenId] = true */\n      0xff\n        /* \"contracts/SoulBoundToken.sol\":1110:1137  _accessTier[tokenId] = tier */\n      dup10\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/SoulBoundToken.sol\":1147:1162  _hashedIdentity */\n      0x0a\n        /* \"contracts/SoulBoundToken.sol\":1147:1171  _hashedIdentity[tokenId] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SoulBoundToken.sol\":1147:1180  _hashedIdentity[tokenId] = hashed */\n      dup7\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SoulBoundToken.sol\":1190:1209  _ownerToTokenId[to] */\n      dup9\n      and\n      dup4\n      mstore\n        /* \"contracts/SoulBoundToken.sol\":1190:1205  _ownerToTokenId */\n      0x0b\n        /* \"contracts/SoulBoundToken.sol\":1190:1209  _ownerToTokenId[to] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/SoulBoundToken.sol\":1190:1219  _ownerToTokenId[to] = tokenId */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/SoulBoundToken.sol\":1229:1251  _safeMint(to, tokenId) */\n      tag_263\n        /* \"contracts/SoulBoundToken.sol\":1190:1209  _ownerToTokenId[to] */\n      dup6\n        /* \"contracts/SoulBoundToken.sol\":1075:1093  _isActive[tokenId] */\n      dup3\n        /* \"contracts/SoulBoundToken.sol\":1229:1238  _safeMint */\n      tag_264\n        /* \"contracts/SoulBoundToken.sol\":1229:1251  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/SoulBoundToken.sol\":924:1258  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1117:1118  _ */\n      pop\n        /* \"contracts/SoulBoundToken.sol\":802:1258  function safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_269\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_270)\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_273\n      swap3\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_277\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9981:9983   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9963:9984   */\n      mstore\n        /* \"#utility.yul\":10020:10022   */\n      0x26\n        /* \"#utility.yul\":10000:10018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9993:10023   */\n      mstore\n        /* \"#utility.yul\":10059:10093   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10039:10057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10032:10094   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":10110:10128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10103:10139   */\n      mstore\n        /* \"#utility.yul\":10156:10175   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_163\n        /* \"#utility.yul\":9779:10181   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_279:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13466:13599  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8055:8057   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8037:8058   */\n      mstore\n        /* \"#utility.yul\":8094:8096   */\n      0x18\n        /* \"#utility.yul\":8074:8092   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8067:8097   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":8113:8131   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8106:8160   */\n      mstore\n        /* \"#utility.yul\":8177:8195   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_163\n        /* \"#utility.yul\":7853:8201   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12768:12939  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12857  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12871  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12918  ERC721.ownerOf(tokenId) */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12909  ERC721.ownerOf */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12918  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12886:12932  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12768:12939  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10388:10390   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10370:10391   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10407:10425   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10400:10430   */\n      mstore\n        /* \"#utility.yul\":10466:10500   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10446:10464   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10439:10501   */\n      mstore\n        /* \"#utility.yul\":10518:10536   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_163\n        /* \"#utility.yul\":10186:10542   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7540:7801  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7633:7637  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7649:7662  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7688  ERC721.ownerOf(tokenId) */\n      tag_300\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7680:7687  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7679  ERC721.ownerOf */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7688  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7649:7688  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7717:7722  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7722  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7713  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7722  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7758  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_302\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7758  isApprovedForAll(owner, spender) */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7793  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_303\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7786:7793  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7793  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7782  getApproved(tokenId) */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7774:7781  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7773  getApproved */\n      tag_49\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7782  getApproved(tokenId) */\n      jump\t// in\n    tag_304:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7793  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7793  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7698:7794  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7540:7801  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11423:12656  function _transfer(... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11577:11581  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11581  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11573  ERC721.ownerOf(tokenId) */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11565:11572  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11564  ERC721.ownerOf */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11573  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11581  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11542:11623  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_309\n      jump\t// in\n    tag_307:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11641:11657  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11155:11157   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11137:11158   */\n      mstore\n        /* \"#utility.yul\":11194:11196   */\n      0x24\n        /* \"#utility.yul\":11174:11192   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11167:11197   */\n      mstore\n        /* \"#utility.yul\":11233:11267   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":11213:11231   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11206:11268   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":11284:11302   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11277:11311   */\n      mstore\n        /* \"#utility.yul\":11328:11347   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_163\n        /* \"#utility.yul\":10953:11353   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11751  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_313\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11730:11734  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11736:11738  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11740:11747  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11749:11750  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11729  _beforeTokenTransfer */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11751  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11878:11882  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11882  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11874  ERC721.ownerOf(tokenId) */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11866:11873  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11865  ERC721.ownerOf */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11874  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_315:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11882  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11843:11924  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_309\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12017  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12008  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12017  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11986:12017  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12476  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12470  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12476  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12481  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12508  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12513  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11986:12017  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12513  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12549  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12540  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12549  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12554  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12570:12597  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12009:12016  tokenId */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12570:12597  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SoulBoundToken.sol\":1678:1773  function _burn(uint256 tokenId) internal override(ERC721) {... */\n    tag_200:\n        /* \"contracts/SoulBoundToken.sol\":1746:1766  super._burn(tokenId) */\n      tag_199\n        /* \"contracts/SoulBoundToken.sol\":1758:1765  tokenId */\n      dup2\n        /* \"contracts/SoulBoundToken.sol\":1746:1757  super._burn */\n      tag_322\n        /* \"contracts/SoulBoundToken.sol\":1746:1766  super._burn(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x06\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13075:13382  function _setApprovalForAll(... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13225:13233  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13233  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13221  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13233  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11560:11562   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11542:11563   */\n      mstore\n        /* \"#utility.yul\":11599:11601   */\n      0x19\n        /* \"#utility.yul\":11579:11597   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11572:11602   */\n      mstore\n        /* \"#utility.yul\":11638:11665   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":11618:11636   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11611:11666   */\n      mstore\n        /* \"#utility.yul\":11683:11701   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_163\n        /* \"#utility.yul\":11358:11707   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_326:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13298  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13291  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13298  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13308  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13319  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13075:13382  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6424:6729  function _safeTransfer(... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6602  _transfer(from, to, tokenId) */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6584:6588  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6590:6592  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6594:6601  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6583  _transfer */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6602  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6667  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6643:6647  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6649:6651  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6653:6660  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6662:6666  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6642  _checkOnERC721Received */\n      tag_333\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6667  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6612:6722  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_336\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8131:8239  function _safeMint(address to, uint256 tokenId) internal virtual {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8206:8232  _safeMint(to, tokenId, \"\") */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8216:8218  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8220:8227  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8206:8232  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8206:8215  _safeMint */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8206:8232  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":471:484  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:534  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      tag_343\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":548:553  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:547  Math.log10 */\n      tag_344\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":557:558  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:558  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:558  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:592  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":606:612  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":595:613  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_346\n      jumpi\n      tag_346\n      tag_347\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_348\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_348:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:613  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":749:751  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_349:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":942:956  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":937:967  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:968  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1012:1014  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1003:1014  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      tag_349\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1094  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SoulBoundToken.sol\":1430:1672  function _beforeTokenTransfer(... */\n    tag_314:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SoulBoundToken.sol\":1596:1614  from == address(0) */\n      dup5\n      and\n      iszero\n      dup1\n        /* \"contracts/SoulBoundToken.sol\":1596:1634  from == address(0) || to == address(0) */\n      tag_358\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SoulBoundToken.sol\":1618:1634  to == address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/SoulBoundToken.sol\":1596:1634  from == address(0) || to == address(0) */\n    tag_358:\n        /* \"contracts/SoulBoundToken.sol\":1575:1665  require(... */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12465:12467   */\n      0x20\n        /* \"contracts/SoulBoundToken.sol\":1575:1665  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12447:12468   */\n      mstore\n        /* \"#utility.yul\":12504:12505   */\n      0x05\n        /* \"#utility.yul\":12484:12502   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12477:12506   */\n      mstore\n      shl(0xda, 0x14d09510d5)\n        /* \"#utility.yul\":12522:12540   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12515:12550   */\n      mstore\n        /* \"#utility.yul\":12567:12585   */\n      0x64\n      add\n        /* \"contracts/SoulBoundToken.sol\":1575:1665  require(... */\n      tag_163\n        /* \"#utility.yul\":12263:12591   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10337:11099  function _burn(uint256 tokenId) internal virtual {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10396:10409  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10412:10435  ERC721.ownerOf(tokenId) */\n      tag_364\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10427:10434  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10412:10426  ERC721.ownerOf */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10412:10435  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10396:10435  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10446:10497  _beforeTokenTransfer(owner, address(0), tokenId, 1) */\n      tag_365\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10467:10472  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10482:10483  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10486:10493  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10495:10496  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10446:10466  _beforeTokenTransfer */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10446:10497  _beforeTokenTransfer(owner, address(0), tokenId, 1) */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10607:10630  ERC721.ownerOf(tokenId) */\n      tag_366\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10622:10629  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10607:10621  ERC721.ownerOf */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10607:10630  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10675:10699  _tokenApprovals[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10675:10690  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10675:10699  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10668:10699  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10915:10931  _balances[owner] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10915:10924  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10915:10931  _balances[owner] */\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10915:10936  _balances[owner] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10963:10979  _owners[tokenId] */\n      dup8\n      dup6\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10963:10970  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10963:10979  _owners[tokenId] */\n      swap1\n      swap4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10956:10979  delete _owners[tokenId] */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10995:11031  Transfer(owner, address(0), tokenId) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10599:10630  owner = ERC721.ownerOf(tokenId) */\n      swap3\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10691:10698  tokenId */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10995:11031  Transfer(owner, address(0), tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10675:10699  _tokenApprovals[tokenId] */\n      dup4\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10995:11031  Transfer(owner, address(0), tokenId) */\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14151:14982  function _checkOnERC721Received(... */\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14300:14304  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14320:14333  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14316:14976  if (to.isContract()) {... */\n      tag_371\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14391  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_373\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14406:14410  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14412:14419  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14421:14425  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_374\n      jump\t// in\n    tag_373:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_375\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_376\n      swap2\n      dup2\n      add\n      swap1\n      tag_377\n      jump\t// in\n    tag_376:\n      0x01\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14351:14924  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_378\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_383\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_382)\n    tag_383:\n      0x60\n      swap2\n      pop\n    tag_382:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14599  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14606  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14610:14611  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14611  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14910  if (reason.length == 0) {... */\n      tag_384\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14635:14695  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_336\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14910  if (reason.length == 0) {... */\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14862:14868  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14856:14869  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14847:14853  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14843:14845  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14839:14854  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14832:14870  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14351:14924  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_378:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14476:14527  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14469:14527  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_303)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14316:14976  if (to.isContract()) {... */\n    tag_371:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14961:14965  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14151:14982  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8460:8769  function _safeMint(... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8584:8602  _mint(to, tokenId) */\n      tag_390\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8590:8592  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8594:8601  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8584:8589  _mint */\n      tag_391\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8584:8602  _mint(to, tokenId) */\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8633:8686  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_392\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8664:8665  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8668:8670  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8672:8679  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8681:8685  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8633:8655  _checkOnERC721Received */\n      tag_333\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8633:8686  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_392:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8612:8762  require(... */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_336\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9942:9949  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10032  value >= 10**64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n      tag_396\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10052:10067  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10095:10097  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10085:10097  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n    tag_396:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10138:10144  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10134  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10144  value >= 10**32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10173:10179  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10164:10179  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10207:10209  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10197:10209  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n    tag_399:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10250:10256  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10246  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10256  value >= 10**16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n      tag_402\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10285:10291  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10291  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10319:10321  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10309:10321  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n    tag_402:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10362:10367  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10358  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10367  value >= 10**8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n      tag_405\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10396:10401  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10387:10401  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10430  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10419:10430  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n    tag_405:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10471:10476  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10467  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10476  value >= 10**4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10505:10510  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10496:10510  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10538:10539  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10528:10539  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10580:10585  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10576  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10585  value >= 10**2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n      tag_411\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10614:10619  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10605:10619  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10647:10648  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10637:10648  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n    tag_411:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10689:10694  10**1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10685  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10694  value >= 10**1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10725  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10714:10725  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10766:10772  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9091:10011  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9170:9186  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9162:9223  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_417\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13546:13548   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9162:9223  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13528:13549   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13565:13583   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13558:13588   */\n      mstore\n        /* \"#utility.yul\":13624:13658   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":13604:13622   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13597:13659   */\n      mstore\n        /* \"#utility.yul\":13676:13694   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9162:9223  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_163\n        /* \"#utility.yul\":13344:13700   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9162:9223  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7344:7375  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9233:9291  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_421\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13907:13909   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9233:9291  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13889:13910   */\n      mstore\n        /* \"#utility.yul\":13946:13948   */\n      0x1c\n        /* \"#utility.yul\":13926:13944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13919:13949   */\n      mstore\n        /* \"#utility.yul\":13985:14015   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":13965:13983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13958:14016   */\n      mstore\n        /* \"#utility.yul\":14033:14051   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9233:9291  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_163\n        /* \"#utility.yul\":13705:14057   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9233:9291  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_421:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9302:9350  _beforeTokenTransfer(address(0), to, tokenId, 1) */\n      tag_424\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9331:9332  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9335:9337  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9339:9346  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9348:9349  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9302:9322  _beforeTokenTransfer */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9302:9350  _beforeTokenTransfer(address(0), to, tokenId, 1) */\n      jump\t// in\n    tag_424:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7344:7375  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9437:9495  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_426\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13907:13909   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9437:9495  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13889:13910   */\n      mstore\n        /* \"#utility.yul\":13946:13948   */\n      0x1c\n        /* \"#utility.yul\":13926:13944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13919:13949   */\n      mstore\n        /* \"#utility.yul\":13985:14015   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":13965:13983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13958:14016   */\n      mstore\n        /* \"#utility.yul\":14033:14051   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9437:9495  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_163\n        /* \"#utility.yul\":13705:14057   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9437:9495  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_426:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9850  _balances[to] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9846  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9850  _balances[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9855  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9854:9855  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9855  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9876:9892  _owners[tokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9876:9883  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9876:9892  _owners[tokenId] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9876:9897  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup5\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9913:9946  Transfer(address(0), to, tokenId) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9884:9891  tokenId */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9850  _balances[to] */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9913:9946  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9850  _balances[to] */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9913:9946  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_429:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_38:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_438:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_270\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_429\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_430:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_442:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_442)\n    tag_444:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_431:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_446\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_430\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_45:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_270\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_431\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_48:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_450:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_432:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_453:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_54:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_455:\n        /* \"#utility.yul\":2087:2116   */\n      tag_456\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_432\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2178:2506   */\n    tag_61:\n        /* \"#utility.yul\":2255:2261   */\n      0x00\n        /* \"#utility.yul\":2263:2269   */\n      dup1\n        /* \"#utility.yul\":2271:2277   */\n      0x00\n        /* \"#utility.yul\":2324:2326   */\n      0x60\n        /* \"#utility.yul\":2312:2321   */\n      dup5\n        /* \"#utility.yul\":2303:2310   */\n      dup7\n        /* \"#utility.yul\":2299:2322   */\n      sub\n        /* \"#utility.yul\":2295:2327   */\n      slt\n        /* \"#utility.yul\":2292:2344   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":2340:2341   */\n      0x00\n        /* \"#utility.yul\":2337:2338   */\n      dup1\n        /* \"#utility.yul\":2330:2342   */\n      revert\n        /* \"#utility.yul\":2292:2344   */\n    tag_458:\n        /* \"#utility.yul\":2363:2392   */\n      tag_459\n        /* \"#utility.yul\":2382:2391   */\n      dup5\n        /* \"#utility.yul\":2363:2392   */\n      tag_432\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":2353:2392   */\n      swap3\n      pop\n        /* \"#utility.yul\":2411:2449   */\n      tag_460\n        /* \"#utility.yul\":2445:2447   */\n      0x20\n        /* \"#utility.yul\":2434:2443   */\n      dup6\n        /* \"#utility.yul\":2430:2448   */\n      add\n        /* \"#utility.yul\":2411:2449   */\n      tag_432\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":2401:2449   */\n      swap2\n      pop\n        /* \"#utility.yul\":2496:2498   */\n      0x40\n        /* \"#utility.yul\":2485:2494   */\n      dup5\n        /* \"#utility.yul\":2481:2499   */\n      add\n        /* \"#utility.yul\":2468:2500   */\n      calldataload\n        /* \"#utility.yul\":2458:2500   */\n      swap1\n      pop\n        /* \"#utility.yul\":2178:2506   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2882:3068   */\n    tag_75:\n        /* \"#utility.yul\":2941:2947   */\n      0x00\n        /* \"#utility.yul\":2994:2996   */\n      0x20\n        /* \"#utility.yul\":2982:2991   */\n      dup3\n        /* \"#utility.yul\":2973:2980   */\n      dup5\n        /* \"#utility.yul\":2969:2992   */\n      sub\n        /* \"#utility.yul\":2965:2997   */\n      slt\n        /* \"#utility.yul\":2962:3014   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":3010:3011   */\n      0x00\n        /* \"#utility.yul\":3007:3008   */\n      dup1\n        /* \"#utility.yul\":3000:3012   */\n      revert\n        /* \"#utility.yul\":2962:3014   */\n    tag_464:\n        /* \"#utility.yul\":3033:3062   */\n      tag_270\n        /* \"#utility.yul\":3052:3061   */\n      dup3\n        /* \"#utility.yul\":3033:3062   */\n      tag_432\n      jump\t// in\n        /* \"#utility.yul\":3255:3602   */\n    tag_114:\n        /* \"#utility.yul\":3320:3326   */\n      0x00\n        /* \"#utility.yul\":3328:3334   */\n      dup1\n        /* \"#utility.yul\":3381:3383   */\n      0x40\n        /* \"#utility.yul\":3369:3378   */\n      dup4\n        /* \"#utility.yul\":3360:3367   */\n      dup6\n        /* \"#utility.yul\":3356:3379   */\n      sub\n        /* \"#utility.yul\":3352:3384   */\n      slt\n        /* \"#utility.yul\":3349:3401   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":3397:3398   */\n      0x00\n        /* \"#utility.yul\":3394:3395   */\n      dup1\n        /* \"#utility.yul\":3387:3399   */\n      revert\n        /* \"#utility.yul\":3349:3401   */\n    tag_468:\n        /* \"#utility.yul\":3420:3449   */\n      tag_469\n        /* \"#utility.yul\":3439:3448   */\n      dup4\n        /* \"#utility.yul\":3420:3449   */\n      tag_432\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":3410:3449   */\n      swap2\n      pop\n        /* \"#utility.yul\":3499:3501   */\n      0x20\n        /* \"#utility.yul\":3488:3497   */\n      dup4\n        /* \"#utility.yul\":3484:3502   */\n      add\n        /* \"#utility.yul\":3471:3503   */\n      calldataload\n        /* \"#utility.yul\":3546:3551   */\n      dup1\n        /* \"#utility.yul\":3539:3552   */\n      iszero\n        /* \"#utility.yul\":3532:3553   */\n      iszero\n        /* \"#utility.yul\":3525:3530   */\n      dup2\n        /* \"#utility.yul\":3522:3554   */\n      eq\n        /* \"#utility.yul\":3512:3572   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":3568:3569   */\n      0x00\n        /* \"#utility.yul\":3565:3566   */\n      dup1\n        /* \"#utility.yul\":3558:3570   */\n      revert\n        /* \"#utility.yul\":3512:3572   */\n    tag_470:\n        /* \"#utility.yul\":3591:3596   */\n      dup1\n        /* \"#utility.yul\":3581:3596   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3255:3602   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3607:3734   */\n    tag_347:\n        /* \"#utility.yul\":3668:3678   */\n      0x4e487b71\n        /* \"#utility.yul\":3663:3666   */\n      0xe0\n        /* \"#utility.yul\":3659:3679   */\n      shl\n        /* \"#utility.yul\":3656:3657   */\n      0x00\n        /* \"#utility.yul\":3649:3680   */\n      mstore\n        /* \"#utility.yul\":3699:3703   */\n      0x41\n        /* \"#utility.yul\":3696:3697   */\n      0x04\n        /* \"#utility.yul\":3689:3704   */\n      mstore\n        /* \"#utility.yul\":3723:3727   */\n      0x24\n        /* \"#utility.yul\":3720:3721   */\n      0x00\n        /* \"#utility.yul\":3713:3728   */\n      revert\n        /* \"#utility.yul\":3739:4877   */\n    tag_122:\n        /* \"#utility.yul\":3834:3840   */\n      0x00\n        /* \"#utility.yul\":3842:3848   */\n      dup1\n        /* \"#utility.yul\":3850:3856   */\n      0x00\n        /* \"#utility.yul\":3858:3864   */\n      dup1\n        /* \"#utility.yul\":3911:3914   */\n      0x80\n        /* \"#utility.yul\":3899:3908   */\n      dup6\n        /* \"#utility.yul\":3890:3897   */\n      dup8\n        /* \"#utility.yul\":3886:3909   */\n      sub\n        /* \"#utility.yul\":3882:3915   */\n      slt\n        /* \"#utility.yul\":3879:3932   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":3928:3929   */\n      0x00\n        /* \"#utility.yul\":3925:3926   */\n      dup1\n        /* \"#utility.yul\":3918:3930   */\n      revert\n        /* \"#utility.yul\":3879:3932   */\n    tag_473:\n        /* \"#utility.yul\":3951:3980   */\n      tag_474\n        /* \"#utility.yul\":3970:3979   */\n      dup6\n        /* \"#utility.yul\":3951:3980   */\n      tag_432\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":3941:3980   */\n      swap4\n      pop\n        /* \"#utility.yul\":3999:4037   */\n      tag_475\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"#utility.yul\":4022:4031   */\n      dup7\n        /* \"#utility.yul\":4018:4036   */\n      add\n        /* \"#utility.yul\":3999:4037   */\n      tag_432\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":3989:4037   */\n      swap3\n      pop\n        /* \"#utility.yul\":4084:4086   */\n      0x40\n        /* \"#utility.yul\":4073:4082   */\n      dup6\n        /* \"#utility.yul\":4069:4087   */\n      add\n        /* \"#utility.yul\":4056:4088   */\n      calldataload\n        /* \"#utility.yul\":4046:4088   */\n      swap2\n      pop\n        /* \"#utility.yul\":4139:4141   */\n      0x60\n        /* \"#utility.yul\":4128:4137   */\n      dup6\n        /* \"#utility.yul\":4124:4142   */\n      add\n        /* \"#utility.yul\":4111:4143   */\n      calldataload\n        /* \"#utility.yul\":4162:4180   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4203:4205   */\n      dup1\n        /* \"#utility.yul\":4195:4201   */\n      dup3\n        /* \"#utility.yul\":4192:4206   */\n      gt\n        /* \"#utility.yul\":4189:4223   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":4219:4220   */\n      0x00\n        /* \"#utility.yul\":4216:4217   */\n      dup1\n        /* \"#utility.yul\":4209:4221   */\n      revert\n        /* \"#utility.yul\":4189:4223   */\n    tag_476:\n        /* \"#utility.yul\":4257:4263   */\n      dup2\n        /* \"#utility.yul\":4246:4255   */\n      dup8\n        /* \"#utility.yul\":4242:4264   */\n      add\n        /* \"#utility.yul\":4232:4264   */\n      swap2\n      pop\n        /* \"#utility.yul\":4302:4309   */\n      dup8\n        /* \"#utility.yul\":4295:4299   */\n      0x1f\n        /* \"#utility.yul\":4291:4293   */\n      dup4\n        /* \"#utility.yul\":4287:4300   */\n      add\n        /* \"#utility.yul\":4283:4310   */\n      slt\n        /* \"#utility.yul\":4273:4328   */\n      tag_477\n      jumpi\n        /* \"#utility.yul\":4324:4325   */\n      0x00\n        /* \"#utility.yul\":4321:4322   */\n      dup1\n        /* \"#utility.yul\":4314:4326   */\n      revert\n        /* \"#utility.yul\":4273:4328   */\n    tag_477:\n        /* \"#utility.yul\":4360:4362   */\n      dup2\n        /* \"#utility.yul\":4347:4363   */\n      calldataload\n        /* \"#utility.yul\":4382:4384   */\n      dup2\n        /* \"#utility.yul\":4378:4380   */\n      dup2\n        /* \"#utility.yul\":4375:4385   */\n      gt\n        /* \"#utility.yul\":4372:4408   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":4388:4406   */\n      tag_479\n      tag_347\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":4463:4465   */\n      0x40\n        /* \"#utility.yul\":4457:4466   */\n      mload\n        /* \"#utility.yul\":4431:4433   */\n      0x1f\n        /* \"#utility.yul\":4517:4530   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4513:4535   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4537:4539   */\n      0x3f\n        /* \"#utility.yul\":4509:4540   */\n      add\n        /* \"#utility.yul\":4505:4545   */\n      and\n        /* \"#utility.yul\":4493:4546   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4561:4579   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4581:4603   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4558:4604   */\n      or\n        /* \"#utility.yul\":4555:4627   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":4607:4625   */\n      tag_481\n      tag_347\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":4647:4657   */\n      dup2\n        /* \"#utility.yul\":4643:4645   */\n      0x40\n        /* \"#utility.yul\":4636:4658   */\n      mstore\n        /* \"#utility.yul\":4682:4684   */\n      dup3\n        /* \"#utility.yul\":4674:4680   */\n      dup2\n        /* \"#utility.yul\":4667:4685   */\n      mstore\n        /* \"#utility.yul\":4722:4729   */\n      dup11\n        /* \"#utility.yul\":4717:4719   */\n      0x20\n        /* \"#utility.yul\":4712:4714   */\n      dup5\n        /* \"#utility.yul\":4708:4710   */\n      dup8\n        /* \"#utility.yul\":4704:4715   */\n      add\n        /* \"#utility.yul\":4700:4720   */\n      add\n        /* \"#utility.yul\":4697:4730   */\n      gt\n        /* \"#utility.yul\":4694:4747   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":4743:4744   */\n      0x00\n        /* \"#utility.yul\":4740:4741   */\n      dup1\n        /* \"#utility.yul\":4733:4745   */\n      revert\n        /* \"#utility.yul\":4694:4747   */\n    tag_482:\n        /* \"#utility.yul\":4799:4801   */\n      dup3\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"#utility.yul\":4790:4792   */\n      dup7\n        /* \"#utility.yul\":4786:4797   */\n      add\n        /* \"#utility.yul\":4781:4783   */\n      0x20\n        /* \"#utility.yul\":4773:4779   */\n      dup4\n        /* \"#utility.yul\":4769:4784   */\n      add\n        /* \"#utility.yul\":4756:4802   */\n      calldatacopy\n        /* \"#utility.yul\":4844:4845   */\n      0x00\n        /* \"#utility.yul\":4839:4841   */\n      0x20\n        /* \"#utility.yul\":4834:4836   */\n      dup5\n        /* \"#utility.yul\":4826:4832   */\n      dup4\n        /* \"#utility.yul\":4822:4837   */\n      add\n        /* \"#utility.yul\":4818:4842   */\n      add\n        /* \"#utility.yul\":4811:4846   */\n      mstore\n        /* \"#utility.yul\":4865:4871   */\n      dup1\n        /* \"#utility.yul\":4855:4871   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3739:4877   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4882:5038   */\n    tag_433:\n        /* \"#utility.yul\":4948:4968   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":5008:5012   */\n      0xff\n        /* \"#utility.yul\":4997:5013   */\n      dup2\n      and\n        /* \"#utility.yul\":4987:5014   */\n      dup2\n      eq\n        /* \"#utility.yul\":4977:5032   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":5028:5029   */\n      0x00\n        /* \"#utility.yul\":5025:5026   */\n      dup1\n        /* \"#utility.yul\":5018:5030   */\n      revert\n        /* \"#utility.yul\":5043:5293   */\n    tag_126:\n        /* \"#utility.yul\":5109:5115   */\n      0x00\n        /* \"#utility.yul\":5117:5123   */\n      dup1\n        /* \"#utility.yul\":5170:5172   */\n      0x40\n        /* \"#utility.yul\":5158:5167   */\n      dup4\n        /* \"#utility.yul\":5149:5156   */\n      dup6\n        /* \"#utility.yul\":5145:5168   */\n      sub\n        /* \"#utility.yul\":5141:5173   */\n      slt\n        /* \"#utility.yul\":5138:5190   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":5186:5187   */\n      0x00\n        /* \"#utility.yul\":5183:5184   */\n      dup1\n        /* \"#utility.yul\":5176:5188   */\n      revert\n        /* \"#utility.yul\":5138:5190   */\n    tag_486:\n        /* \"#utility.yul\":5222:5231   */\n      dup3\n        /* \"#utility.yul\":5209:5232   */\n      calldataload\n        /* \"#utility.yul\":5199:5232   */\n      swap2\n      pop\n        /* \"#utility.yul\":5251:5287   */\n      tag_487\n        /* \"#utility.yul\":5283:5285   */\n      0x20\n        /* \"#utility.yul\":5272:5281   */\n      dup5\n        /* \"#utility.yul\":5268:5286   */\n      add\n        /* \"#utility.yul\":5251:5287   */\n      tag_433\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":5241:5287   */\n      swap1\n      pop\n        /* \"#utility.yul\":5043:5293   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5298:5622   */\n    tag_130:\n        /* \"#utility.yul\":5373:5379   */\n      0x00\n        /* \"#utility.yul\":5381:5387   */\n      dup1\n        /* \"#utility.yul\":5389:5395   */\n      0x00\n        /* \"#utility.yul\":5442:5444   */\n      0x60\n        /* \"#utility.yul\":5430:5439   */\n      dup5\n        /* \"#utility.yul\":5421:5428   */\n      dup7\n        /* \"#utility.yul\":5417:5440   */\n      sub\n        /* \"#utility.yul\":5413:5445   */\n      slt\n        /* \"#utility.yul\":5410:5462   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":5458:5459   */\n      0x00\n        /* \"#utility.yul\":5455:5456   */\n      dup1\n        /* \"#utility.yul\":5448:5460   */\n      revert\n        /* \"#utility.yul\":5410:5462   */\n    tag_489:\n        /* \"#utility.yul\":5481:5510   */\n      tag_490\n        /* \"#utility.yul\":5500:5509   */\n      dup5\n        /* \"#utility.yul\":5481:5510   */\n      tag_432\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":5471:5510   */\n      swap3\n      pop\n        /* \"#utility.yul\":5529:5565   */\n      tag_460\n        /* \"#utility.yul\":5561:5563   */\n      0x20\n        /* \"#utility.yul\":5550:5559   */\n      dup6\n        /* \"#utility.yul\":5546:5564   */\n      add\n        /* \"#utility.yul\":5529:5565   */\n      tag_433\n      jump\t// in\n        /* \"#utility.yul\":5627:5887   */\n    tag_138:\n        /* \"#utility.yul\":5695:5701   */\n      0x00\n        /* \"#utility.yul\":5703:5709   */\n      dup1\n        /* \"#utility.yul\":5756:5758   */\n      0x40\n        /* \"#utility.yul\":5744:5753   */\n      dup4\n        /* \"#utility.yul\":5735:5742   */\n      dup6\n        /* \"#utility.yul\":5731:5754   */\n      sub\n        /* \"#utility.yul\":5727:5759   */\n      slt\n        /* \"#utility.yul\":5724:5776   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":5772:5773   */\n      0x00\n        /* \"#utility.yul\":5769:5770   */\n      dup1\n        /* \"#utility.yul\":5762:5774   */\n      revert\n        /* \"#utility.yul\":5724:5776   */\n    tag_493:\n        /* \"#utility.yul\":5795:5824   */\n      tag_494\n        /* \"#utility.yul\":5814:5823   */\n      dup4\n        /* \"#utility.yul\":5795:5824   */\n      tag_432\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":5785:5824   */\n      swap2\n      pop\n        /* \"#utility.yul\":5843:5881   */\n      tag_487\n        /* \"#utility.yul\":5877:5879   */\n      0x20\n        /* \"#utility.yul\":5866:5875   */\n      dup5\n        /* \"#utility.yul\":5862:5880   */\n      add\n        /* \"#utility.yul\":5843:5881   */\n      tag_432\n      jump\t// in\n        /* \"#utility.yul\":5892:6272   */\n    tag_152:\n        /* \"#utility.yul\":5971:5972   */\n      0x01\n        /* \"#utility.yul\":5967:5979   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6014:6026   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6035:6096   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":6089:6093   */\n      0x7f\n        /* \"#utility.yul\":6081:6087   */\n      dup3\n        /* \"#utility.yul\":6077:6094   */\n      and\n        /* \"#utility.yul\":6067:6094   */\n      swap2\n      pop\n        /* \"#utility.yul\":6035:6096   */\n    tag_497:\n        /* \"#utility.yul\":6142:6144   */\n      0x20\n        /* \"#utility.yul\":6134:6140   */\n      dup3\n        /* \"#utility.yul\":6131:6145   */\n      lt\n        /* \"#utility.yul\":6111:6129   */\n      dup2\n        /* \"#utility.yul\":6108:6146   */\n      sub\n        /* \"#utility.yul\":6105:6266   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":6188:6198   */\n      0x4e487b71\n        /* \"#utility.yul\":6183:6186   */\n      0xe0\n        /* \"#utility.yul\":6179:6199   */\n      shl\n        /* \"#utility.yul\":6176:6177   */\n      0x00\n        /* \"#utility.yul\":6169:6200   */\n      mstore\n        /* \"#utility.yul\":6223:6227   */\n      0x22\n        /* \"#utility.yul\":6220:6221   */\n      0x04\n        /* \"#utility.yul\":6213:6228   */\n      mstore\n        /* \"#utility.yul\":6251:6255   */\n      0x24\n        /* \"#utility.yul\":6248:6249   */\n      0x00\n        /* \"#utility.yul\":6241:6256   */\n      revert\n        /* \"#utility.yul\":6105:6266   */\n    tag_498:\n      pop\n        /* \"#utility.yul\":5892:6272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7109:7518   */\n    tag_185:\n        /* \"#utility.yul\":7311:7313   */\n      0x20\n        /* \"#utility.yul\":7293:7314   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7350:7352   */\n      0x2d\n        /* \"#utility.yul\":7330:7348   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7323:7353   */\n      mstore\n        /* \"#utility.yul\":7389:7423   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":7384:7386   */\n      0x40\n        /* \"#utility.yul\":7369:7387   */\n      dup3\n      add\n        /* \"#utility.yul\":7362:7424   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":7455:7457   */\n      0x60\n        /* \"#utility.yul\":7440:7458   */\n      dup3\n      add\n        /* \"#utility.yul\":7433:7476   */\n      mstore\n        /* \"#utility.yul\":7508:7511   */\n      0x80\n        /* \"#utility.yul\":7493:7512   */\n      add\n      swap1\n        /* \"#utility.yul\":7109:7518   */\n      jump\t// out\n        /* \"#utility.yul\":9278:9774   */\n    tag_274:\n        /* \"#utility.yul\":9457:9460   */\n      0x00\n        /* \"#utility.yul\":9495:9501   */\n      dup4\n        /* \"#utility.yul\":9489:9502   */\n      mload\n        /* \"#utility.yul\":9511:9577   */\n      tag_508\n        /* \"#utility.yul\":9570:9576   */\n      dup2\n        /* \"#utility.yul\":9565:9568   */\n      dup5\n        /* \"#utility.yul\":9558:9562   */\n      0x20\n        /* \"#utility.yul\":9550:9556   */\n      dup9\n        /* \"#utility.yul\":9546:9563   */\n      add\n        /* \"#utility.yul\":9511:9577   */\n      tag_430\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":9640:9653   */\n      dup4\n      mload\n        /* \"#utility.yul\":9599:9615   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":9662:9732   */\n      tag_509\n        /* \"#utility.yul\":9640:9653   */\n      dup2\n        /* \"#utility.yul\":9599:9615   */\n      dup4\n        /* \"#utility.yul\":9709:9713   */\n      0x20\n        /* \"#utility.yul\":9697:9714   */\n      dup9\n      add\n        /* \"#utility.yul\":9662:9732   */\n      tag_430\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9748:9768   */\n      add\n      swap5\n        /* \"#utility.yul\":9278:9774   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10547:10948   */\n    tag_309:\n        /* \"#utility.yul\":10749:10751   */\n      0x20\n        /* \"#utility.yul\":10731:10752   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10788:10790   */\n      0x25\n        /* \"#utility.yul\":10768:10786   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10761:10791   */\n      mstore\n        /* \"#utility.yul\":10827:10861   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":10822:10824   */\n      0x40\n        /* \"#utility.yul\":10807:10825   */\n      dup3\n      add\n        /* \"#utility.yul\":10800:10862   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":10893:10895   */\n      0x60\n        /* \"#utility.yul\":10878:10896   */\n      dup3\n      add\n        /* \"#utility.yul\":10871:10906   */\n      mstore\n        /* \"#utility.yul\":10938:10941   */\n      0x80\n        /* \"#utility.yul\":10923:10942   */\n      add\n      swap1\n        /* \"#utility.yul\":10547:10948   */\n      jump\t// out\n        /* \"#utility.yul\":11712:12126   */\n    tag_336:\n        /* \"#utility.yul\":11914:11916   */\n      0x20\n        /* \"#utility.yul\":11896:11917   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11953:11955   */\n      0x32\n        /* \"#utility.yul\":11933:11951   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11926:11956   */\n      mstore\n        /* \"#utility.yul\":11992:12026   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":11987:11989   */\n      0x40\n        /* \"#utility.yul\":11972:11990   */\n      dup3\n      add\n        /* \"#utility.yul\":11965:12027   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":12058:12060   */\n      0x60\n        /* \"#utility.yul\":12043:12061   */\n      dup3\n      add\n        /* \"#utility.yul\":12036:12084   */\n      mstore\n        /* \"#utility.yul\":12116:12119   */\n      0x80\n        /* \"#utility.yul\":12101:12120   */\n      add\n      swap1\n        /* \"#utility.yul\":11712:12126   */\n      jump\t// out\n        /* \"#utility.yul\":12596:13085   */\n    tag_374:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12865:12880   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":12847:12881   */\n      dup3\n      mstore\n        /* \"#utility.yul\":12917:12932   */\n      dup5\n      and\n        /* \"#utility.yul\":12912:12914   */\n      0x20\n        /* \"#utility.yul\":12897:12915   */\n      dup3\n      add\n        /* \"#utility.yul\":12890:12933   */\n      mstore\n        /* \"#utility.yul\":12964:12966   */\n      0x40\n        /* \"#utility.yul\":12949:12967   */\n      dup2\n      add\n        /* \"#utility.yul\":12942:12976   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":13012:13015   */\n      0x80\n        /* \"#utility.yul\":13007:13009   */\n      0x60\n        /* \"#utility.yul\":12992:13010   */\n      dup3\n      add\n        /* \"#utility.yul\":12985:13016   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12790:12794   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13033:13079   */\n      tag_519\n      swap1\n        /* \"#utility.yul\":13059:13078   */\n      dup4\n      add\n        /* \"#utility.yul\":13051:13057   */\n      dup5\n        /* \"#utility.yul\":13033:13079   */\n      tag_431\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":13025:13079   */\n      swap7\n        /* \"#utility.yul\":12596:13085   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13090:13339   */\n    tag_377:\n        /* \"#utility.yul\":13159:13165   */\n      0x00\n        /* \"#utility.yul\":13212:13214   */\n      0x20\n        /* \"#utility.yul\":13200:13209   */\n      dup3\n        /* \"#utility.yul\":13191:13198   */\n      dup5\n        /* \"#utility.yul\":13187:13210   */\n      sub\n        /* \"#utility.yul\":13183:13215   */\n      slt\n        /* \"#utility.yul\":13180:13232   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":13228:13229   */\n      0x00\n        /* \"#utility.yul\":13225:13226   */\n      dup1\n        /* \"#utility.yul\":13218:13230   */\n      revert\n        /* \"#utility.yul\":13180:13232   */\n    tag_521:\n        /* \"#utility.yul\":13260:13269   */\n      dup2\n        /* \"#utility.yul\":13254:13270   */\n      mload\n        /* \"#utility.yul\":13279:13309   */\n      tag_270\n        /* \"#utility.yul\":13303:13308   */\n      dup2\n        /* \"#utility.yul\":13279:13309   */\n      tag_429\n      jump\t// in\n\n    auxdata: 0xa264697066735822122020c41a66b35513ad7a7ea87403220fb33aee9741a4bf904b412c5a8b7a0b507d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_175": {
									"entryPoint": null,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2785": {
									"entryPoint": null,
									"id": 2785,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1560": {
									"entryPoint": 175,
									"id": 1560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 179,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increment_1602": {
									"entryPoint": 261,
									"id": 1602,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2732:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:14"
															},
															"nodeType": "YulIf",
															"src": "289:61:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:14"
															},
															"nodeType": "YulIf",
															"src": "359:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:14",
														"type": ""
													}
												],
												"src": "146:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:14",
														"type": ""
													}
												],
												"src": "531:121:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:14"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:14"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:14"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:14",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:14"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:14"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:14"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:14",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:14"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:14"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:14"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:14"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:14"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:14"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:14"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:14"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:14"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:14",
																			"statements": []
																		},
																		"src": "1104:82:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:14"
															},
															"nodeType": "YulIf",
															"src": "748:448:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:14",
														"type": ""
													}
												],
												"src": "657:545:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:14",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:14"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:14"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:14",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:14"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:14",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:14",
														"type": ""
													}
												],
												"src": "1207:166:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:14",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:14"
															},
															"nodeType": "YulIf",
															"src": "1517:56:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:14"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:14"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:14",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:14"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:14"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:14"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:14"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:14",
																					"statements": []
																				},
																				"src": "1964:236:14"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:14",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:14",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:14"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:14"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:14"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:14",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:14"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:14"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:14",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:14"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:14"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:14"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:14"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:14"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:14"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:14"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:14",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:14"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:14"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:14"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:14"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:14",
														"type": ""
													}
												],
												"src": "1378:1352:14"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600e81526020016d29b7bab62137bab7322a37b5b2b760911b8152506040518060400160405280600381526020016214d09560ea1b8152508160009081620000669190620001b3565b506001620000758282620001b3565b505050620000926200008c620000af60201b60201c565b620000b3565b620000a960076200010560201b62000b881760201c565b6200027f565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80546001019055565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013957607f821691505b6020821081036200015a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001ae57600081815260208120601f850160051c81016020861015620001895750805b601f850160051c820191505b81811015620001aa5782815560010162000195565b5050505b505050565b81516001600160401b03811115620001cf57620001cf6200010e565b620001e781620001e0845462000124565b8462000160565b602080601f8311600181146200021f5760008415620002065750858301515b600019600386901b1c1916600185901b178555620001aa565b600085815260208120601f198616915b8281101562000250578886015182559484019460019091019084016200022f565b50858210156200026f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611a34806200028f6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806370a08231116100f9578063b7caec8711610097578063c12290d211610071578063c12290d2146103df578063c87b56dd146103f2578063e985e9c514610405578063f2fde38b1461044157600080fd5b8063b7caec87146103a6578063b88d4fde146103b9578063bdca14cf146103cc57600080fd5b80638da5cb5b116100d35780638da5cb5b14610367578063916b9bef1461037857806395d89b411461038b578063a22cb4651461039357600080fd5b806370a0823114610329578063715018a61461033c57806382afd23b1461034457600080fd5b80633355594a1161016657806342842e0e1161014057806342842e0e146102c757806342966c68146102da5780634814f035146102ed5780636352211e1461031657600080fd5b80633355594a1461025157806334566cdf1461027f57806339f920ab146102b457600080fd5b806301ffc9a7146101ae57806306fdde03146101d6578063081812fc146101eb578063095ea7b31461021657806309df30ec1461022b57806323b872dd1461023e575b600080fd5b6101c16101bc366004611560565b610454565b60405190151581526020015b60405180910390f35b6101de6104a6565b6040516101cd91906115cd565b6101fe6101f93660046115e0565b610538565b6040516001600160a01b0390911681526020016101cd565b610229610224366004611615565b61055f565b005b6102296102393660046115e0565b610679565b61022961024c36600461163f565b61069c565b61027161025f3660046115e0565b6000908152600a602052604090205490565b6040519081526020016101cd565b6102a261028d3660046115e0565b60009081526008602052604090205460ff1690565b60405160ff90911681526020016101cd565b6101c16102c236600461167b565b6106cd565b6102296102d536600461163f565b61070c565b6102296102e83660046115e0565b610727565b6102716102fb36600461167b565b6001600160a01b03166000908152600b602052604090205490565b6101fe6103243660046115e0565b610778565b61027161033736600461167b565b6107d8565b61022961085e565b6101c16103523660046115e0565b60009081526009602052604090205460ff1690565b6006546001600160a01b03166101fe565b6102296103863660046115e0565b610872565b6101de610892565b6102296103a1366004611696565b6108a1565b6102a26103b436600461167b565b6108b0565b6102296103c73660046116e8565b6108d2565b6102296103da3660046117d5565b61090a565b6102296103ed366004611801565b61097f565b6101de6104003660046115e0565b610a9e565b6101c161041336600461182d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61022961044f36600461167b565b610b12565b60006001600160e01b031982166380ac58cd60e01b148061048557506001600160e01b03198216635b5e139f60e01b145b806104a057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546104b590611857565b80601f01602080910402602001604051908101604052809291908181526020018280546104e190611857565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b600061054382610b91565b506000908152600460205260409020546001600160a01b031690565b600061056a82610778565b9050806001600160a01b0316836001600160a01b0316036105dc5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105f857506105f88133610413565b61066a5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016105d3565b6106748383610bf0565b505050565b610681610c5e565b6000908152600960205260409020805460ff19166001179055565b6106a63382610cb8565b6106c25760405162461bcd60e51b81526004016105d390611891565b610674838383610d37565b6000600960006106f2846001600160a01b03166000908152600b602052604090205490565b815260208101919091526040016000205460ff1692915050565b610674838383604051806020016040528060008152506108d2565b3361073182610778565b6001600160a01b03161461076c5760405162461bcd60e51b81526020600482015260026024820152614e4f60f01b60448201526064016105d3565b61077581610ea8565b50565b6000818152600260205260408120546001600160a01b0316806104a05760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d3565b60006001600160a01b0382166108425760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105d3565b506001600160a01b031660009081526003602052604090205490565b610866610c5e565b6108706000610eb1565b565b61087a610c5e565b6000908152600960205260409020805460ff19169055565b6060600180546104b590611857565b6108ac338383610f03565b5050565b6001600160a01b0381166000908152600b60205260408120546104a09061028d565b6108dc3383610cb8565b6108f85760405162461bcd60e51b81526004016105d390611891565b61090484848484610fd1565b50505050565b610912610c5e565b8060018160ff161015801561092b575060038160ff1611155b61095c5760405162461bcd60e51b8152602060048201526002602482015261125560f21b60448201526064016105d3565b50600091825260086020526040909120805460ff191660ff909216919091179055565b610987610c5e565b8160018160ff16101580156109a0575060038160ff1611155b6109d15760405162461bcd60e51b8152602060048201526002602482015261125560f21b60448201526064016105d3565b6001600160a01b0384166000908152600b602052604090205415610a205760405162461bcd60e51b81526004016105d3906020808252600490820152635354414560e01b604082015260600190565b6000610a2b60075490565b9050610a3b600780546001019055565b60008181526009602090815260408083208054600160ff199182161790915560088352818420805490911660ff8916179055600a82528083208690556001600160a01b0388168352600b9091529020819055610a978582611004565b5050505050565b6060610aa982610b91565b6000610ac060408051602081019091526000815290565b90506000815111610ae05760405180602001604052806000815250610b0b565b80610aea8461101e565b604051602001610afb9291906118de565b6040516020818303038152906040525b9392505050565b610b1a610c5e565b6001600160a01b038116610b7f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d3565b61077581610eb1565b80546001019055565b6000818152600260205260409020546001600160a01b03166107755760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d3565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c2582610778565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6006546001600160a01b031633146108705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d3565b600080610cc483610778565b9050806001600160a01b0316846001600160a01b03161480610d0b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610d2f5750836001600160a01b0316610d2484610538565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d4a82610778565b6001600160a01b031614610d705760405162461bcd60e51b81526004016105d39061190d565b6001600160a01b038216610dd25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105d3565b610ddf83838360016110b1565b826001600160a01b0316610df282610778565b6001600160a01b031614610e185760405162461bcd60e51b81526004016105d39061190d565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61077581611102565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610f645760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105d3565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610fdc848484610d37565b610fe8848484846111a5565b6109045760405162461bcd60e51b81526004016105d390611952565b6108ac8282604051806020016040528060008152506112a6565b6060600061102b836112d9565b600101905060008167ffffffffffffffff81111561104b5761104b6116d2565b6040519080825280601f01601f191660200182016040528015611075576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461107f57509392505050565b6001600160a01b03841615806110ce57506001600160a01b038316155b6109045760405162461bcd60e51b815260206004820152600560248201526414d09510d560da1b60448201526064016105d3565b600061110d82610778565b905061111d8160008460016110b1565b61112682610778565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b1561129b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111e99033908990889088906004016119a4565b6020604051808303816000875af1925050508015611224575060408051601f3d908101601f19168201909252611221918101906119e1565b60015b611281573d808015611252576040519150601f19603f3d011682016040523d82523d6000602084013e611257565b606091505b5080516000036112795760405162461bcd60e51b81526004016105d390611952565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d2f565b506001949350505050565b6112b083836113b1565b6112bd60008484846111a5565b6106745760405162461bcd60e51b81526004016105d390611952565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106113185772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611344576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061136257662386f26fc10000830492506010015b6305f5e100831061137a576305f5e100830492506008015b612710831061138e57612710830492506004015b606483106113a0576064830492506002015b600a83106104a05760010192915050565b6001600160a01b0382166114075760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105d3565b6000818152600260205260409020546001600160a01b03161561146c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105d3565b61147a6000838360016110b1565b6000818152600260205260409020546001600160a01b0316156114df5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105d3565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461077557600080fd5b60006020828403121561157257600080fd5b8135610b0b8161154a565b60005b83811015611598578181015183820152602001611580565b50506000910152565b600081518084526115b981602086016020860161157d565b601f01601f19169290920160200192915050565b602081526000610b0b60208301846115a1565b6000602082840312156115f257600080fd5b5035919050565b80356001600160a01b038116811461161057600080fd5b919050565b6000806040838503121561162857600080fd5b611631836115f9565b946020939093013593505050565b60008060006060848603121561165457600080fd5b61165d846115f9565b925061166b602085016115f9565b9150604084013590509250925092565b60006020828403121561168d57600080fd5b610b0b826115f9565b600080604083850312156116a957600080fd5b6116b2836115f9565b9150602083013580151581146116c757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156116fe57600080fd5b611707856115f9565b9350611715602086016115f9565b925060408501359150606085013567ffffffffffffffff8082111561173957600080fd5b818701915087601f83011261174d57600080fd5b81358181111561175f5761175f6116d2565b604051601f8201601f19908116603f01168101908382118183101715611787576117876116d2565b816040528281528a60208487010111156117a057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b803560ff8116811461161057600080fd5b600080604083850312156117e857600080fd5b823591506117f8602084016117c4565b90509250929050565b60008060006060848603121561181657600080fd5b61181f846115f9565b925061166b602085016117c4565b6000806040838503121561184057600080fd5b611849836115f9565b91506117f8602084016115f9565b600181811c9082168061186b57607f821691505b60208210810361188b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516118f081846020880161157d565b83519083019061190481836020880161157d565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119d7908301846115a1565b9695505050505050565b6000602082840312156119f357600080fd5b8151610b0b8161154a56fea264697066735822122020c41a66b35513ad7a7ea87403220fb33aee9741a4bf904b412c5a8b7a0b507d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x29B7BAB62137BAB7322A37B5B2B7 PUSH1 0x91 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x14D095 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x66 SWAP2 SWAP1 PUSH3 0x1B3 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x75 DUP3 DUP3 PUSH3 0x1B3 JUMP JUMPDEST POP POP POP PUSH3 0x92 PUSH3 0x8C PUSH3 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB3 JUMP JUMPDEST PUSH3 0xA9 PUSH1 0x7 PUSH3 0x105 PUSH1 0x20 SHL PUSH3 0xB88 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x27F JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x139 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x15A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1AE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x189 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1AA JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x195 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1CF JUMPI PUSH3 0x1CF PUSH3 0x10E JUMP JUMPDEST PUSH3 0x1E7 DUP2 PUSH3 0x1E0 DUP5 SLOAD PUSH3 0x124 JUMP JUMPDEST DUP5 PUSH3 0x160 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x21F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x206 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1AA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x250 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x22F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x26F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1A34 DUP1 PUSH3 0x28F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB7CAEC87 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC12290D2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC12290D2 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB7CAEC87 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xBDCA14CF EQ PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x916B9BEF EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3355594A GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x4814F035 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3355594A EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x34566CDF EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x39F920AB EQ PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x9DF30EC EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1615 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH2 0x271 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FE JUMP JUMPDEST PUSH2 0x229 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x892 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x8A1 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x8D2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x90A JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x400 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x182D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x44F CALLDATASIZE PUSH1 0x4 PUSH2 0x167B JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x485 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4A0 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4B5 SWAP1 PUSH2 0x1857 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E1 SWAP1 PUSH2 0x1857 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x503 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x511 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x543 DUP3 PUSH2 0xB91 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP3 PUSH2 0x778 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x5F8 JUMPI POP PUSH2 0x5F8 DUP2 CALLER PUSH2 0x413 JUMP JUMPDEST PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x674 DUP4 DUP4 PUSH2 0xBF0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x681 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6A6 CALLER DUP3 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x674 DUP4 DUP4 DUP4 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH2 0x6F2 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x674 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8D2 JUMP JUMPDEST CALLER PUSH2 0x731 DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E4F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x775 DUP2 PUSH2 0xEA8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x866 PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x870 PUSH1 0x0 PUSH2 0xEB1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x87A PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x4B5 SWAP1 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0x8AC CALLER DUP4 DUP4 PUSH2 0xF03 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0x28D JUMP JUMPDEST PUSH2 0x8DC CALLER DUP4 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x904 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFD1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x912 PUSH2 0xC5E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0x92B JUMPI POP PUSH1 0x3 DUP2 PUSH1 0xFF AND GT ISZERO JUMPDEST PUSH2 0x95C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x1255 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x987 PUSH2 0xC5E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0x9A0 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0xFF AND GT ISZERO JUMPDEST PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x1255 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x53544145 PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2B PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xA3B PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0xFF DUP10 AND OR SWAP1 SSTORE PUSH1 0xA DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xA97 DUP6 DUP3 PUSH2 0x1004 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAA9 DUP3 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC0 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB0B JUMP JUMPDEST DUP1 PUSH2 0xAEA DUP5 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAFB SWAP3 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB1A PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x775 DUP2 PUSH2 0xEB1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xC25 DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCC4 DUP4 PUSH2 0x778 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xD0B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xD2F JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD24 DUP5 PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD4A DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0xDDF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10B1 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDF2 DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x775 DUP2 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFDC DUP5 DUP5 DUP5 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0xFE8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x8AC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x102B DUP4 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104B PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1075 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x107F JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 PUSH2 0x10CE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x14D09510D5 PUSH1 0xDA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110D DUP3 PUSH2 0x778 JUMP JUMPDEST SWAP1 POP PUSH2 0x111D DUP2 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x1126 DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x3 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE DUP8 DUP6 MSTORE PUSH1 0x2 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE MLOAD SWAP3 SWAP4 POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x129B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x11E9 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1224 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1221 SWAP2 DUP2 ADD SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1281 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1252 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1952 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xD2F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x12B0 DUP4 DUP4 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x12BD PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1952 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1318 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1344 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1362 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x137A JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x138E JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x13A0 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x4A0 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1407 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x146C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x147A PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x14DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB0B DUP2 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1598 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1580 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x15B9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x157D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB0B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1631 DUP4 PUSH2 0x15F9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165D DUP5 PUSH2 0x15F9 JUMP JUMPDEST SWAP3 POP PUSH2 0x166B PUSH1 0x20 DUP6 ADD PUSH2 0x15F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0B DUP3 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B2 DUP4 PUSH2 0x15F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x16C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1707 DUP6 PUSH2 0x15F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1715 PUSH1 0x20 DUP7 ADD PUSH2 0x15F9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x174D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x175F JUMPI PUSH2 0x175F PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1787 JUMPI PUSH2 0x1787 PUSH2 0x16D2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x17A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x17F8 PUSH1 0x20 DUP5 ADD PUSH2 0x17C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x181F DUP5 PUSH2 0x15F9 JUMP JUMPDEST SWAP3 POP PUSH2 0x166B PUSH1 0x20 DUP6 ADD PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1849 DUP4 PUSH2 0x15F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x17F8 PUSH1 0x20 DUP5 ADD PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x186B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x188B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x18F0 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x157D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1904 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x157D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x19D7 SWAP1 DUP4 ADD DUP5 PUSH2 0x15A1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB0B DUP2 PUSH2 0x154A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xC4 BYTE PUSH7 0xB35513AD7A7EA8 PUSH21 0x3220FB33AEE9741A4BF904B412C5A8B7A0B507D64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "266:2547:12:-:0;;;706:90;;;;;;;;;;1390:113:1;;;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:1;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;762:27:12::1;:15;:25;;;;;:27;;:::i;:::-;266:2547:::0;;640:96:6;719:10;;640:96::o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;945:123:7:-;1032:19;;1050:1;1032:19;;;945:123::o;14:127:14:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:14;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:14;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:14;;;2580:26;2531:89;-1:-1:-1;;1335:1:14;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:14;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:14;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:14;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:14:o;:::-;266:2547:12;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1056": {
									"entryPoint": null,
									"id": 1056,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_889": {
									"entryPoint": 3056,
									"id": 889,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_326": {
									"entryPoint": null,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_2899": {
									"entryPoint": 4273,
									"id": 2899,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_2913": {
									"entryPoint": 3752,
									"id": 2913,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_780": {
									"entryPoint": 4354,
									"id": 780,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_997": {
									"entryPoint": 4517,
									"id": 997,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 3166,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_558": {
									"entryPoint": null,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_592": {
									"entryPoint": 3256,
									"id": 592,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_713": {
									"entryPoint": 5041,
									"id": 713,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1560": {
									"entryPoint": null,
									"id": 1560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_540": {
									"entryPoint": null,
									"id": 540,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_935": {
									"entryPoint": 2961,
									"id": 935,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeMint_607": {
									"entryPoint": 4100,
									"id": 607,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_636": {
									"entryPoint": 4774,
									"id": 636,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_527": {
									"entryPoint": 4049,
									"id": 527,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_921": {
									"entryPoint": 3843,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 3761,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_865": {
									"entryPoint": 3383,
									"id": 865,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@accessTier_2972": {
									"entryPoint": null,
									"id": 2972,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@accessTier_2986": {
									"entryPoint": 2224,
									"id": 2986,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_369": {
									"entryPoint": 1375,
									"id": 369,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_230": {
									"entryPoint": 2008,
									"id": 230,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_2869": {
									"entryPoint": 1831,
									"id": 2869,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_1588": {
									"entryPoint": null,
									"id": 1588,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deactivate_2946": {
									"entryPoint": 2162,
									"id": 2946,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getApproved_387": {
									"entryPoint": 1336,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasActiveSBT_3024": {
									"entryPoint": 1741,
									"id": 3024,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hashedIdentity_3010": {
									"entryPoint": null,
									"id": 3010,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1602": {
									"entryPoint": 2952,
									"id": 1602,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isActive_2998": {
									"entryPoint": null,
									"id": 2998,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_422": {
									"entryPoint": null,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1236": {
									"entryPoint": null,
									"id": 1236,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2557": {
									"entryPoint": 4825,
									"id": 2557,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@modifyLevel_2932": {
									"entryPoint": 2314,
									"id": 2932,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_268": {
									"entryPoint": 1190,
									"id": 268,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_258": {
									"entryPoint": 1912,
									"id": 258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownerToTokenId_3036": {
									"entryPoint": null,
									"id": 3036,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reactivate_2960": {
									"entryPoint": 1657,
									"id": 2960,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 2142,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_2849": {
									"entryPoint": 2431,
									"id": 2849,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_468": {
									"entryPoint": 1804,
									"id": 468,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_498": {
									"entryPoint": 2258,
									"id": 498,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_404": {
									"entryPoint": 2209,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1842": {
									"entryPoint": null,
									"id": 1842,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_206": {
									"entryPoint": 1108,
									"id": 206,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_278": {
									"entryPoint": 2194,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1702": {
									"entryPoint": 4126,
									"id": 1702,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_317": {
									"entryPoint": 2718,
									"id": 317,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_449": {
									"entryPoint": 1692,
									"id": 449,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2834,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint8t_bytes32": {
									"entryPoint": 6145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint8": {
									"entryPoint": 6101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_uint8": {
									"entryPoint": 6084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6564,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1544e7eb480cc28803f7ff893bd999e62fb759c7d172fc27414594c5d9c925f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ab6e7be7cc44241c381ed5a7ee502c131026b3265e0e6310f1c7de576b41e462__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b4e77d6751f48f9ae6ec19bfc6775dd68a9f905a6fc43cc23aca4741c7c6930c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c27fe22e5587a06b531fdeee57b4fe954a8237f51d1940d181db858ee4066fa3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5842,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14059:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:14",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:14",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:14"
															},
															"nodeType": "YulIf",
															"src": "68:71:14"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:14",
														"type": ""
													}
												],
												"src": "14:131:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:14"
															},
															"nodeType": "YulIf",
															"src": "229:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:14",
														"type": ""
													}
												],
												"src": "150:245:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:14",
														"type": ""
													}
												],
												"src": "400:187:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:14",
																"statements": []
															},
															"src": "687:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:14",
														"type": ""
													}
												],
												"src": "592:250:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:14",
														"type": ""
													}
												],
												"src": "847:271:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:14",
														"type": ""
													}
												],
												"src": "1123:220:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:14"
															},
															"nodeType": "YulIf",
															"src": "1428:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:14",
														"type": ""
													}
												],
												"src": "1348:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:14",
														"type": ""
													}
												],
												"src": "1533:203:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:14"
															},
															"nodeType": "YulIf",
															"src": "1838:70:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:14",
														"type": ""
													}
												],
												"src": "1741:173:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:14"
															},
															"nodeType": "YulIf",
															"src": "2016:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:14",
														"type": ""
													}
												],
												"src": "1919:254:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2282:224:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2328:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2340:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2330:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2330:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2330:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2303:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2312:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2324:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2295:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:32:14"
															},
															"nodeType": "YulIf",
															"src": "2292:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2353:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2382:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2363:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2363:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2401:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2445:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2430:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2411:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2458:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2485:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2496:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2468:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2232:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2243:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2255:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2263:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2271:6:14",
														"type": ""
													}
												],
												"src": "2178:328:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:76:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2622:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2634:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2645:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2630:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2630:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2622:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2664:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2675:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2657:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2657:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2657:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2581:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2592:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:14",
														"type": ""
													}
												],
												"src": "2511:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2790:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2800:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2812:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2823:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2808:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2800:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2842:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2857:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2865:4:14",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2853:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2853:17:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2835:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:36:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2835:36:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2759:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2770:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2781:4:14",
														"type": ""
													}
												],
												"src": "2693:184:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2952:116:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2998:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3007:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3010:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3000:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3000:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3000:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2973:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2982:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2969:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2969:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2994:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2965:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2965:32:14"
															},
															"nodeType": "YulIf",
															"src": "2962:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3023:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3052:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3033:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2918:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2929:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2941:6:14",
														"type": ""
													}
												],
												"src": "2882:186:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:76:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3184:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3196:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3207:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3192:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3184:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3226:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3237:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3219:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3143:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3154:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3165:4:14",
														"type": ""
													}
												],
												"src": "3073:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3339:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3385:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3394:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3397:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3387:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3387:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3387:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3360:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3369:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3356:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3356:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3381:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3352:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:32:14"
															},
															"nodeType": "YulIf",
															"src": "3349:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3410:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3439:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3420:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3420:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3410:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3458:45:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3488:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3499:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3484:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3484:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3471:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3471:32:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3462:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3556:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3565:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3568:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3558:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3558:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3558:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3525:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3546:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3539:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3539:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3532:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3532:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3522:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3522:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3515:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3515:40:14"
															},
															"nodeType": "YulIf",
															"src": "3512:60:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3581:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3591:5:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3581:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3297:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3308:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3320:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3328:6:14",
														"type": ""
													}
												],
												"src": "3255:347:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3639:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3656:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3663:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3668:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3659:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3659:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3649:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3649:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3696:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3699:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3689:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3689:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3689:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3720:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3723:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3713:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3713:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3713:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3607:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3869:1008:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3916:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3925:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3928:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3918:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3918:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3918:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3890:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3899:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3886:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3886:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3911:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3882:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3882:33:14"
															},
															"nodeType": "YulIf",
															"src": "3879:53:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3941:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3951:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3941:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3989:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4022:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4033:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4018:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4018:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3999:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3989:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4046:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4073:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4084:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4069:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4069:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4056:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4097:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4128:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4139:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4124:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4124:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4111:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4111:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4101:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4152:28:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4162:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4156:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4207:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4216:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4219:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4209:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4209:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4209:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4195:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4203:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4192:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:14:14"
															},
															"nodeType": "YulIf",
															"src": "4189:34:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4232:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4246:9:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4257:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4242:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4242:22:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4236:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4312:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4321:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4324:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4314:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4314:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4314:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4291:2:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4295:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4287:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4287:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4302:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4283:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4283:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4276:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4276:35:14"
															},
															"nodeType": "YulIf",
															"src": "4273:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4337:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4360:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4347:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4347:16:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4341:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4386:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4388:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4388:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4388:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4378:2:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4382:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4375:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4375:10:14"
															},
															"nodeType": "YulIf",
															"src": "4372:36:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4417:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4431:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4427:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4427:7:14"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4421:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4443:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4457:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4447:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4475:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4497:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4521:2:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4525:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4517:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4517:13:14"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4532:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4513:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4513:22:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4537:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4509:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4509:31:14"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4542:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4505:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4505:40:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4493:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:53:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4479:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4605:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4607:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4607:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4607:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4564:10:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4576:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4561:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4561:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4584:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4596:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4581:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4581:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4558:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:46:14"
															},
															"nodeType": "YulIf",
															"src": "4555:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4643:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4647:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4636:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4636:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4636:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4674:6:14"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4682:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4667:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4667:18:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4667:18:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4731:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4740:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4743:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4733:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4733:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4733:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4708:2:14"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4712:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4704:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4704:11:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4717:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4700:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4700:20:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4722:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4697:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4697:33:14"
															},
															"nodeType": "YulIf",
															"src": "4694:53:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4773:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4781:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4769:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4769:15:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4790:2:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4794:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4786:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4786:11:14"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4799:2:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4756:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4756:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4756:46:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4826:6:14"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4834:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4822:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4822:15:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4839:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4818:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4818:24:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4844:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4811:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4811:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4811:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4855:16:14",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4865:6:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4855:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3811:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3822:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3834:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3842:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3850:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3858:6:14",
														"type": ""
													}
												],
												"src": "3739:1138:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4929:109:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4939:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4961:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4948:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4948:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4939:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5016:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5025:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5028:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5018:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5018:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4990:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5001:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5008:4:14",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4997:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4997:16:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4987:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4987:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4980:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:35:14"
															},
															"nodeType": "YulIf",
															"src": "4977:55:14"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4908:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4919:5:14",
														"type": ""
													}
												],
												"src": "4882:156:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5128:165:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5174:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5183:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5186:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5176:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5176:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5176:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5149:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5158:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5145:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5145:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5170:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5141:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5141:32:14"
															},
															"nodeType": "YulIf",
															"src": "5138:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5199:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5222:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5209:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5209:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5241:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5272:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5283:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5268:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "5251:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:36:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5086:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5097:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5109:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5117:6:14",
														"type": ""
													}
												],
												"src": "5043:250:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5400:222:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5446:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5455:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5458:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5448:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5448:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5448:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5421:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5430:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5417:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5417:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5442:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5413:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5413:32:14"
															},
															"nodeType": "YulIf",
															"src": "5410:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5471:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5500:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5481:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5471:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5519:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5550:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5561:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5546:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5546:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "5529:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5529:36:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5519:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5574:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5601:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5612:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5597:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5597:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5584:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5574:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint8t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5350:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5361:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5373:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5381:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5389:6:14",
														"type": ""
													}
												],
												"src": "5298:324:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5714:173:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5760:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5769:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5772:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5762:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5762:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5762:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5735:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5744:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5731:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5731:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5756:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:32:14"
															},
															"nodeType": "YulIf",
															"src": "5724:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5785:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5814:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5795:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5795:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5785:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5833:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5866:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5877:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5862:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5862:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5843:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5843:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5833:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5672:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5683:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5695:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5703:6:14",
														"type": ""
													}
												],
												"src": "5627:260:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5947:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5957:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5971:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5974:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5967:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5967:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5957:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5988:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6018:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6024:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6014:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6014:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5992:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6065:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6067:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6081:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6089:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6077:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6077:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6067:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6045:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6038:26:14"
															},
															"nodeType": "YulIf",
															"src": "6035:61:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6155:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6176:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6183:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6188:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6179:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6179:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6169:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6169:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6169:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6220:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6223:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6213:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6213:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6213:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6248:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6251:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6241:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6241:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6241:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6111:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6134:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6142:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6131:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6131:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6108:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6108:38:14"
															},
															"nodeType": "YulIf",
															"src": "6105:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5927:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5936:6:14",
														"type": ""
													}
												],
												"src": "5892:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6451:223:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6468:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6479:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6461:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6461:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6461:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6502:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6513:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6498:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6498:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6518:2:14",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6491:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6491:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6491:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6541:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6552:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6537:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6537:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6557:34:14",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6530:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6530:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6612:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6623:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:18:14"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6628:3:14",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6601:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6641:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6653:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6664:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6649:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6641:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6428:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6442:4:14",
														"type": ""
													}
												],
												"src": "6277:397:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6853:251:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6870:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6881:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6863:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6863:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6863:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6904:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6915:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6900:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6900:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6920:2:14",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6893:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6893:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6893:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6943:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6954:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6939:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6939:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6959:34:14",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6932:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6932:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6932:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7014:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7025:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7010:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7010:18:14"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7030:31:14",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7003:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7003:59:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7003:59:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7071:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7083:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7094:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7079:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7071:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6830:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6844:4:14",
														"type": ""
													}
												],
												"src": "6679:425:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7283:235:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7300:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7311:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7293:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7293:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7345:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7330:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7350:2:14",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7323:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7323:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7323:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7373:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7384:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7369:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7369:18:14"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7389:34:14",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7362:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7362:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7362:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7444:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7455:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7440:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7440:18:14"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7460:15:14",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7433:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7433:43:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7485:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7497:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7508:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7493:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7493:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7485:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7260:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7274:4:14",
														"type": ""
													}
												],
												"src": "7109:409:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:151:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7714:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7725:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7707:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7707:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7748:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7759:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7744:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7744:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7764:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7737:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7737:29:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7737:29:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7786:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7797:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7782:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7782:18:14"
																	},
																	{
																		"hexValue": "4e4f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7802:4:14",
																		"type": "",
																		"value": "NO"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7775:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7775:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7775:32:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7816:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7828:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7839:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7824:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7824:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7816:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1544e7eb480cc28803f7ff893bd999e62fb759c7d172fc27414594c5d9c925f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7674:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7688:4:14",
														"type": ""
													}
												],
												"src": "7523:325:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8027:174:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8044:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8055:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8037:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8037:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8037:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8078:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8089:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8074:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8074:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8094:2:14",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8067:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8067:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8067:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8117:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8128:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8113:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8113:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8133:26:14",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8106:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8106:54:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8106:54:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8169:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8181:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8192:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8177:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8177:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8169:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8004:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8018:4:14",
														"type": ""
													}
												],
												"src": "7853:348:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8380:231:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8397:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8408:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8390:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8390:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8390:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8431:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8442:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8427:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8427:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8447:2:14",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8420:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8420:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8420:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8470:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8481:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8466:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8466:18:14"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8486:34:14",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8459:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8459:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8459:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8541:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8552:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8537:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8537:18:14"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8557:11:14",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8530:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8530:39:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8530:39:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8578:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8590:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8601:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8586:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8586:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8578:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8357:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8371:4:14",
														"type": ""
													}
												],
												"src": "8206:405:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8790:151:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8807:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8818:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8800:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8800:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8800:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8841:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8852:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8837:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8837:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8857:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8830:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8830:29:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8830:29:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8879:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8890:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8875:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8875:18:14"
																	},
																	{
																		"hexValue": "4954",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8895:4:14",
																		"type": "",
																		"value": "IT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8868:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8868:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8868:32:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8909:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8921:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8932:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8917:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8917:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8909:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c27fe22e5587a06b531fdeee57b4fe954a8237f51d1940d181db858ee4066fa3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8767:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8781:4:14",
														"type": ""
													}
												],
												"src": "8616:325:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9120:153:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9137:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9148:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9130:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9130:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9130:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9182:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9167:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9167:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9187:1:14",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9160:29:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9160:29:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9209:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9220:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9205:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9205:18:14"
																	},
																	{
																		"hexValue": "53544145",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9225:6:14",
																		"type": "",
																		"value": "STAE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9198:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9198:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9198:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9241:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9253:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9264:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9249:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9241:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ab6e7be7cc44241c381ed5a7ee502c131026b3265e0e6310f1c7de576b41e462__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9097:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9111:4:14",
														"type": ""
													}
												],
												"src": "8946:327:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9465:309:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9475:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9495:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9489:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9489:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9479:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9550:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9558:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9546:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9546:17:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9565:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9570:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9511:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9511:66:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9511:66:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9586:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9603:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9608:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9599:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9599:16:14"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "9590:5:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9624:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9646:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9640:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9640:13:14"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "9628:8:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9701:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9709:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9697:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9697:17:14"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "9716:5:14"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "9723:8:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9662:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9662:70:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9662:70:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9741:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "9752:5:14"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "9759:8:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9748:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9748:20:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9741:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9433:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9438:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9446:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9457:3:14",
														"type": ""
													}
												],
												"src": "9278:496:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9953:228:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9970:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9981:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9963:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9963:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9963:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10004:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10015:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10000:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10000:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10020:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9993:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9993:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9993:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10043:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10054:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10039:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10039:18:14"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10059:34:14",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10032:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10032:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10032:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10114:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10125:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10110:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10110:18:14"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10130:8:14",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10103:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10103:36:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10103:36:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10148:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10160:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10171:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10156:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10156:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10148:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9930:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9944:4:14",
														"type": ""
													}
												],
												"src": "9779:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10360:182:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10377:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10388:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10370:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10370:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10370:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10411:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10422:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10407:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10407:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10427:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10400:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10400:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10400:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10450:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10461:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10446:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10446:18:14"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10466:34:14",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10439:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10439:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10439:62:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10510:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10522:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10533:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10518:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10518:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10510:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10337:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10351:4:14",
														"type": ""
													}
												],
												"src": "10186:356:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10721:227:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10738:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10749:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10731:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10731:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10731:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10772:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10783:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10768:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10768:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10788:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10761:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10761:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10811:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10822:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10807:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10807:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10827:34:14",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10800:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10800:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10800:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10882:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10893:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10878:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10878:18:14"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10898:7:14",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10871:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10871:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10871:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10915:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10927:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10938:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10923:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10923:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10915:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10698:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10712:4:14",
														"type": ""
													}
												],
												"src": "10547:401:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11127:226:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11144:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11155:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11137:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11137:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11137:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11178:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11189:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11174:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11174:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11194:2:14",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11167:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11167:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11167:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11217:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11228:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11213:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11213:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11233:34:14",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11206:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11206:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11206:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11288:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11299:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11284:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11284:18:14"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11304:6:14",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11277:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11277:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11277:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11320:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11332:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11343:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11328:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11328:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11320:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11104:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11118:4:14",
														"type": ""
													}
												],
												"src": "10953:400:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11532:175:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11549:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11560:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11542:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11542:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11542:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11583:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11594:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11579:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11579:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11599:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11572:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11572:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11572:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11622:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11633:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11618:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11618:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11638:27:14",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11611:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11611:55:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11611:55:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11675:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11687:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11698:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11683:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11683:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11675:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11509:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11523:4:14",
														"type": ""
													}
												],
												"src": "11358:349:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11886:240:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11903:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11914:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11896:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11896:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11896:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11937:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11948:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11933:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11933:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11953:2:14",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11926:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11926:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11926:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11976:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11987:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11972:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11972:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11992:34:14",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11965:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11965:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11965:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12047:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12058:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12043:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12043:18:14"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12063:20:14",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12036:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12036:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12036:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12093:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12105:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12116:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12101:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12101:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12093:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11863:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11877:4:14",
														"type": ""
													}
												],
												"src": "11712:414:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12163:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12180:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12187:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12192:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12183:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12183:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12173:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12173:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12173:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12220:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12223:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12213:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12213:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12213:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12244:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12247:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12237:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12237:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12237:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12131:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12437:154:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12454:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12465:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12447:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12447:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12447:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12488:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12499:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12484:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12484:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12504:1:14",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12477:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12477:29:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12477:29:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12526:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12537:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12522:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12522:18:14"
																	},
																	{
																		"hexValue": "5342544354",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12542:7:14",
																		"type": "",
																		"value": "SBTCT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12515:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12515:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12515:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12559:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12571:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12582:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12567:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12567:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12559:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4e77d6751f48f9ae6ec19bfc6775dd68a9f905a6fc43cc23aca4741c7c6930c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12414:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12428:4:14",
														"type": ""
													}
												],
												"src": "12263:328:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12799:286:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12809:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12827:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12832:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12823:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12823:11:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12836:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12819:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12819:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12813:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12854:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12869:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12877:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12865:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12865:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12847:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12847:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12847:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12901:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12912:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12897:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12897:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12921:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12929:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12917:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12917:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12890:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12890:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12890:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12953:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12964:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12949:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12949:18:14"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12969:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12942:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12942:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12942:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12996:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13007:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12992:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12992:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13012:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12985:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12985:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12985:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13025:54:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13051:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13063:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13074:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13059:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13059:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13033:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13033:46:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13025:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12744:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12755:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12763:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12771:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12779:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12790:4:14",
														"type": ""
													}
												],
												"src": "12596:489:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13170:169:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13216:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13225:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13228:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13218:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13218:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13218:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13191:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13200:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13187:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13187:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13212:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13183:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13183:32:14"
															},
															"nodeType": "YulIf",
															"src": "13180:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13241:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13260:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13254:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13254:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13245:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13303:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13279:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13279:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13279:30:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13318:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13328:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13318:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13136:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13147:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13159:6:14",
														"type": ""
													}
												],
												"src": "13090:249:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13518:182:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13535:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13546:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13528:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13528:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13528:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13569:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13580:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13565:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13565:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13585:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13558:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13558:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13558:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13608:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13619:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13604:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13604:18:14"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13624:34:14",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13597:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13597:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13597:62:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13668:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13680:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13691:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13676:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13676:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13668:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13495:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13509:4:14",
														"type": ""
													}
												],
												"src": "13344:356:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13879:178:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13896:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13907:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13889:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13889:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13889:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13930:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13941:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13926:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13926:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13946:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13919:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13919:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13919:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13969:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13980:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13965:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13965:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13985:30:14",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13958:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13958:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13958:58:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14025:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14037:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14048:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14033:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14033:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14025:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13856:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13870:4:14",
														"type": ""
													}
												],
												"src": "13705:352:14"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint8t_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1544e7eb480cc28803f7ff893bd999e62fb759c7d172fc27414594c5d9c925f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"NO\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c27fe22e5587a06b531fdeee57b4fe954a8237f51d1940d181db858ee4066fa3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"IT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ab6e7be7cc44241c381ed5a7ee502c131026b3265e0e6310f1c7de576b41e462__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"STAE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_b4e77d6751f48f9ae6ec19bfc6775dd68a9f905a6fc43cc23aca4741c7c6930c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"SBTCT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c806370a08231116100f9578063b7caec8711610097578063c12290d211610071578063c12290d2146103df578063c87b56dd146103f2578063e985e9c514610405578063f2fde38b1461044157600080fd5b8063b7caec87146103a6578063b88d4fde146103b9578063bdca14cf146103cc57600080fd5b80638da5cb5b116100d35780638da5cb5b14610367578063916b9bef1461037857806395d89b411461038b578063a22cb4651461039357600080fd5b806370a0823114610329578063715018a61461033c57806382afd23b1461034457600080fd5b80633355594a1161016657806342842e0e1161014057806342842e0e146102c757806342966c68146102da5780634814f035146102ed5780636352211e1461031657600080fd5b80633355594a1461025157806334566cdf1461027f57806339f920ab146102b457600080fd5b806301ffc9a7146101ae57806306fdde03146101d6578063081812fc146101eb578063095ea7b31461021657806309df30ec1461022b57806323b872dd1461023e575b600080fd5b6101c16101bc366004611560565b610454565b60405190151581526020015b60405180910390f35b6101de6104a6565b6040516101cd91906115cd565b6101fe6101f93660046115e0565b610538565b6040516001600160a01b0390911681526020016101cd565b610229610224366004611615565b61055f565b005b6102296102393660046115e0565b610679565b61022961024c36600461163f565b61069c565b61027161025f3660046115e0565b6000908152600a602052604090205490565b6040519081526020016101cd565b6102a261028d3660046115e0565b60009081526008602052604090205460ff1690565b60405160ff90911681526020016101cd565b6101c16102c236600461167b565b6106cd565b6102296102d536600461163f565b61070c565b6102296102e83660046115e0565b610727565b6102716102fb36600461167b565b6001600160a01b03166000908152600b602052604090205490565b6101fe6103243660046115e0565b610778565b61027161033736600461167b565b6107d8565b61022961085e565b6101c16103523660046115e0565b60009081526009602052604090205460ff1690565b6006546001600160a01b03166101fe565b6102296103863660046115e0565b610872565b6101de610892565b6102296103a1366004611696565b6108a1565b6102a26103b436600461167b565b6108b0565b6102296103c73660046116e8565b6108d2565b6102296103da3660046117d5565b61090a565b6102296103ed366004611801565b61097f565b6101de6104003660046115e0565b610a9e565b6101c161041336600461182d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61022961044f36600461167b565b610b12565b60006001600160e01b031982166380ac58cd60e01b148061048557506001600160e01b03198216635b5e139f60e01b145b806104a057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546104b590611857565b80601f01602080910402602001604051908101604052809291908181526020018280546104e190611857565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b600061054382610b91565b506000908152600460205260409020546001600160a01b031690565b600061056a82610778565b9050806001600160a01b0316836001600160a01b0316036105dc5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105f857506105f88133610413565b61066a5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016105d3565b6106748383610bf0565b505050565b610681610c5e565b6000908152600960205260409020805460ff19166001179055565b6106a63382610cb8565b6106c25760405162461bcd60e51b81526004016105d390611891565b610674838383610d37565b6000600960006106f2846001600160a01b03166000908152600b602052604090205490565b815260208101919091526040016000205460ff1692915050565b610674838383604051806020016040528060008152506108d2565b3361073182610778565b6001600160a01b03161461076c5760405162461bcd60e51b81526020600482015260026024820152614e4f60f01b60448201526064016105d3565b61077581610ea8565b50565b6000818152600260205260408120546001600160a01b0316806104a05760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d3565b60006001600160a01b0382166108425760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105d3565b506001600160a01b031660009081526003602052604090205490565b610866610c5e565b6108706000610eb1565b565b61087a610c5e565b6000908152600960205260409020805460ff19169055565b6060600180546104b590611857565b6108ac338383610f03565b5050565b6001600160a01b0381166000908152600b60205260408120546104a09061028d565b6108dc3383610cb8565b6108f85760405162461bcd60e51b81526004016105d390611891565b61090484848484610fd1565b50505050565b610912610c5e565b8060018160ff161015801561092b575060038160ff1611155b61095c5760405162461bcd60e51b8152602060048201526002602482015261125560f21b60448201526064016105d3565b50600091825260086020526040909120805460ff191660ff909216919091179055565b610987610c5e565b8160018160ff16101580156109a0575060038160ff1611155b6109d15760405162461bcd60e51b8152602060048201526002602482015261125560f21b60448201526064016105d3565b6001600160a01b0384166000908152600b602052604090205415610a205760405162461bcd60e51b81526004016105d3906020808252600490820152635354414560e01b604082015260600190565b6000610a2b60075490565b9050610a3b600780546001019055565b60008181526009602090815260408083208054600160ff199182161790915560088352818420805490911660ff8916179055600a82528083208690556001600160a01b0388168352600b9091529020819055610a978582611004565b5050505050565b6060610aa982610b91565b6000610ac060408051602081019091526000815290565b90506000815111610ae05760405180602001604052806000815250610b0b565b80610aea8461101e565b604051602001610afb9291906118de565b6040516020818303038152906040525b9392505050565b610b1a610c5e565b6001600160a01b038116610b7f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d3565b61077581610eb1565b80546001019055565b6000818152600260205260409020546001600160a01b03166107755760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d3565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c2582610778565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6006546001600160a01b031633146108705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d3565b600080610cc483610778565b9050806001600160a01b0316846001600160a01b03161480610d0b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610d2f5750836001600160a01b0316610d2484610538565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d4a82610778565b6001600160a01b031614610d705760405162461bcd60e51b81526004016105d39061190d565b6001600160a01b038216610dd25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105d3565b610ddf83838360016110b1565b826001600160a01b0316610df282610778565b6001600160a01b031614610e185760405162461bcd60e51b81526004016105d39061190d565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61077581611102565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610f645760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105d3565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610fdc848484610d37565b610fe8848484846111a5565b6109045760405162461bcd60e51b81526004016105d390611952565b6108ac8282604051806020016040528060008152506112a6565b6060600061102b836112d9565b600101905060008167ffffffffffffffff81111561104b5761104b6116d2565b6040519080825280601f01601f191660200182016040528015611075576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461107f57509392505050565b6001600160a01b03841615806110ce57506001600160a01b038316155b6109045760405162461bcd60e51b815260206004820152600560248201526414d09510d560da1b60448201526064016105d3565b600061110d82610778565b905061111d8160008460016110b1565b61112682610778565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b1561129b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111e99033908990889088906004016119a4565b6020604051808303816000875af1925050508015611224575060408051601f3d908101601f19168201909252611221918101906119e1565b60015b611281573d808015611252576040519150601f19603f3d011682016040523d82523d6000602084013e611257565b606091505b5080516000036112795760405162461bcd60e51b81526004016105d390611952565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d2f565b506001949350505050565b6112b083836113b1565b6112bd60008484846111a5565b6106745760405162461bcd60e51b81526004016105d390611952565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106113185772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611344576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061136257662386f26fc10000830492506010015b6305f5e100831061137a576305f5e100830492506008015b612710831061138e57612710830492506004015b606483106113a0576064830492506002015b600a83106104a05760010192915050565b6001600160a01b0382166114075760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105d3565b6000818152600260205260409020546001600160a01b03161561146c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105d3565b61147a6000838360016110b1565b6000818152600260205260409020546001600160a01b0316156114df5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105d3565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461077557600080fd5b60006020828403121561157257600080fd5b8135610b0b8161154a565b60005b83811015611598578181015183820152602001611580565b50506000910152565b600081518084526115b981602086016020860161157d565b601f01601f19169290920160200192915050565b602081526000610b0b60208301846115a1565b6000602082840312156115f257600080fd5b5035919050565b80356001600160a01b038116811461161057600080fd5b919050565b6000806040838503121561162857600080fd5b611631836115f9565b946020939093013593505050565b60008060006060848603121561165457600080fd5b61165d846115f9565b925061166b602085016115f9565b9150604084013590509250925092565b60006020828403121561168d57600080fd5b610b0b826115f9565b600080604083850312156116a957600080fd5b6116b2836115f9565b9150602083013580151581146116c757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156116fe57600080fd5b611707856115f9565b9350611715602086016115f9565b925060408501359150606085013567ffffffffffffffff8082111561173957600080fd5b818701915087601f83011261174d57600080fd5b81358181111561175f5761175f6116d2565b604051601f8201601f19908116603f01168101908382118183101715611787576117876116d2565b816040528281528a60208487010111156117a057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b803560ff8116811461161057600080fd5b600080604083850312156117e857600080fd5b823591506117f8602084016117c4565b90509250929050565b60008060006060848603121561181657600080fd5b61181f846115f9565b925061166b602085016117c4565b6000806040838503121561184057600080fd5b611849836115f9565b91506117f8602084016115f9565b600181811c9082168061186b57607f821691505b60208210810361188b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516118f081846020880161157d565b83519083019061190481836020880161157d565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119d7908301846115a1565b9695505050505050565b6000602082840312156119f357600080fd5b8151610b0b8161154a56fea264697066735822122020c41a66b35513ad7a7ea87403220fb33aee9741a4bf904b412c5a8b7a0b507d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB7CAEC87 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC12290D2 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC12290D2 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB7CAEC87 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xBDCA14CF EQ PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x916B9BEF EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3355594A GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x4814F035 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3355594A EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x34566CDF EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x39F920AB EQ PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x9DF30EC EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x15CD JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1615 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH2 0x271 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x324 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FE JUMP JUMPDEST PUSH2 0x229 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x892 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x8A1 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x8D2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x90A JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x97F JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x400 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E0 JUMP JUMPDEST PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x182D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x44F CALLDATASIZE PUSH1 0x4 PUSH2 0x167B JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x485 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4A0 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4B5 SWAP1 PUSH2 0x1857 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E1 SWAP1 PUSH2 0x1857 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x503 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x511 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x543 DUP3 PUSH2 0xB91 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP3 PUSH2 0x778 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x5F8 JUMPI POP PUSH2 0x5F8 DUP2 CALLER PUSH2 0x413 JUMP JUMPDEST PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x674 DUP4 DUP4 PUSH2 0xBF0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x681 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6A6 CALLER DUP3 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x674 DUP4 DUP4 DUP4 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH2 0x6F2 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x674 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8D2 JUMP JUMPDEST CALLER PUSH2 0x731 DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E4F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x775 DUP2 PUSH2 0xEA8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x866 PUSH2 0xC5E JUMP JUMPDEST PUSH2 0x870 PUSH1 0x0 PUSH2 0xEB1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x87A PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x4B5 SWAP1 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0x8AC CALLER DUP4 DUP4 PUSH2 0xF03 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0x28D JUMP JUMPDEST PUSH2 0x8DC CALLER DUP4 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x904 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFD1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x912 PUSH2 0xC5E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0x92B JUMPI POP PUSH1 0x3 DUP2 PUSH1 0xFF AND GT ISZERO JUMPDEST PUSH2 0x95C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x1255 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x987 PUSH2 0xC5E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 PUSH1 0xFF AND LT ISZERO DUP1 ISZERO PUSH2 0x9A0 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0xFF AND GT ISZERO JUMPDEST PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x1255 PUSH1 0xF2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x53544145 PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2B PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xA3B PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0xFF DUP10 AND OR SWAP1 SSTORE PUSH1 0xA DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xA97 DUP6 DUP3 PUSH2 0x1004 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAA9 DUP3 PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC0 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB0B JUMP JUMPDEST DUP1 PUSH2 0xAEA DUP5 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAFB SWAP3 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB1A PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x775 DUP2 PUSH2 0xEB1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xC25 DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCC4 DUP4 PUSH2 0x778 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xD0B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xD2F JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD24 DUP5 PUSH2 0x538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD4A DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0xDDF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10B1 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDF2 DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x775 DUP2 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFDC DUP5 DUP5 DUP5 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0xFE8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x8AC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x102B DUP4 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104B PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1075 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x107F JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 PUSH2 0x10CE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST PUSH2 0x904 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x14D09510D5 PUSH1 0xDA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110D DUP3 PUSH2 0x778 JUMP JUMPDEST SWAP1 POP PUSH2 0x111D DUP2 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x1126 DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x3 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE DUP8 DUP6 MSTORE PUSH1 0x2 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE MLOAD SWAP3 SWAP4 POP DUP5 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x129B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x11E9 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1224 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1221 SWAP2 DUP2 ADD SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1281 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1252 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1279 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1952 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xD2F JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x12B0 DUP4 DUP4 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x12BD PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1952 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1318 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1344 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1362 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x137A JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x138E JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x13A0 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x4A0 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1407 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x146C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x147A PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x14DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB0B DUP2 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1598 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1580 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x15B9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x157D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB0B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1631 DUP4 PUSH2 0x15F9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165D DUP5 PUSH2 0x15F9 JUMP JUMPDEST SWAP3 POP PUSH2 0x166B PUSH1 0x20 DUP6 ADD PUSH2 0x15F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0B DUP3 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16B2 DUP4 PUSH2 0x15F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x16C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1707 DUP6 PUSH2 0x15F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1715 PUSH1 0x20 DUP7 ADD PUSH2 0x15F9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x174D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x175F JUMPI PUSH2 0x175F PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1787 JUMPI PUSH2 0x1787 PUSH2 0x16D2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x17A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x17F8 PUSH1 0x20 DUP5 ADD PUSH2 0x17C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x181F DUP5 PUSH2 0x15F9 JUMP JUMPDEST SWAP3 POP PUSH2 0x166B PUSH1 0x20 DUP6 ADD PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1849 DUP4 PUSH2 0x15F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x17F8 PUSH1 0x20 DUP5 ADD PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x186B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x188B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x18F0 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x157D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1904 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x157D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x19D7 SWAP1 DUP4 ADD DUP5 PUSH2 0x15A1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB0B DUP2 PUSH2 0x154A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xC4 BYTE PUSH7 0xB35513AD7A7EA8 PUSH21 0x3220FB33AEE9741A4BF904B412C5A8B7A0B507D64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "266:2547:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:1;;;;;;:::i;:::-;;:::i;:::-;;;565:14:14;;558:22;540:41;;528:2;513:18;1570:300:1;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:14;;;1679:51;;1667:2;1652:18;3935:167:1;1533:203:14;3468:406:1;;;;;;:::i;:::-;;:::i;:::-;;2018:86:12;;;;;;:::i;:::-;;:::i;4612:326:1:-;;;;;;:::i;:::-;;:::i;2455:109:12:-;;;;;;:::i;:::-;2512:7;2538:19;;;:15;:19;;;;;;;2455:109;;;;2657:25:14;;;2645:2;2630:18;2455:109:12;2511:177:14;2124:99:12;;;;;;:::i;:::-;2177:5;2201:15;;;:11;:15;;;;;;;;;2124:99;;;;2865:4:14;2853:17;;;2835:36;;2823:2;2808:18;2124:99:12;2693:184:14;2570:120:12;;;;;;:::i;:::-;;:::i;5004:179:1:-;;;;;;:::i;:::-;;:::i;1264:160:12:-;;;;;;:::i;:::-;;:::i;2696:115::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2782:22:12;2756:7;2782:22;;;:15;:22;;;;;;;2696:115;2190:219:1;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;2355:94:12:-;;;;;;:::i;:::-;2406:4;2429:13;;;:9;:13;;;;;;;;;2355:94;1201:85:0;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;;1925:87:12;;;;;;:::i;:::-;;:::i;2633:102:1:-;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;2229:120:12:-;;;;;;:::i;:::-;;:::i;5249:314:1:-;;;;;;:::i;:::-;;:::i;1779:140:12:-;;;;;;:::i;:::-;;:::i;802:456::-;;;;;;:::i;:::-;;:::i;2801:276:1:-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:1;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;2081:198:0;;;;;;:::i;:::-;;:::i;1570:300:1:-;1672:4;-1:-1:-1;;;;;;1707:40:1;;-1:-1:-1;;;1707:40:1;;:104;;-1:-1:-1;;;;;;;1763:48:1;;-1:-1:-1;;;1763:48:1;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1827:36:1;1688:175;1570:300;-1:-1:-1;;1570:300:1:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:1;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:1;:2;-1:-1:-1;;;;;3605:11:1;;3597:57;;;;-1:-1:-1;;;3597:57:1;;6479:2:14;3597:57:1;;;6461:21:14;6518:2;6498:18;;;6491:30;6557:34;6537:18;;;6530:62;-1:-1:-1;;;6608:18:14;;;6601:31;6649:19;;3597:57:1;;;;;;;;;719:10:6;-1:-1:-1;;;;;3686:21:1;;;;:62;;-1:-1:-1;3711:37:1;3728:5;719:10:6;4388:162:1;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:1;;6881:2:14;3665:170:1;;;6863:21:14;6920:2;6900:18;;;6893:30;6959:34;6939:18;;;6932:62;7030:31;7010:18;;;7003:59;7079:19;;3665:170:1;6679:425:14;3665:170:1;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;2018:86:12:-;1094:13:0;:11;:13::i;:::-;2077::12::1;::::0;;;:9:::1;:13;::::0;;;;:20;;-1:-1:-1;;2077:20:12::1;2093:4;2077:20;::::0;;2018:86::o;4612:326:1:-;4801:41;719:10:6;4834:7:1;4801:18;:41::i;:::-;4793:99;;;;-1:-1:-1;;;4793:99:1;;;;;;;:::i;:::-;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;2570:120:12:-;2628:4;2651:9;:32;2661:21;2676:5;-1:-1:-1;;;;;2782:22:12;2756:7;2782:22;;;:15;:22;;;;;;;2696:115;2661:21;2651:32;;;;;;;;;;;-1:-1:-1;2651:32:12;;;;;2570:120;-1:-1:-1;;2570:120:12:o;5004:179:1:-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;1264:160:12:-;1355:10;1335:16;1343:7;1335;:16::i;:::-;-1:-1:-1;;;;;1335:30:12;;1314:79;;;;-1:-1:-1;;;1314:79:12;;7725:2:14;1314:79:12;;;7707:21:14;7764:1;7744:18;;;7737:29;-1:-1:-1;;;7782:18:14;;;7775:32;7824:18;;1314:79:12;7523:325:14;1314:79:12;1403:14;1409:7;1403:5;:14::i;:::-;1264:160;:::o;2190:219:1:-;2262:7;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:1;;2324:56;;;;-1:-1:-1;;;2324:56:1;;8055:2:14;2324:56:1;;;8037:21:14;8094:2;8074:18;;;8067:30;-1:-1:-1;;;8113:18:14;;;8106:54;8177:18;;2324:56:1;7853:348:14;1929:204:1;2001:7;-1:-1:-1;;;;;2028:19:1;;2020:73;;;;-1:-1:-1;;;2020:73:1;;8408:2:14;2020:73:1;;;8390:21:14;8447:2;8427:18;;;8420:30;8486:34;8466:18;;;8459:62;-1:-1:-1;;;8537:18:14;;;8530:39;8586:19;;2020:73:1;8206:405:14;2020:73:1;-1:-1:-1;;;;;;2110:16:1;;;;;:9;:16;;;;;;;1929:204::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1925:87:12:-;1094:13:0;:11;:13::i;:::-;2000:5:12::1;1984:13:::0;;;:9:::1;:13;::::0;;;;:21;;-1:-1:-1;;1984:21:12::1;::::0;;1925:87::o;2633:102:1:-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:6;4296:8:1;4306;4263:18;:52::i;:::-;4169:153;;:::o;2229:120:12:-;-1:-1:-1;;;;;2782:22:12;;2285:5;2782:22;;;:15;:22;;;;;;2309:33;;2320:21;2696:115;5249:314:1;5417:41;719:10:6;5450:7:1;5417:18;:41::i;:::-;5409:99;;;;-1:-1:-1;;;5409:99:1;;;;;;;:::i;:::-;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;1779:140:12:-;1094:13:0;:11;:13::i;:::-;1874:4:12::1;661:1;653:4;:9;;;;:22;;;;;674:1;666:4;:9;;;;653:22;645:37;;;::::0;-1:-1:-1;;;645:37:12;;8818:2:14;645:37:12::1;::::0;::::1;8800:21:14::0;8857:1;8837:18;;;8830:29;-1:-1:-1;;;8875:18:14;;;8868:32;8917:18;;645:37:12::1;8616:325:14::0;645:37:12::1;-1:-1:-1::0;1890:15:12::2;::::0;;;:11:::2;:15;::::0;;;;;:22;;-1:-1:-1;;1890:22:12::2;;::::0;;::::2;::::0;;;::::2;::::0;;1779:140::o;802:456::-;1094:13:0;:11;:13::i;:::-;918:4:12::1;661:1;653:4;:9;;;;:22;;;;;674:1;666:4;:9;;;;653:22;645:37;;;::::0;-1:-1:-1;;;645:37:12;;8818:2:14;645:37:12::1;::::0;::::1;8800:21:14::0;8857:1;8837:18;;;8830:29;-1:-1:-1;;;8875:18:14;;;8868:32;8917:18;;645:37:12::1;8616:325:14::0;645:37:12::1;-1:-1:-1::0;;;;;942:19:12;::::2;;::::0;;;:15:::2;:19;::::0;;;;;:24;934:41:::2;;;;-1:-1:-1::0;;;934:41:12::2;;;;;;9148:2:14::0;9130:21;;;9187:1;9167:18;;;9160:29;-1:-1:-1;;;9220:2:14;9205:18;;9198:34;9264:2;9249:18;;8946:327;934:41:12::2;985:15;1003:25;:15;918:14:7::0;;827:112;1003:25:12::2;985:43;;1038:27;:15;1032:19:7::0;;1050:1;1032:19;;;945:123;1038:27:12::2;1075:18;::::0;;;:9:::2;:18;::::0;;;;;;;:25;;1096:4:::2;-1:-1:-1::0;;1075:25:12;;::::2;;::::0;;;1110:11:::2;:20:::0;;;;;:27;;;;::::2;1075:25;1110:27:::0;::::2;;::::0;;1147:15:::2;:24:::0;;;;;:33;;;-1:-1:-1;;;;;1190:19:12;::::2;::::0;;:15:::2;:19:::0;;;;;:29;;;1229:22:::2;1190:19:::0;1075:18;1229:9:::2;:22::i;:::-;924:334;1117:1:0::1;802:456:12::0;;;:::o;2801:276:1:-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:1;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:1:o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;9981:2:14;2161:73:0::1;::::0;::::1;9963:21:14::0;10020:2;10000:18;;;9993:30;10059:34;10039:18;;;10032:62;-1:-1:-1;;;10110:18:14;;;10103:36;10156:19;;2161:73:0::1;9779:402:14::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;945:123:7:-:0;1032:19;;1050:1;1032:19;;;945:123::o;13466:133:1:-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:1;13539:53;;;;-1:-1:-1;;;13539:53:1;;8055:2:14;13539:53:1;;;8037:21:14;8094:2;8074:18;;;8067:30;-1:-1:-1;;;8113:18:14;;;8106:54;8177:18;;13539:53:1;7853:348:14;12768:171:1;12842:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12842:29:1;-1:-1:-1;;;;;12842:29:1;;;;;;;;:24;;12895:23;12842:24;12895:14;:23::i;:::-;-1:-1:-1;;;;;12886:46:1;;;;;;;;;;;12768:171;;:::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;10388:2:14;1414:68:0;;;10370:21:14;;;10407:18;;;10400:30;10466:34;10446:18;;;10439:62;10518:18;;1414:68:0;10186:356:14;7540:261:1;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;-1:-1:-1;;;;;7706:16:1;:7;-1:-1:-1;;;;;7706:16:1;;:52;;;-1:-1:-1;;;;;;4508:25:1;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7726:32;7706:87;;;;7786:7;-1:-1:-1;;;;;7762:31:1;:20;7774:7;7762:11;:20::i;:::-;-1:-1:-1;;;;;7762:31:1;;7706:87;7698:96;7540:261;-1:-1:-1;;;;7540:261:1:o;11423:1233::-;11577:4;-1:-1:-1;;;;;11550:31:1;:23;11565:7;11550:14;:23::i;:::-;-1:-1:-1;;;;;11550:31:1;;11542:81;;;;-1:-1:-1;;;11542:81:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;11641:16:1;;11633:65;;;;-1:-1:-1;;;11633:65:1;;11155:2:14;11633:65:1;;;11137:21:14;11194:2;11174:18;;;11167:30;11233:34;11213:18;;;11206:62;-1:-1:-1;;;11284:18:14;;;11277:34;11328:19;;11633:65:1;10953:400:14;11633:65:1;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;-1:-1:-1;;;;;11851:31:1;:23;11866:7;11851:14;:23::i;:::-;-1:-1:-1;;;;;11851:31:1;;11843:81;;;;-1:-1:-1;;;11843:81:1;;;;;;;:::i;:::-;11993:24;;;;:15;:24;;;;;;;;11986:31;;-1:-1:-1;;;;;;11986:31:1;;;;;;-1:-1:-1;;;;;12461:15:1;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12461:20:1;;;12495:13;;;;;;;;;:18;;11986:31;12495:18;;;12533:16;;;:7;:16;;;;;;:21;;;;;;;;;;12570:27;;12009:7;;12570:27;;;3538:336;3468:406;;:::o;1678:95:12:-;1746:20;1758:7;1746:11;:20::i;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;13075:307:1:-;13225:8;-1:-1:-1;;;;;13216:17:1;:5;-1:-1:-1;;;;;13216:17:1;;13208:55;;;;-1:-1:-1;;;13208:55:1;;11560:2:14;13208:55:1;;;11542:21:14;11599:2;11579:18;;;11572:30;11638:27;11618:18;;;11611:55;11683:18;;13208:55:1;11358:349:14;13208:55:1;-1:-1:-1;;;;;13273:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13273:46:1;;;;;;;;;;13334:41;;540::14;;;13334::1;;513:18:14;13334:41:1;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;-1:-1:-1;;;6612:110:1;;;;;;;:::i;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;415:696:8:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:8;-1:-1:-1;572:41:8;-1:-1:-1;733:28:8;;;749:2;733:28;788:280;-1:-1:-1;;819:5:8;-1:-1:-1;;;953:2:8;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:8;788:280;1032:21;-1:-1:-1;1088:6:8;415:696;-1:-1:-1;;;415:696:8:o;1430:242:12:-;-1:-1:-1;;;;;1596:18:12;;;;:38;;-1:-1:-1;;;;;;1618:16:12;;;1596:38;1575:90;;;;-1:-1:-1;;;1575:90:12;;12465:2:14;1575:90:12;;;12447:21:14;12504:1;12484:18;;;12477:29;-1:-1:-1;;;12522:18:14;;;12515:35;12567:18;;1575:90:12;12263:328:14;10337:762:1;10396:13;10412:23;10427:7;10412:14;:23::i;:::-;10396:39;;10446:51;10467:5;10482:1;10486:7;10495:1;10446:20;:51::i;:::-;10607:23;10622:7;10607:14;:23::i;:::-;10675:24;;;;:15;:24;;;;;;;;10668:31;;-1:-1:-1;;;;;;10668:31:1;;;;;;-1:-1:-1;;;;;10915:16:1;;;;;:9;:16;;;;;:21;;-1:-1:-1;;10915:21:1;;;10963:16;;;:7;:16;;;;;;10956:23;;;;;;;10995:36;10599:31;;-1:-1:-1;10691:7:1;;10995:36;;10675:24;;10995:36;4169:153;;:::o;14151:831::-;14300:4;-1:-1:-1;;;;;14320:13:1;;1465:19:5;:23;14316:660:1;;14355:71;;-1:-1:-1;;;14355:71:1;;-1:-1:-1;;;;;14355:36:1;;;;;:71;;719:10:6;;14406:4:1;;14412:7;;14421:4;;14355:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14355:71:1;;;;;;;;-1:-1:-1;;14355:71:1;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:6;:13;14610:1;14593:18;14589:321;;14635:60;;-1:-1:-1;;;14635:60:1;;;;;;;:::i;14589:321::-;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;-1:-1:-1;;;;;;14476:51:1;-1:-1:-1;;;14476:51:1;;-1:-1:-1;14469:58:1;;14316:660;-1:-1:-1;14961:4:1;14151:831;;;;;;:::o;8460:309::-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;-1:-1:-1;;;8612:150:1;;;;;;;:::i;9889:890:11:-;9942:7;;-1:-1:-1;;;10017:15:11;;10013:99;;-1:-1:-1;;;10052:15:11;;;-1:-1:-1;10095:2:11;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:11;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:11;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:11;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:11;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:11;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:11:o;9091:920:1:-;-1:-1:-1;;;;;9170:16:1;;9162:61;;;;-1:-1:-1;;;9162:61:1;;13546:2:14;9162:61:1;;;13528:21:14;;;13565:18;;;13558:30;13624:34;13604:18;;;13597:62;13676:18;;9162:61:1;13344:356:14;9162:61:1;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:1;7344:31;9233:58;;;;-1:-1:-1;;;9233:58:1;;13907:2:14;9233:58:1;;;13889:21:14;13946:2;13926:18;;;13919:30;13985;13965:18;;;13958:58;14033:18;;9233:58:1;13705:352:14;9233:58:1;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:1;7344:31;9437:58;;;;-1:-1:-1;;;9437:58:1;;13907:2:14;9437:58:1;;;13889:21:14;13946:2;13926:18;;;13919:30;13985;13965:18;;;13958:58;14033:18;;9437:58:1;13705:352:14;9437:58:1;-1:-1:-1;;;;;9837:13:1;;;;;;:9;:13;;;;;;;;:18;;9854:1;9837:18;;;9876:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9876:21:1;;;;;9913:33;9884:7;;9837:13;;9913:33;;9837:13;;9913:33;4169:153;;:::o;14:131:14:-;-1:-1:-1;;;;;;88:32:14;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:14;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:14;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:14:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:14;;1348:180;-1:-1:-1;1348:180:14:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:14;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:14:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2882:186::-;2941:6;2994:2;2982:9;2973:7;2969:23;2965:32;2962:52;;;3010:1;3007;3000:12;2962:52;3033:29;3052:9;3033:29;:::i;3255:347::-;3320:6;3328;3381:2;3369:9;3360:7;3356:23;3352:32;3349:52;;;3397:1;3394;3387:12;3349:52;3420:29;3439:9;3420:29;:::i;:::-;3410:39;;3499:2;3488:9;3484:18;3471:32;3546:5;3539:13;3532:21;3525:5;3522:32;3512:60;;3568:1;3565;3558:12;3512:60;3591:5;3581:15;;;3255:347;;;;;:::o;3607:127::-;3668:10;3663:3;3659:20;3656:1;3649:31;3699:4;3696:1;3689:15;3723:4;3720:1;3713:15;3739:1138;3834:6;3842;3850;3858;3911:3;3899:9;3890:7;3886:23;3882:33;3879:53;;;3928:1;3925;3918:12;3879:53;3951:29;3970:9;3951:29;:::i;:::-;3941:39;;3999:38;4033:2;4022:9;4018:18;3999:38;:::i;:::-;3989:48;;4084:2;4073:9;4069:18;4056:32;4046:42;;4139:2;4128:9;4124:18;4111:32;4162:18;4203:2;4195:6;4192:14;4189:34;;;4219:1;4216;4209:12;4189:34;4257:6;4246:9;4242:22;4232:32;;4302:7;4295:4;4291:2;4287:13;4283:27;4273:55;;4324:1;4321;4314:12;4273:55;4360:2;4347:16;4382:2;4378;4375:10;4372:36;;;4388:18;;:::i;:::-;4463:2;4457:9;4431:2;4517:13;;-1:-1:-1;;4513:22:14;;;4537:2;4509:31;4505:40;4493:53;;;4561:18;;;4581:22;;;4558:46;4555:72;;;4607:18;;:::i;:::-;4647:10;4643:2;4636:22;4682:2;4674:6;4667:18;4722:7;4717:2;4712;4708;4704:11;4700:20;4697:33;4694:53;;;4743:1;4740;4733:12;4694:53;4799:2;4794;4790;4786:11;4781:2;4773:6;4769:15;4756:46;4844:1;4839:2;4834;4826:6;4822:15;4818:24;4811:35;4865:6;4855:16;;;;;;;3739:1138;;;;;;;:::o;4882:156::-;4948:20;;5008:4;4997:16;;4987:27;;4977:55;;5028:1;5025;5018:12;5043:250;5109:6;5117;5170:2;5158:9;5149:7;5145:23;5141:32;5138:52;;;5186:1;5183;5176:12;5138:52;5222:9;5209:23;5199:33;;5251:36;5283:2;5272:9;5268:18;5251:36;:::i;:::-;5241:46;;5043:250;;;;;:::o;5298:324::-;5373:6;5381;5389;5442:2;5430:9;5421:7;5417:23;5413:32;5410:52;;;5458:1;5455;5448:12;5410:52;5481:29;5500:9;5481:29;:::i;:::-;5471:39;;5529:36;5561:2;5550:9;5546:18;5529:36;:::i;5627:260::-;5695:6;5703;5756:2;5744:9;5735:7;5731:23;5727:32;5724:52;;;5772:1;5769;5762:12;5724:52;5795:29;5814:9;5795:29;:::i;:::-;5785:39;;5843:38;5877:2;5866:9;5862:18;5843:38;:::i;5892:380::-;5971:1;5967:12;;;;6014;;;6035:61;;6089:4;6081:6;6077:17;6067:27;;6035:61;6142:2;6134:6;6131:14;6111:18;6108:38;6105:161;;6188:10;6183:3;6179:20;6176:1;6169:31;6223:4;6220:1;6213:15;6251:4;6248:1;6241:15;6105:161;;5892:380;;;:::o;7109:409::-;7311:2;7293:21;;;7350:2;7330:18;;;7323:30;7389:34;7384:2;7369:18;;7362:62;-1:-1:-1;;;7455:2:14;7440:18;;7433:43;7508:3;7493:19;;7109:409::o;9278:496::-;9457:3;9495:6;9489:13;9511:66;9570:6;9565:3;9558:4;9550:6;9546:17;9511:66;:::i;:::-;9640:13;;9599:16;;;;9662:70;9640:13;9599:16;9709:4;9697:17;;9662:70;:::i;:::-;9748:20;;9278:496;-1:-1:-1;;;;9278:496:14:o;10547:401::-;10749:2;10731:21;;;10788:2;10768:18;;;10761:30;10827:34;10822:2;10807:18;;10800:62;-1:-1:-1;;;10893:2:14;10878:18;;10871:35;10938:3;10923:19;;10547:401::o;11712:414::-;11914:2;11896:21;;;11953:2;11933:18;;;11926:30;11992:34;11987:2;11972:18;;11965:62;-1:-1:-1;;;12058:2:14;12043:18;;12036:48;12116:3;12101:19;;11712:414::o;12596:489::-;-1:-1:-1;;;;;12865:15:14;;;12847:34;;12917:15;;12912:2;12897:18;;12890:43;12964:2;12949:18;;12942:34;;;13012:3;13007:2;12992:18;;12985:31;;;12790:4;;13033:46;;13059:19;;13051:6;13033:46;:::i;:::-;13025:54;12596:489;-1:-1:-1;;;;;;12596:489:14:o;13090:249::-;13159:6;13212:2;13200:9;13191:7;13187:23;13183:32;13180:52;;;13228:1;13225;13218:12;13180:52;13260:9;13254:16;13279:30;13303:5;13279:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1341600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accessTier(address)": "4818",
								"accessTier(uint256)": "2521",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2635",
								"burn(uint256)": "infinite",
								"deactivate(uint256)": "26736",
								"getApproved(uint256)": "4792",
								"hasActiveSBT(address)": "4852",
								"hashedIdentity(uint256)": "2484",
								"isActive(uint256)": "2529",
								"isApprovedForAll(address,address)": "infinite",
								"modifyLevel(uint256,uint8)": "26957",
								"name()": "infinite",
								"owner()": "2376",
								"ownerOf(uint256)": "2649",
								"ownerToTokenId(address)": "2626",
								"reactivate(uint256)": "26787",
								"renounceOwnership()": "infinite",
								"safeMint(address,uint8,bytes32)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26794",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28446"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 266,
									"end": 2813,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 266,
									"end": 2813,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 266,
									"end": 2813,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 706,
									"end": 796,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 706,
									"end": 796,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 706,
									"end": 796,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 706,
									"end": 796,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 706,
									"end": 796,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 706,
									"end": 796,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 706,
									"end": 796,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 706,
									"end": 796,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 706,
									"end": 796,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 706,
									"end": 796,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 706,
									"end": 796,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29B7BAB62137BAB7322A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "91"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14D095"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 762,
									"end": 789,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 762,
									"end": 777,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 762,
									"end": 787,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 762,
									"end": 787,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 762,
									"end": 787,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 762,
									"end": 787,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18446744073709551760"
								},
								{
									"begin": 762,
									"end": 787,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 762,
									"end": 789,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 762,
									"end": 789,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 762,
									"end": 789,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 762,
									"end": 789,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 762,
									"end": 789,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 266,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 266,
									"end": 2813,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 945,
									"end": 1068,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 945,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 945,
									"end": 1068,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 14,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 266,
									"end": 2813,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 2813,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 266,
									"end": 2813,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 2813,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 2813,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 266,
									"end": 2813,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 2813,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020c41a66b35513ad7a7ea87403220fb33aee9741a4bf904b412c5a8b7a0b507d64736f6c63430008110033",
									".code": [
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "B7CAEC87"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "C12290D2"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "C12290D2"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "C87B56DD"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "B7CAEC87"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "BDCA14CF"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "916B9BEF"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "82AFD23B"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "3355594A"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "42842E0E"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "42966C68"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "4814F035"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "6352211E"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "3355594A"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "34566CDF"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "39F920AB"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "81812FC"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "9DF30EC"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 266,
											"end": 2813,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2104,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2018,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 2018,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 2018,
											"end": 2104,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2104,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2018,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 2018,
											"end": 2104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2104,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 2018,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2018,
											"end": 2104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 2455,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2519,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2538,
											"end": 2557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2538,
											"end": 2557,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2538,
											"end": 2553,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 2538,
											"end": 2557,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2557,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2538,
											"end": 2557,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2538,
											"end": 2557,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2538,
											"end": 2557,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2538,
											"end": 2557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2657,
											"end": 2682,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2657,
											"end": 2682,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2657,
											"end": 2682,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2645,
											"end": 2647,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2648,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2455,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2688,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 2124,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2177,
											"end": 2182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2212,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 2869,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 2853,
											"end": 2870,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2853,
											"end": 2870,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2853,
											"end": 2870,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2823,
											"end": 2825,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2808,
											"end": 2826,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2124,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2877,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2570,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 2570,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 1264,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1264,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2696,
											"end": 2811,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 2696,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2696,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2696,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2696,
											"end": 2811,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2696,
											"end": 2811,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2696,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2696,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2696,
											"end": 2811,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2696,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2756,
											"end": 2763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2696,
											"end": 2811,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2449,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 2355,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 2355,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2355,
											"end": 2449,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2449,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2355,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 2355,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2449,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2355,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2429,
											"end": 2442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2449,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2012,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1925,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1925,
											"end": 2012,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 2012,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 1925,
											"end": 2012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 2012,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1925,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1925,
											"end": 2012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2349,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2229,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2229,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 2229,
											"end": 2349,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2349,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2229,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2229,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2349,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 2229,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 2229,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1919,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 1779,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 1779,
											"end": 1919,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1919,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1779,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1919,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 1779,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1779,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 802,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 802,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4030,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6481,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6461,
											"end": 6482,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6518,
											"end": 6520,
											"name": "PUSH",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6491,
											"end": 6521,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6557,
											"end": 6591,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 6537,
											"end": 6555,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6537,
											"end": 6555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6537,
											"end": 6555,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6592,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6601,
											"end": 6632,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6649,
											"end": 6668,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 6649,
											"end": 6668,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6863,
											"end": 6884,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6920,
											"end": 6922,
											"name": "PUSH",
											"source": 14,
											"value": "3D"
										},
										{
											"begin": 6900,
											"end": 6918,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6900,
											"end": 6918,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6900,
											"end": 6918,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6893,
											"end": 6923,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6959,
											"end": 6993,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 6939,
											"end": 6957,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6939,
											"end": 6957,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6939,
											"end": 6957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6932,
											"end": 6994,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7030,
											"end": 7061,
											"name": "PUSH",
											"source": 14,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 7010,
											"end": 7028,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7010,
											"end": 7028,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7010,
											"end": 7028,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7003,
											"end": 7062,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7079,
											"end": 7098,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 7079,
											"end": 7098,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6679,
											"end": 7104,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3846,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2104,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2018,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2090,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2090,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2090,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2077,
											"end": 2090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2077,
											"end": 2090,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2090,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2090,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2090,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2097,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2097,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2097,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2093,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2077,
											"end": 2097,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2097,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2097,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4801,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4793,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4903,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2660,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 2676,
											"end": 2681,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2756,
											"end": 2763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2696,
											"end": 2811,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2661,
											"end": 2682,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 2661,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2690,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5154,
											"end": 5158,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5162,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5164,
											"end": 5171,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5137,
											"end": 5176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 1365,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1343,
											"end": 1350,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 1335,
											"end": 1351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1335,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1314,
											"end": 1393,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1314,
											"end": 1393,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 1393,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1393,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7725,
											"end": 7727,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 1393,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1393,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7707,
											"end": 7728,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7764,
											"end": 7765,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7744,
											"end": 7762,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7744,
											"end": 7762,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7744,
											"end": 7762,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7737,
											"end": 7766,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E4F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7782,
											"end": 7800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7775,
											"end": 7807,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1314,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 7523,
											"end": 7848,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1314,
											"end": 1393,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1314,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 1409,
											"end": 1416,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1403,
											"end": 1417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1417,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 1403,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8057,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8037,
											"end": 8058,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8094,
											"end": 8096,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 8074,
											"end": 8092,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8074,
											"end": 8092,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8074,
											"end": 8092,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8067,
											"end": 8097,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8106,
											"end": 8160,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8177,
											"end": 8195,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8177,
											"end": 8195,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 7853,
											"end": 8201,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8408,
											"end": 8410,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8390,
											"end": 8411,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8447,
											"end": 8449,
											"name": "PUSH",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 8427,
											"end": 8445,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8427,
											"end": 8445,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8427,
											"end": 8445,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8420,
											"end": 8450,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8486,
											"end": 8520,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 8466,
											"end": 8484,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8466,
											"end": 8484,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8466,
											"end": 8484,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8459,
											"end": 8521,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8586,
											"end": 8605,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 8586,
											"end": 8605,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 8206,
											"end": 8611,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1925,
											"end": 2012,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1925,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1984,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1997,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 2005,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 2005,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1984,
											"end": 2005,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 2005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 2005,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 2012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4263,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2349,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 2229,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2285,
											"end": 2290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 2309,
											"end": 2342,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 2696,
											"end": 2811,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5417,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5409,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5549,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5555,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 5518,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1919,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1779,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1874,
											"end": 1878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 661,
											"end": 662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 653,
											"end": 657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 653,
											"end": 662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 653,
											"end": 662,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 653,
											"end": 662,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 653,
											"end": 662,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 666,
											"end": 670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 666,
											"end": 675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 666,
											"end": 675,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 666,
											"end": 675,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 666,
											"end": 675,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 682,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 645,
											"end": 682,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 645,
											"end": 682,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8818,
											"end": 8820,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 645,
											"end": 682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8800,
											"end": 8821,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8857,
											"end": 8858,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8830,
											"end": 8859,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1255"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8875,
											"end": 8893,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8875,
											"end": 8893,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8875,
											"end": 8893,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8868,
											"end": 8900,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8917,
											"end": 8935,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8917,
											"end": 8935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 8616,
											"end": 8941,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1890,
											"end": 1905,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1905,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1905,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1905,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1901,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1890,
											"end": 1905,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1890,
											"end": 1905,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1905,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1890,
											"end": 1905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1905,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1905,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1912,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1912,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1890,
											"end": 1912,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1912,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1890,
											"end": 1912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1912,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1912,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1912,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1912,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1912,
											"modifierDepth": 2,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1912,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 922,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 661,
											"end": 662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 653,
											"end": 657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 653,
											"end": 662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 653,
											"end": 662,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 653,
											"end": 662,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 653,
											"end": 662,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 666,
											"end": 670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 666,
											"end": 675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 666,
											"end": 675,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 666,
											"end": 675,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 666,
											"end": 675,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 653,
											"end": 675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 682,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 645,
											"end": 682,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 645,
											"end": 682,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8818,
											"end": 8820,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 645,
											"end": 682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8800,
											"end": 8821,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8857,
											"end": 8858,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8830,
											"end": 8859,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1255"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8875,
											"end": 8893,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8875,
											"end": 8893,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8875,
											"end": 8893,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8868,
											"end": 8900,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8917,
											"end": 8935,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8917,
											"end": 8935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 8616,
											"end": 8941,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 645,
											"end": 682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 942,
											"end": 961,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 942,
											"end": 961,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 942,
											"end": 961,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 942,
											"end": 961,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 942,
											"end": 957,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 942,
											"end": 961,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 942,
											"end": 961,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 942,
											"end": 961,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 942,
											"end": 961,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 942,
											"end": 966,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 934,
											"end": 975,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 934,
											"end": 975,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 934,
											"end": 975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 975,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 934,
											"end": 975,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 934,
											"end": 975,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 934,
											"end": 975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 934,
											"end": 975,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 934,
											"end": 975,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 934,
											"end": 975,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9148,
											"end": 9150,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9130,
											"end": 9151,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9130,
											"end": 9151,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9130,
											"end": 9151,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9187,
											"end": 9188,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9160,
											"end": 9189,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53544145"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9220,
											"end": 9222,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9205,
											"end": 9223,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9205,
											"end": 9223,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9198,
											"end": 9232,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9264,
											"end": 9266,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9249,
											"end": 9267,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9249,
											"end": 9267,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8946,
											"end": 9273,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 934,
											"end": 975,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 934,
											"end": 975,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 985,
											"end": 1000,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1028,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 1003,
											"end": 1018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1028,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 1003,
											"end": 1028,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 985,
											"end": 1028,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 985,
											"end": 1028,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1038,
											"end": 1065,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 1038,
											"end": 1053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1065,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 1038,
											"end": 1065,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1093,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1084,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1075,
											"end": 1093,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1100,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1100,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1096,
											"end": 1100,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1100,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1100,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1100,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1100,
											"modifierDepth": 2,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1100,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1100,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1100,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1121,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1110,
											"end": 1130,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1130,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1130,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1130,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1130,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1137,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1137,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1137,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1137,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1100,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1110,
											"end": 1137,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1137,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1137,
											"modifierDepth": 2,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1137,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1162,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1180,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1180,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1180,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1190,
											"end": 1209,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1209,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1209,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1209,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1205,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 1190,
											"end": 1209,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1209,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1209,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1209,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1209,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1229,
											"end": 1251,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1190,
											"end": 1209,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1229,
											"end": 1238,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 1229,
											"end": 1251,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1229,
											"end": 1251,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1229,
											"end": 1251,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1258,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 802,
											"end": 1258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 802,
											"end": 1258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 9983,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9984,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10020,
											"end": 10022,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 10000,
											"end": 10018,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10000,
											"end": 10018,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10000,
											"end": 10018,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9993,
											"end": 10023,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10059,
											"end": 10093,
											"name": "PUSH",
											"source": 14,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10032,
											"end": 10094,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10103,
											"end": 10139,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10156,
											"end": 10175,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 10156,
											"end": 10175,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 9779,
											"end": 10181,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8057,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8037,
											"end": 8058,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8094,
											"end": 8096,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 8074,
											"end": 8092,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8074,
											"end": 8092,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8074,
											"end": 8092,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8067,
											"end": 8097,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8106,
											"end": 8160,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8177,
											"end": 8195,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8177,
											"end": 8195,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 7853,
											"end": 8201,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12857,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 12895,
											"end": 12918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10388,
											"end": 10390,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10370,
											"end": 10391,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10370,
											"end": 10391,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10370,
											"end": 10391,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10425,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10407,
											"end": 10425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10425,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10400,
											"end": 10430,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10500,
											"name": "PUSH",
											"source": 14,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10439,
											"end": 10501,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10518,
											"end": 10536,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10518,
											"end": 10536,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 10186,
											"end": 10542,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7662,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7680,
											"end": 7687,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7665,
											"end": 7688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7713,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7786,
											"end": 7793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 7774,
											"end": 7781,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7762,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7762,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7794,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7540,
											"end": 7801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11577,
											"end": 11581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 11565,
											"end": 11572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 11550,
											"end": 11573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 11542,
											"end": 11623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11157,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11158,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11194,
											"end": 11196,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11174,
											"end": 11192,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11174,
											"end": 11192,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11174,
											"end": 11192,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11167,
											"end": 11197,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11233,
											"end": 11267,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 11213,
											"end": 11231,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 11213,
											"end": 11231,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11213,
											"end": 11231,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11206,
											"end": 11268,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11284,
											"end": 11302,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 11284,
											"end": 11302,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11284,
											"end": 11302,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11311,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11347,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 11328,
											"end": 11347,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 10953,
											"end": 11353,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 11730,
											"end": 11734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11749,
											"end": 11750,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11709,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 11709,
											"end": 11751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 11882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 11866,
											"end": 11873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 11851,
											"end": 11874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 11843,
											"end": 11924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12008,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12470,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12540,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12009,
											"end": 12016,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12009,
											"end": 12016,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1773,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1678,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1746,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1746,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 1746,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13216,
											"end": 13221,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11560,
											"end": 11562,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11542,
											"end": 11563,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11599,
											"end": 11601,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 11579,
											"end": 11597,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11579,
											"end": 11597,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11579,
											"end": 11597,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11572,
											"end": 11602,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11638,
											"end": 11665,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 11618,
											"end": 11636,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 11618,
											"end": 11636,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11618,
											"end": 11636,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11611,
											"end": 11666,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 11683,
											"end": 11701,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 11358,
											"end": 11707,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13291,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 6584,
											"end": 6588,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6592,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6601,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6574,
											"end": 6602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 6643,
											"end": 6647,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6662,
											"end": 6666,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 6620,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 6612,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8131,
											"end": 8239,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8131,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 8216,
											"end": 8218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 8206,
											"end": 8232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 471,
											"end": 484,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 537,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 537,
											"end": 554,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 520,
											"end": 558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 520,
											"end": 558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 595,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 572,
											"end": 613,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 733,
											"end": 761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 733,
											"end": 761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 819,
											"end": 824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 942,
											"end": 956,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 942,
											"end": 956,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 967,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 924,
											"end": 968,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 415,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1430,
											"end": 1672,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 1430,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 1596,
											"end": 1634,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1618,
											"end": 1634,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1634,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1634,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1634,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 1596,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 1575,
											"end": 1665,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1665,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1665,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1575,
											"end": 1665,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1665,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12465,
											"end": 12467,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1575,
											"end": 1665,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1575,
											"end": 1665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1665,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12447,
											"end": 12468,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12504,
											"end": 12505,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 12484,
											"end": 12502,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12484,
											"end": 12502,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12484,
											"end": 12502,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12477,
											"end": 12506,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D09510D5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12522,
											"end": 12540,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 12522,
											"end": 12540,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12522,
											"end": 12540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12515,
											"end": 12550,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12567,
											"end": 12585,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12567,
											"end": 12585,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 12263,
											"end": 12591,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10337,
											"end": 11099,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10337,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10412,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 10427,
											"end": 10434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10412,
											"end": 10426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10412,
											"end": 10435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10412,
											"end": 10435,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 10412,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10446,
											"end": 10497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 10467,
											"end": 10472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10482,
											"end": 10483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10486,
											"end": 10493,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10496,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10446,
											"end": 10466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 10446,
											"end": 10497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10446,
											"end": 10497,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 10446,
											"end": 10497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10607,
											"end": 10630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 10622,
											"end": 10629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10607,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10607,
											"end": 10630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10607,
											"end": 10630,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 10607,
											"end": 10630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10690,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10699,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10668,
											"end": 10699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10699,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10699,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10915,
											"end": 10931,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10931,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10924,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10915,
											"end": 10931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10931,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10931,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10936,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10915,
											"end": 10936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 10936,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10979,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10979,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10963,
											"end": 10979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10979,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10979,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10979,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10995,
											"end": 11031,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10630,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10691,
											"end": 10698,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10691,
											"end": 10698,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10995,
											"end": 11031,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10995,
											"end": 11031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10995,
											"end": 11031,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14300,
											"end": 14304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14412,
											"end": 14419,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14412,
											"end": 14419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14425,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 14355,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 14355,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14606,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14610,
											"end": 14611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14593,
											"end": 14611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 14635,
											"end": 14695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14862,
											"end": 14868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14856,
											"end": 14869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14847,
											"end": 14853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14843,
											"end": 14845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14839,
											"end": 14854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14832,
											"end": 14870,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14961,
											"end": 14965,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8460,
											"end": 8769,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 8460,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 8590,
											"end": 8592,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8601,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 8584,
											"end": 8602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 8664,
											"end": 8665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8668,
											"end": 8670,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8672,
											"end": 8679,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8681,
											"end": 8685,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 8633,
											"end": 8686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 8612,
											"end": 8762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10129,
											"end": 10144,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10241,
											"end": 10256,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10285,
											"end": 10291,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10362,
											"end": 10367,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10353,
											"end": 10367,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10396,
											"end": 10401,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10462,
											"end": 10476,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10614,
											"end": 10619,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 10680,
											"end": 10685,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9889,
											"end": 10779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9091,
											"end": 10011,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 9091,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9170,
											"end": 9186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9170,
											"end": 9186,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13546,
											"end": 13548,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13528,
											"end": 13549,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13528,
											"end": 13549,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13528,
											"end": 13549,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13565,
											"end": 13583,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 13565,
											"end": 13583,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13565,
											"end": 13583,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13558,
											"end": 13588,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13624,
											"end": 13658,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13597,
											"end": 13659,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13676,
											"end": 13694,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 13676,
											"end": 13694,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 13344,
											"end": 13700,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13907,
											"end": 13909,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13889,
											"end": 13910,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13946,
											"end": 13948,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13919,
											"end": 13949,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13985,
											"end": 14015,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 13965,
											"end": 13983,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 13965,
											"end": 13983,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13965,
											"end": 13983,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13958,
											"end": 14016,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14033,
											"end": 14051,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 14033,
											"end": 14051,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 13705,
											"end": 14057,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 9331,
											"end": 9332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9335,
											"end": 9337,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9346,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9348,
											"end": 9349,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9302,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 9302,
											"end": 9350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9350,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 9302,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13907,
											"end": 13909,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13889,
											"end": 13910,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13946,
											"end": 13948,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13926,
											"end": 13944,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13919,
											"end": 13949,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13985,
											"end": 14015,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 13965,
											"end": 13983,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 13965,
											"end": 13983,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13965,
											"end": 13983,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13958,
											"end": 14016,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14033,
											"end": 14051,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 14033,
											"end": 14051,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 13705,
											"end": 14057,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9846,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9855,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9854,
											"end": 9855,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9837,
											"end": 9855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9855,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9883,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9913,
											"end": 9946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9891,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9891,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9913,
											"end": 9946,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9913,
											"end": 9946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9913,
											"end": 9946,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2299,
											"end": 2322,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2327,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 2363,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 2445,
											"end": 2447,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 2411,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2496,
											"end": 2498,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2468,
											"end": 2500,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 3068,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 2882,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 2996,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2982,
											"end": 2991,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2973,
											"end": 2980,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2969,
											"end": 2992,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2965,
											"end": 2997,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2962,
											"end": 3014,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2962,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 2962,
											"end": 3014,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3008,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2962,
											"end": 3014,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 2962,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3033,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 3052,
											"end": 3061,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3033,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 3033,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3255,
											"end": 3602,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 3255,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3320,
											"end": 3326,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3334,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3360,
											"end": 3367,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3356,
											"end": 3379,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3352,
											"end": 3384,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3349,
											"end": 3401,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3349,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 3349,
											"end": 3401,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3397,
											"end": 3398,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3395,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3387,
											"end": 3399,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3349,
											"end": 3401,
											"name": "tag",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 3349,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 3439,
											"end": 3448,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 3420,
											"end": 3449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3410,
											"end": 3449,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3410,
											"end": 3449,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3499,
											"end": 3501,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3497,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3471,
											"end": 3503,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3539,
											"end": 3552,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3532,
											"end": 3553,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3522,
											"end": 3554,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3512,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 3512,
											"end": 3572,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3568,
											"end": 3569,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3566,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3558,
											"end": 3570,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3512,
											"end": 3572,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 3512,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3591,
											"end": 3596,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3255,
											"end": 3602,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3255,
											"end": 3602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3255,
											"end": 3602,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3255,
											"end": 3602,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3255,
											"end": 3602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3255,
											"end": 3602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3607,
											"end": 3734,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 3607,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3668,
											"end": 3678,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 3663,
											"end": 3666,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 3659,
											"end": 3679,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3680,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3699,
											"end": 3703,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3696,
											"end": 3697,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3689,
											"end": 3704,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3723,
											"end": 3727,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3720,
											"end": 3721,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3728,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 4877,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 3739,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3834,
											"end": 3840,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3848,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3850,
											"end": 3856,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3911,
											"end": 3914,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 3899,
											"end": 3908,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 3897,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3886,
											"end": 3909,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3882,
											"end": 3915,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3879,
											"end": 3932,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3879,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 3879,
											"end": 3932,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3928,
											"end": 3929,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3918,
											"end": 3930,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3879,
											"end": 3932,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 3879,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3951,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 3970,
											"end": 3979,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3951,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 3951,
											"end": 3980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3951,
											"end": 3980,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 3951,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3941,
											"end": 3980,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3941,
											"end": 3980,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3999,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4031,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3999,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 3999,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3999,
											"end": 4037,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 3999,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3989,
											"end": 4037,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3989,
											"end": 4037,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4073,
											"end": 4082,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4069,
											"end": 4087,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4056,
											"end": 4088,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4046,
											"end": 4088,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4046,
											"end": 4088,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4141,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4128,
											"end": 4137,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4124,
											"end": 4142,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4111,
											"end": 4143,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4203,
											"end": 4205,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4192,
											"end": 4206,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4223,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 4189,
											"end": 4223,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4219,
											"end": 4220,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4217,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4223,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 4189,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4257,
											"end": 4263,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4232,
											"end": 4264,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4232,
											"end": 4264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4302,
											"end": 4309,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4295,
											"end": 4299,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4291,
											"end": 4293,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4287,
											"end": 4300,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4283,
											"end": 4310,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4324,
											"end": 4325,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4314,
											"end": 4326,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4360,
											"end": 4362,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4347,
											"end": 4363,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4384,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4378,
											"end": 4380,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 4388,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4431,
											"end": 4433,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4517,
											"end": 4530,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4517,
											"end": 4530,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4513,
											"end": 4535,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4513,
											"end": 4535,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4513,
											"end": 4535,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4537,
											"end": 4539,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 4509,
											"end": 4540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4505,
											"end": 4545,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4493,
											"end": 4546,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4493,
											"end": 4546,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4493,
											"end": 4546,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4561,
											"end": 4579,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4561,
											"end": 4579,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4561,
											"end": 4579,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4581,
											"end": 4603,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4581,
											"end": 4603,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4581,
											"end": 4603,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4558,
											"end": 4604,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 4555,
											"end": 4627,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4555,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 4555,
											"end": 4627,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 4607,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4647,
											"end": 4657,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4643,
											"end": 4645,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4636,
											"end": 4658,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4682,
											"end": 4684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4667,
											"end": 4685,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4722,
											"end": 4729,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 4717,
											"end": 4719,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4712,
											"end": 4714,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4708,
											"end": 4710,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4704,
											"end": 4715,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4700,
											"end": 4720,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4697,
											"end": 4730,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4694,
											"end": 4747,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4694,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 4694,
											"end": 4747,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4743,
											"end": 4744,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4741,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4733,
											"end": 4745,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4694,
											"end": 4747,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 4694,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4799,
											"end": 4801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4790,
											"end": 4792,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4786,
											"end": 4797,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4773,
											"end": 4779,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4784,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4756,
											"end": 4802,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 4844,
											"end": 4845,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 4841,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4834,
											"end": 4836,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4826,
											"end": 4832,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4822,
											"end": 4837,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4818,
											"end": 4842,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4811,
											"end": 4846,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4871,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4871,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4871,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4871,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4871,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4871,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4871,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 4877,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 4877,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 4877,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 4877,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 4877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 4877,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 4877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 4877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4882,
											"end": 5038,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 4882,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4948,
											"end": 4968,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5008,
											"end": 5012,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4997,
											"end": 5013,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4987,
											"end": 5014,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4987,
											"end": 5014,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4977,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 4977,
											"end": 5032,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5028,
											"end": 5029,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5026,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5018,
											"end": 5030,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5043,
											"end": 5293,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 5043,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5109,
											"end": 5115,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5123,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5170,
											"end": 5172,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5167,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5145,
											"end": 5168,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5141,
											"end": 5173,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5138,
											"end": 5190,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5138,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 5138,
											"end": 5190,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5186,
											"end": 5187,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5184,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5188,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5138,
											"end": 5190,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 5138,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5222,
											"end": 5231,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5209,
											"end": 5232,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5199,
											"end": 5232,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5199,
											"end": 5232,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5251,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 5283,
											"end": 5285,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5281,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5251,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 5251,
											"end": 5287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5251,
											"end": 5287,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 5251,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5241,
											"end": 5287,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5241,
											"end": 5287,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5043,
											"end": 5293,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5043,
											"end": 5293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5043,
											"end": 5293,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5043,
											"end": 5293,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5043,
											"end": 5293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5043,
											"end": 5293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5298,
											"end": 5622,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 5298,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5373,
											"end": 5379,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5381,
											"end": 5387,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5444,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5430,
											"end": 5439,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5421,
											"end": 5428,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5417,
											"end": 5440,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5413,
											"end": 5445,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5410,
											"end": 5462,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5410,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 5410,
											"end": 5462,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5458,
											"end": 5459,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5456,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5448,
											"end": 5460,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5410,
											"end": 5462,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 5410,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 5500,
											"end": 5509,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 5481,
											"end": 5510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 5481,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5471,
											"end": 5510,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5471,
											"end": 5510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5529,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 5561,
											"end": 5563,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5550,
											"end": 5559,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5529,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 5529,
											"end": 5565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5627,
											"end": 5887,
											"name": "tag",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 5627,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5695,
											"end": 5701,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5756,
											"end": 5758,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5753,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5735,
											"end": 5742,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5731,
											"end": 5754,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5727,
											"end": 5759,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5724,
											"end": 5776,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5724,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 5724,
											"end": 5776,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5772,
											"end": 5773,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5770,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5762,
											"end": 5774,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5724,
											"end": 5776,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 5724,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 5814,
											"end": 5823,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 5795,
											"end": 5824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5824,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 5795,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5785,
											"end": 5824,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5785,
											"end": 5824,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5843,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 5877,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5866,
											"end": 5875,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5862,
											"end": 5880,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5843,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 5843,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5892,
											"end": 6272,
											"name": "tag",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 5892,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5971,
											"end": 5972,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5967,
											"end": 5979,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5967,
											"end": 5979,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5967,
											"end": 5979,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5967,
											"end": 5979,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6035,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 6035,
											"end": 6096,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6089,
											"end": 6093,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 6081,
											"end": 6087,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6077,
											"end": 6094,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6067,
											"end": 6094,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6067,
											"end": 6094,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6035,
											"end": 6096,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 6035,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6142,
											"end": 6144,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6134,
											"end": 6140,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6131,
											"end": 6145,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6108,
											"end": 6146,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6105,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 6105,
											"end": 6266,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6188,
											"end": 6198,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 6183,
											"end": 6186,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 6179,
											"end": 6199,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 6176,
											"end": 6177,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6200,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6223,
											"end": 6227,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 6220,
											"end": 6221,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6213,
											"end": 6228,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6251,
											"end": 6255,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6248,
											"end": 6249,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6256,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6105,
											"end": 6266,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 6105,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6105,
											"end": 6266,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5892,
											"end": 6272,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5892,
											"end": 6272,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5892,
											"end": 6272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5892,
											"end": 6272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7109,
											"end": 7518,
											"name": "tag",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 7109,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7311,
											"end": 7313,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7314,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7293,
											"end": 7314,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7293,
											"end": 7314,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7350,
											"end": 7352,
											"name": "PUSH",
											"source": 14,
											"value": "2D"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7323,
											"end": 7353,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7423,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 7384,
											"end": 7386,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7362,
											"end": 7424,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7455,
											"end": 7457,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7433,
											"end": 7476,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7508,
											"end": 7511,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7493,
											"end": 7512,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7493,
											"end": 7512,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7109,
											"end": 7518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9278,
											"end": 9774,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 9278,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9457,
											"end": 9460,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9495,
											"end": 9501,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9511,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 9570,
											"end": 9576,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9565,
											"end": 9568,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9558,
											"end": 9562,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9550,
											"end": 9556,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 9546,
											"end": 9563,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9511,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 9511,
											"end": 9577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9511,
											"end": 9577,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 9511,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9653,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9653,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9662,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 9640,
											"end": 9653,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9709,
											"end": 9713,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9697,
											"end": 9714,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 9697,
											"end": 9714,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9662,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 9662,
											"end": 9732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9662,
											"end": 9732,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 9662,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9748,
											"end": 9768,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9748,
											"end": 9768,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 9278,
											"end": 9774,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9278,
											"end": 9774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10547,
											"end": 10948,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 10547,
											"end": 10948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10749,
											"end": 10751,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10731,
											"end": 10752,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10731,
											"end": 10752,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10731,
											"end": 10752,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10788,
											"end": 10790,
											"name": "PUSH",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10761,
											"end": 10791,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10827,
											"end": 10861,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 10822,
											"end": 10824,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10807,
											"end": 10825,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10807,
											"end": 10825,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10800,
											"end": 10862,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10893,
											"end": 10895,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10878,
											"end": 10896,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10878,
											"end": 10896,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10871,
											"end": 10906,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10938,
											"end": 10941,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10923,
											"end": 10942,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10923,
											"end": 10942,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10547,
											"end": 10948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11712,
											"end": 12126,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 11712,
											"end": 12126,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11914,
											"end": 11916,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11953,
											"end": 11955,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 11933,
											"end": 11951,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11933,
											"end": 11951,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11933,
											"end": 11951,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11926,
											"end": 11956,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11992,
											"end": 12026,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 11987,
											"end": 11989,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11965,
											"end": 12027,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12058,
											"end": 12060,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 12043,
											"end": 12061,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12043,
											"end": 12061,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12036,
											"end": 12084,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12116,
											"end": 12119,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 12101,
											"end": 12120,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12101,
											"end": 12120,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11712,
											"end": 12126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12596,
											"end": 13085,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 12596,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12865,
											"end": 12880,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12865,
											"end": 12880,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12865,
											"end": 12880,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12847,
											"end": 12881,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12847,
											"end": 12881,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12917,
											"end": 12932,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12917,
											"end": 12932,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12912,
											"end": 12914,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12897,
											"end": 12915,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12897,
											"end": 12915,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12890,
											"end": 12933,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12964,
											"end": 12966,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12949,
											"end": 12967,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12949,
											"end": 12967,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12942,
											"end": 12976,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12942,
											"end": 12976,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12942,
											"end": 12976,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13012,
											"end": 13015,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 13007,
											"end": 13009,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 12992,
											"end": 13010,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12992,
											"end": 13010,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12985,
											"end": 13016,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12985,
											"end": 13016,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12985,
											"end": 13016,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12790,
											"end": 12794,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12790,
											"end": 12794,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13033,
											"end": 13079,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 13033,
											"end": 13079,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13059,
											"end": 13078,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13059,
											"end": 13078,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13051,
											"end": 13057,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13033,
											"end": 13079,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 13033,
											"end": 13079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13033,
											"end": 13079,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 13033,
											"end": 13079,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13025,
											"end": 13079,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 12596,
											"end": 13085,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12596,
											"end": 13085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13090,
											"end": 13339,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 13090,
											"end": 13339,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13159,
											"end": 13165,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13212,
											"end": 13214,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13200,
											"end": 13209,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13191,
											"end": 13198,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13187,
											"end": 13210,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13183,
											"end": 13215,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13180,
											"end": 13232,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13180,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 13180,
											"end": 13232,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13228,
											"end": 13229,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13225,
											"end": 13226,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13218,
											"end": 13230,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 13180,
											"end": 13232,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 13180,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13260,
											"end": 13269,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13254,
											"end": 13270,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13279,
											"end": 13309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 13303,
											"end": 13308,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13279,
											"end": 13309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 13279,
											"end": 13309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SoulBoundToken.sol",
								"contracts/interfaces/ISoulBoundToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"accessTier(address)": "b7caec87",
							"accessTier(uint256)": "34566cdf",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"deactivate(uint256)": "916b9bef",
							"getApproved(uint256)": "081812fc",
							"hasActiveSBT(address)": "39f920ab",
							"hashedIdentity(uint256)": "3355594a",
							"isActive(uint256)": "82afd23b",
							"isApprovedForAll(address,address)": "e985e9c5",
							"modifyLevel(uint256,uint8)": "bdca14cf",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"ownerToTokenId(address)": "4814f035",
							"reactivate(uint256)": "09df30ec",
							"renounceOwnership()": "715018a6",
							"safeMint(address,uint8,bytes32)": "c12290d2",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"accessTier\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"accessTier\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"deactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"hasActiveSBT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"hashedIdentity\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"tier\",\"type\":\"uint8\"}],\"name\":\"modifyLevel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ownerToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"reactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"hashed\",\"type\":\"bytes32\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SoulBoundToken.sol\":\"SoulBoundToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/SoulBoundToken.sol\":{\"keccak256\":\"0x0cfef71ab41c71315a06ddd61ff2372cddd0669d1a05831c8cd360723cd9e1c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1376f882e7beb63f6ebb561d30f2d3317822eb7533966983408b479aa7e8b0c5\",\"dweb:/ipfs/QmYwRFFWpi38jzGpEp2abmZq77kofTtshd6frbwtpcezqi\"]},\"contracts/interfaces/ISoulBoundToken.sol\":{\"keccak256\":\"0xe8b14dbe680f41d2e431b927278b24f44357e25b3cd9fb4ac6d8d4386a851e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7195cfac583dc105c07515e381c64a419aed4688cad3ec62b37f74e9923ef43c\",\"dweb:/ipfs/QmW977FtbCb6oXEUPiFWDYi48HKobdGfFcDZgf9xuM1scz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 144,
								"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 148,
								"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 152,
								"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 158,
								"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 7,
								"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2739,
								"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)1576_storage"
							},
							{
								"astId": 2743,
								"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
								"label": "_accessTier",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_uint8)"
							},
							{
								"astId": 2747,
								"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
								"label": "_isActive",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 2751,
								"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
								"label": "_hashedIdentity",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_bytes32)"
							},
							{
								"astId": 2755,
								"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
								"label": "_ownerToTokenId",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_uint256,t_uint8)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint8)",
								"numberOfBytes": "32",
								"value": "t_uint8"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1576_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1575,
										"contract": "contracts/SoulBoundToken.sol:SoulBoundToken",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ISoulBoundToken.sol": {
				"ISoulBoundToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "accessTier",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "accessTier",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "hasActiveSBT",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ownerToTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accessTier(address)": "b7caec87",
							"accessTier(uint256)": "34566cdf",
							"hasActiveSBT(address)": "39f920ab",
							"ownerToTokenId(address)": "4814f035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"accessTier\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"accessTier\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"hasActiveSBT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ownerToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISoulBoundToken.sol\":\"ISoulBoundToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISoulBoundToken.sol\":{\"keccak256\":\"0xe8b14dbe680f41d2e431b927278b24f44357e25b3cd9fb4ac6d8d4386a851e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7195cfac583dc105c07515e381c64a419aed4688cad3ec62b37f74e9923ef43c\",\"dweb:/ipfs/QmW977FtbCb6oXEUPiFWDYi48HKobdGfFcDZgf9xuM1scz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1570
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1571,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1570
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1548
						],
						"Context": [
							1570
						],
						"ERC165": [
							1843
						],
						"ERC721": [
							1057
						],
						"IERC165": [
							1855
						],
						"IERC721": [
							1173
						],
						"IERC721Metadata": [
							1218
						],
						"IERC721Receiver": [
							1191
						],
						"Math": [
							2720
						],
						"Strings": [
							1819
						]
					},
					"id": 1058,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 1174,
							"src": "132:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 1192,
							"src": "156:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 1219,
							"src": "188:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 1549,
							"src": "231:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 1571,
							"src": "265:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 1820,
							"src": "299:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1058,
							"sourceUnit": 1844,
							"src": "333:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 123,
										"name": "Context",
										"nameLocations": [
											"647:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "647:7:1"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:1"
								},
								{
									"baseName": {
										"id": 125,
										"name": "ERC165",
										"nameLocations": [
											"656:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1843,
										"src": "656:6:1"
									},
									"id": 126,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:1"
								},
								{
									"baseName": {
										"id": 127,
										"name": "IERC721",
										"nameLocations": [
											"664:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "664:7:1"
									},
									"id": 128,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:1"
								},
								{
									"baseName": {
										"id": 129,
										"name": "IERC721Metadata",
										"nameLocations": [
											"673:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1218,
										"src": "673:15:1"
									},
									"id": 130,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:1"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1057,
							"linearizedBaseContracts": [
								1057,
								1218,
								1173,
								1843,
								1855,
								1570
							],
							"name": "ERC721",
							"nameLocation": "637:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 133,
									"libraryName": {
										"id": 131,
										"name": "Address",
										"nameLocations": [
											"701:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1548,
										"src": "701:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:1",
									"typeName": {
										"id": 132,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 136,
									"libraryName": {
										"id": 134,
										"name": "Strings",
										"nameLocations": [
											"732:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1819,
										"src": "732:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:1",
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "776:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 137,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "823:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 139,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 144,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "898:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 143,
										"keyType": {
											"id": 141,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 142,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 148,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "992:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 147,
										"keyType": {
											"id": 145,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 146,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 152,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "1093:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 151,
										"keyType": {
											"id": 149,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 150,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "1199:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 157,
										"keyType": {
											"id": 153,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 156,
											"keyType": {
												"id": 154,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 155,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "1446:57:1",
										"statements": [
											{
												"expression": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 166,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "1456:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 167,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1464:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:1"
											},
											{
												"expression": {
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 170,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "1479:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 171,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "1489:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:1"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 175,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1402:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 160,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1423:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:1"
									},
									"scope": 1057,
									"src": "1390:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1842,
										1854
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1678:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 186,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "1707:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 188,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1173,
																			"src": "1727:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1173_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1173_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 187,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1173",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1736:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 192,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "1763:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 194,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1218,
																			"src": "1783:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1218_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1218_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 193,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1218",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1800:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 201,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "1851:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 199,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1057_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1833:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1842,
															"src": "1827:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 185,
												"id": 204,
												"nodeType": "Return",
												"src": "1688:175:1"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 182,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 180,
												"name": "ERC165",
												"nameLocations": [
													"1646:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1843,
												"src": "1646:6:1"
											},
											{
												"id": 181,
												"name": "IERC165",
												"nameLocations": [
													"1654:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1855,
												"src": "1654:7:1"
											}
										],
										"src": "1637:25:1"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1597:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 177,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1672:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:1"
									},
									"scope": 1057,
									"src": "1570:300:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1098
									],
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "2010:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 216,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "2028:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 217,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "2020:73:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 225,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "2110:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 227,
													"indexExpression": {
														"id": 226,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "2120:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2110:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 228,
												"nodeType": "Return",
												"src": "2103:23:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 211,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:1"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1948:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2001:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:1"
									},
									"scope": 1057,
									"src": "1929:204:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1106
									],
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "2271:138:1",
										"statements": [
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2289:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "2281:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2281:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"arguments": [
														{
															"id": 242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2306:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "2297:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2281:33:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 246,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "2332:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 247,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "2324:56:1"
											},
											{
												"expression": {
													"id": 255,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 240,
													"src": "2397:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 238,
												"id": 256,
												"nodeType": "Return",
												"src": "2390:12:1"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "2139:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2199:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2244:8:1"
									},
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2215:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2207:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:17:1"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2262:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:9:1"
									},
									"scope": 1057,
									"src": "2190:219:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1203
									],
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "2540:29:1",
										"statements": [
											{
												"expression": {
													"id": 265,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2557:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 264,
												"id": 266,
												"nodeType": "Return",
												"src": "2550:12:1"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "2415:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2480:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2507:8:1"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2484:2:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2525:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:1"
									},
									"scope": 1057,
									"src": "2471:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1209
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2704:31:1",
										"statements": [
											{
												"expression": {
													"id": 275,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "2721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 274,
												"id": 276,
												"nodeType": "Return",
												"src": "2714:14:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "2575:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2642:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2671:8:1"
									},
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:2:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2689:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2689:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:15:1"
									},
									"scope": 1057,
									"src": "2633:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1217
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "2889:188:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 288,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "2914:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 287,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "2899:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2899:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "2899:23:1"
											},
											{
												"assignments": [
													292
												],
												"declarations": [
													{
														"constant": false,
														"id": 292,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2947:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2933:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 291,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2933:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 293,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2957:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2933:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 298,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "2990:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2984:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 296,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2984:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2984:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2999:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2984:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3008:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2984:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3068:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2984:86:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 307,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "3036:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 308,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 281,
																				"src": "3045:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3053:8:1",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1702,
																			"src": "3045:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3045:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 305,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3019:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3023:12:1",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3019:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3019:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3012:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 303,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3012:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3012:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 286,
												"id": 315,
												"nodeType": "Return",
												"src": "2977:93:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2741:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2810:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 283,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2856:8:1"
									},
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2827:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2819:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2819:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:17:1"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2874:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 284,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2874:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:15:1"
									},
									"scope": 1057,
									"src": "2801:276:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "3385:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3402:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "3395:9:1"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "3083:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3328:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3336:2:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3370:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3370:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:15:1"
									},
									"scope": 1057,
									"src": "3319:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1146
									],
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "3538:336:1",
										"statements": [
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3556:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "3548:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 335,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3548:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"arguments": [
														{
															"id": 339,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3579:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 337,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "3564:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1057_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3571:7:1",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 258,
														"src": "3564:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3548:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 343,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "3605:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 344,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "3611:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3605:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3618:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3597:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "3597:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 350,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "3686:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3686:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 352,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "3702:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3686:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 355,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "3728:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 356,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "3735:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3735:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 354,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "3711:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3711:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3686:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3762:63:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3665:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3665:170:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "3665:170:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 364,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3855:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3859:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 363,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "3846:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "3846:21:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3417:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3477:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 333,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3529:8:1"
									},
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3493:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3485:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3485:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3505:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3497:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:29:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3538:0:1"
									},
									"scope": 1057,
									"src": "3468:406:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1162
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "4020:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "4045:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 378,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "4030:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4030:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "4030:23:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 382,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "4071:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 384,
													"indexExpression": {
														"id": 383,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "4087:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4071:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 377,
												"id": 385,
												"nodeType": "Return",
												"src": "4064:31:1"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "3880:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3944:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 374,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3993:8:1"
									},
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3964:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3956:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:17:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4011:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4011:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4010:9:1"
									},
									"scope": 1057,
									"src": "3935:167:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1154
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "4253:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 397,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "4282:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "4296:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4306:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 396,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "4263:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "4263:52:1"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "4108:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4178:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 394,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4244:8:1"
									},
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4204:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "4196:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4196:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4219:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "4214:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4214:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4195:33:1"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4253:0:1"
									},
									"scope": 1057,
									"src": "4169:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1172
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "4491:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 415,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4508:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 417,
														"indexExpression": {
															"id": 416,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "4527:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4508:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 419,
													"indexExpression": {
														"id": 418,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "4534:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4508:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 414,
												"id": 420,
												"nodeType": "Return",
												"src": "4501:42:1"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "4328:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4397:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 411,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4467:8:1"
									},
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4422:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4414:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4437:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4429:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4413:33:1"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4485:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4485:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:6:1"
									},
									"scope": 1057,
									"src": "4388:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1138
									],
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4731:207:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 435,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "4820:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4820:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 437,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "4834:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 434,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "4801:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4801:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4844:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4793:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4793:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "4793:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 443,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4913:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "4919:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4923:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 442,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "4903:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4903:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "4903:28:1"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "4556:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4621:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 431,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4722:8:1"
									},
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4651:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4643:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4643:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4673:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4665:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4693:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4685:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4633:73:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4731:0:1"
									},
									"scope": 1057,
									"src": "4612:326:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1128
									],
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "5127:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "5154:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "5160:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "5164:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5173:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 460,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															468,
															498
														],
														"referencedDeclaration": 498,
														"src": "5137:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "5137:39:1"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4944:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5013:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 458,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5118:8:1"
									},
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5047:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "5039:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5069:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "5061:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5089:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "5081:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5081:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5029:73:1"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5127:0:1"
									},
									"scope": 1057,
									"src": "5004:179:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1118
									],
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "5399:164:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 483,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "5436:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5436:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 485,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5450:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 482,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "5417:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5417:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5460:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5409:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "5409:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "5532:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "5538:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "5542:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 494,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "5551:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 490,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "5518:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5518:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "5518:38:1"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "5189:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5258:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 479,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5390:8:1"
									},
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5292:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5284:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5284:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5314:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5306:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5306:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5364:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5351:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5351:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5274:100:1"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5399:0:1"
									},
									"scope": 1057,
									"src": "5249:314:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "6564:165:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "6584:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "6590:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "6594:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 510,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "6574:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6574:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "6574:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 518,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "6643:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 519,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "6649:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 520,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "6653:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 521,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "6662:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 517,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "6620:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6620:47:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6669:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6612:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6612:110:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "6612:110:1"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "5569:850:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6433:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6464:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "6456:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6456:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6486:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "6478:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6478:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6506:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "6498:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6498:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6536:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "6523:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6523:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6446:100:1"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6564:0:1"
									},
									"scope": 1057,
									"src": "6424:305:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "6913:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 535,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "6930:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 537,
													"indexExpression": {
														"id": 536,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "6938:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6930:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 534,
												"id": 538,
												"nodeType": "Return",
												"src": "6923:23:1"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "6735:98:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "6847:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6864:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "6856:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6855:17:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "6904:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6903:9:1"
									},
									"scope": 1057,
									"src": "6838:115:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "7327:55:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 549,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "7353:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 548,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "7344:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7344:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7373:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7365:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7365:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7365:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7344:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 556,
												"nodeType": "Return",
												"src": "7337:38:1"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "6959:292:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7265:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7281:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "7273:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7273:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7272:17:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "7321:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7321:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7320:6:1"
									},
									"scope": 1057,
									"src": "7256:126:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "7639:162:1",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7657:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 591,
														"src": "7649:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7649:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"arguments": [
														{
															"id": 572,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "7680:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 570,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "7665:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1057_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7672:7:1",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 258,
														"src": "7665:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7665:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7649:39:1"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 575,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "7706:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 576,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "7717:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7706:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 579,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "7743:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 580,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 561,
																			"src": "7750:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 578,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 422,
																		"src": "7726:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7726:32:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7706:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 584,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 563,
																			"src": "7774:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 583,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "7762:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7762:20:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 586,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "7786:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7762:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7706:87:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 589,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7705:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 567,
												"id": 590,
												"nodeType": "Return",
												"src": "7698:96:1"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "7388:147:1",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7549:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7576:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "7568:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7568:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "7585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7567:34:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "7633:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7633:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7632:6:1"
									},
									"scope": 1057,
									"src": "7540:261:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "8196:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "8216:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "8220:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8229:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 600,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															607,
															636
														],
														"referencedDeclaration": 636,
														"src": "8206:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8206:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "8206:26:1"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "7807:319:1",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8140:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8158:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "8150:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8150:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8170:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "8162:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8162:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8149:29:1"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8196:0:1"
									},
									"scope": 1057,
									"src": "8131:108:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "8574:195:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 618,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "8590:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "8594:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "8584:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8584:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "8584:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8664:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8656:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 624,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8656:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8656:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 628,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "8668:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 629,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "8672:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 630,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "8681:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 623,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "8633:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8633:53:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8700:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8612:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8612:150:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "8612:150:1"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "8245:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8469:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8496:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "8488:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8488:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8516:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "8508:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8508:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8546:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "8533:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8533:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8478:78:1"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8574:0:1"
									},
									"scope": 1057,
									"src": "8460:309:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "9152:859:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 645,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "9170:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9184:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9176:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9176:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9176:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9170:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9188:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9162:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9162:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "9162:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9241:17:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 656,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "9250:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 655,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "9242:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9242:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9260:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9233:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9233:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "9233:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9331:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9323:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 663,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9323:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9323:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "9335:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "9339:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9348:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 662,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "9302:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9302:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "9302:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9445:17:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 674,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "9454:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 673,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "9446:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9446:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9464:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9437:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9437:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "9437:58:1"
											},
											{
												"id": 686,
												"nodeType": "UncheckedBlock",
												"src": "9506:360:1",
												"statements": [
													{
														"expression": {
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 680,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "9837:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 682,
																"indexExpression": {
																	"id": 681,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "9847:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9837:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9854:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9837:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 685,
														"nodeType": "ExpressionStatement",
														"src": "9837:18:1"
													}
												]
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 687,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "9876:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "9884:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9876:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "9895:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9876:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "9876:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9930:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9922:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 694,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9922:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9922:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "9934:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "9938:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "9913:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9913:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "EmitStatement",
												"src": "9908:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9985:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9977:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 703,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9977:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9977:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "9989:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 708,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "9993:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10002:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 702,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "9957:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9957:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "9957:47:1"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "8775:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9100:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9114:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "9106:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9106:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "9118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9118:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9105:29:1"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9152:0:1"
									},
									"scope": 1057,
									"src": "9091:920:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "10386:713:1",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10404:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "10396:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 719,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10396:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"arguments": [
														{
															"id": 723,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10427:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 721,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "10412:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1057_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10419:7:1",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 258,
														"src": "10412:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10412:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10396:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "10467:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10482:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10474:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 728,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10474:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10474:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10486:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10495:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 726,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "10446:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10446:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "10446:51:1"
											},
											{
												"expression": {
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 736,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "10599:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 739,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "10622:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 737,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "10607:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1057_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10614:7:1",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 258,
															"src": "10607:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10607:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10599:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "10599:31:1"
											},
											{
												"expression": {
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10668:31:1",
													"subExpression": {
														"baseExpression": {
															"id": 743,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "10675:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 745,
														"indexExpression": {
															"id": 744,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10691:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10675:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "10668:31:1"
											},
											{
												"id": 754,
												"nodeType": "UncheckedBlock",
												"src": "10710:237:1",
												"statements": [
													{
														"expression": {
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 748,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "10915:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 750,
																"indexExpression": {
																	"id": 749,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "10925:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10915:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10935:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10915:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "10915:21:1"
													}
												]
											},
											{
												"expression": {
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10956:23:1",
													"subExpression": {
														"baseExpression": {
															"id": 755,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "10963:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 757,
														"indexExpression": {
															"id": 756,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "10971:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10963:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "10956:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 761,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "11004:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11019:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11011:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11011:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11011:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "11023:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 760,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "10995:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10995:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "EmitStatement",
												"src": "10990:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "11062:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11077:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11069:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 771,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11069:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11069:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "11081:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11090:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 769,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "11042:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11042:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "11042:50:1"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "10017:315:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10346:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10360:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "10352:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10352:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10351:17:1"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10386:0:1"
									},
									"scope": 1057,
									"src": "10337:762:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "11532:1124:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 793,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "11565:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 791,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "11550:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1057_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11557:7:1",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 258,
																	"src": "11550:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11550:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 795,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "11577:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11550:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11583:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11542:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11542:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "11542:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "11641:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11655:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11647:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 802,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11647:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11647:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11641:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11659:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11633:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11633:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "11633:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 811,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "11730:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 812,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "11736:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "11740:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11749:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 810,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "11709:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11709:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "11709:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "11866:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 818,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "11851:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1057_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11858:7:1",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 258,
																	"src": "11851:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11851:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 822,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "11878:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11851:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11884:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11843:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11843:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "11843:81:1"
											},
											{
												"expression": {
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11986:31:1",
													"subExpression": {
														"baseExpression": {
															"id": 827,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "11993:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 829,
														"indexExpression": {
															"id": 828,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "12009:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11993:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "11986:31:1"
											},
											{
												"id": 844,
												"nodeType": "UncheckedBlock",
												"src": "12028:496:1",
												"statements": [
													{
														"expression": {
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 832,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "12461:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 834,
																"indexExpression": {
																	"id": 833,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "12471:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12461:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12480:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12461:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 837,
														"nodeType": "ExpressionStatement",
														"src": "12461:20:1"
													},
													{
														"expression": {
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 838,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "12495:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 840,
																"indexExpression": {
																	"id": 839,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "12505:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12495:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12512:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12495:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 843,
														"nodeType": "ExpressionStatement",
														"src": "12495:18:1"
													}
												]
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 845,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "12533:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 847,
														"indexExpression": {
															"id": 846,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "12541:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12533:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 848,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "12552:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12533:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "12533:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 852,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "12579:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "12585:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "12589:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 851,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "12570:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12570:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "EmitStatement",
												"src": "12565:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 858,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "12628:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "12634:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "12638:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12647:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 857,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "12608:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12608:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "12608:41:1"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "11105:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11432:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11459:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "11451:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11481:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "11473:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11501:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "11493:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11441:73:1"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11532:0:1"
									},
									"scope": 1057,
									"src": "11423:1233:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "12832:107:1",
										"statements": [
											{
												"expression": {
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 873,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "12842:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 875,
														"indexExpression": {
															"id": 874,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "12858:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12842:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 876,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "12869:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12842:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "12842:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 882,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "12910:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 880,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "12895:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1057_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12902:7:1",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 258,
																"src": "12895:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12895:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "12920:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "12924:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 879,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "12886:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12886:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "EmitStatement",
												"src": "12881:51:1"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "12662:101:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12777:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12794:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "12786:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12786:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12806:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "12798:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12785:29:1"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12832:0:1"
									},
									"scope": 1057,
									"src": "12768:171:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "13198:184:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "13216:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 901,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "13225:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13216:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13235:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13208:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13208:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "13208:55:1"
											},
											{
												"expression": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 906,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "13273:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 909,
															"indexExpression": {
																"id": 907,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "13292:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13273:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 910,
														"indexExpression": {
															"id": 908,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "13299:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13273:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 911,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "13311:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13273:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "13273:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 915,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "13349:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "13356:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "13366:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 914,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "13334:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13334:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "EmitStatement",
												"src": "13329:46:1"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "12945:125:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13084:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13120:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "13112:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13112:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13143:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "13135:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13135:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13166:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "13161:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 895,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13161:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13102:78:1"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13198:0:1"
									},
									"scope": 1057,
									"src": "13075:307:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "13529:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 929,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "13555:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 928,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "13547:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13547:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13565:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13539:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13539:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "13539:53:1"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "13388:73:1",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "13475:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13498:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "13490:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13489:17:1"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13529:0:1"
									},
									"scope": 1057,
									"src": "13466:133:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "14306:676:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 949,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "14320:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14323:10:1",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1236,
														"src": "14320:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14320:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 994,
													"nodeType": "Block",
													"src": "14940:36:1",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14961:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 948,
															"id": 993,
															"nodeType": "Return",
															"src": "14954:11:1"
														}
													]
												},
												"id": 995,
												"nodeType": "IfStatement",
												"src": "14316:660:1",
												"trueBody": {
													"id": 991,
													"nodeType": "Block",
													"src": "14337:597:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 971,
																		"nodeType": "Block",
																		"src": "14451:91:1",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 969,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 965,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 963,
																						"src": "14476:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 966,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1191,
																								"src": "14486:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1191_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 967,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14502:16:1",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1190,
																							"src": "14486:32:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 968,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14519:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14486:41:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14476:51:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 948,
																				"id": 970,
																				"nodeType": "Return",
																				"src": "14469:58:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 972,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 964,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 963,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14443:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 972,
																				"src": "14436:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 962,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14436:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14435:15:1"
																	},
																	"src": "14427:115:1"
																},
																{
																	"block": {
																		"id": 988,
																		"nodeType": "Block",
																		"src": "14571:353:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 979,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 976,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 974,
																							"src": "14593:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 977,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14600:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14593:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 978,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14610:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14593:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 986,
																					"nodeType": "Block",
																					"src": "14720:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "14806:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "14843:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14847:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "14839:3:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14839:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14862:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "14856:5:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14856:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "14832:6:1"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14832:38:1"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "14832:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 974,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14847:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 974,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14862:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 985,
																							"nodeType": "InlineAssembly",
																							"src": "14797:95:1"
																						}
																					]
																				},
																				"id": 987,
																				"nodeType": "IfStatement",
																				"src": "14589:321:1",
																				"trueBody": {
																					"id": 984,
																					"nodeType": "Block",
																					"src": "14613:101:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 981,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14642:52:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 980,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14635:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 982,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14635:60:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 983,
																							"nodeType": "ExpressionStatement",
																							"src": "14635:60:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 989,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 975,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 974,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14563:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 989,
																				"src": "14550:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 973,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14550:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14549:21:1"
																	},
																	"src": "14543:381:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 956,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "14392:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14392:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 958,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "14406:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 959,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "14412:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 960,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "14421:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 953,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 940,
																				"src": "14371:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 952,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1191,
																			"src": "14355:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1191_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14355:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1191",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14375:16:1",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1190,
																	"src": "14355:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14355:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 990,
															"nodeType": "TryStatement",
															"src": "14351:573:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "13605:541:1",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "14160:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14200:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "14192:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14222:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "14214:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14214:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14242:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "14234:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14272:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "14259:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 943,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14259:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14182:100:1"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "14300:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14300:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14299:6:1"
									},
									"scope": 1057,
									"src": "14151:831:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "15856:238:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1009,
														"name": "batchSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "15870:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15882:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15870:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1041,
												"nodeType": "IfStatement",
												"src": "15866:222:1",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "15885:203:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1012,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "15903:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15919:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15911:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1013,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "15911:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15911:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15903:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1025,
															"nodeType": "IfStatement",
															"src": "15899:85:1",
															"trueBody": {
																"id": 1024,
																"nodeType": "Block",
																"src": "15923:61:1",
																"statements": [
																	{
																		"expression": {
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1018,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 148,
																					"src": "15941:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1020,
																				"indexExpression": {
																					"id": 1019,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1000,
																					"src": "15951:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "15941:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 1021,
																				"name": "batchSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1006,
																				"src": "15960:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15941:28:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1023,
																		"nodeType": "ExpressionStatement",
																		"src": "15941:28:1"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1026,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "16001:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16015:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16007:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1027,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16007:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16007:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16001:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1039,
															"nodeType": "IfStatement",
															"src": "15997:81:1",
															"trueBody": {
																"id": 1038,
																"nodeType": "Block",
																"src": "16019:59:1",
																"statements": [
																	{
																		"expression": {
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1032,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 148,
																					"src": "16037:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1034,
																				"indexExpression": {
																					"id": 1033,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "16047:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "16037:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1035,
																				"name": "batchSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1006,
																				"src": "16054:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16037:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1037,
																		"nodeType": "ExpressionStatement",
																		"src": "16037:26:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "14988:705:1",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15707:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15745:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "15737:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15767:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "15759:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "15779:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "15823:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "15815:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15815:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15727:111:1"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15856:0:1"
									},
									"scope": 1057,
									"src": "15698:396:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "16951:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "16100:695:1",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16809:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16846:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "16838:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16838:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16868:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "16860:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16888:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "16880:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16880:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16918:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "16910:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16910:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16828:105:1"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16951:0:1"
									},
									"scope": 1057,
									"src": "16800:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1058,
							"src": "628:16327:1",
							"usedErrors": []
						}
					],
					"src": "107:16849:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1855
						],
						"IERC721": [
							1173
						]
					},
					"id": 1174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1059,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1060,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1174,
							"sourceUnit": 1856,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1062,
										"name": "IERC165",
										"nameLocations": [
											"271:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1855,
										"src": "271:7:2"
									},
									"id": 1063,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1061,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1173,
							"linearizedBaseContracts": [
								1173,
								1855
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1072,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1081,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1090,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1087,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1098,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 1173,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 1173,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 1173,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 1173,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3526:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3568:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:2"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:2"
									},
									"scope": 1173,
									"src": "3495:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4079:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4091:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:2"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:2"
									},
									"scope": 1173,
									"src": "4062:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4464:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "4482:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:2"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:2"
									},
									"scope": 1173,
									"src": "4437:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "4678:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:2"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "4718:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:2"
									},
									"scope": 1173,
									"src": "4657:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4911:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4926:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:2"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4967:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:2"
									},
									"scope": 1173,
									"src": "4885:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1174,
							"src": "250:4725:2",
							"usedErrors": []
						}
					],
					"src": "108:4868:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1191
						]
					},
					"id": 1192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1176,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1191,
							"linearizedBaseContracts": [
								1191
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1187,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 1191,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1192,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1855
						],
						"IERC721": [
							1173
						],
						"IERC721Metadata": [
							1218
						]
					},
					"id": 1219,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1193,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1219,
							"sourceUnit": 1174,
							"src": "137:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1196,
										"name": "IERC721",
										"nameLocations": [
											"326:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "326:7:4"
									},
									"id": 1197,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:4"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1195,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1218,
							"linearizedBaseContracts": [
								1218,
								1173,
								1855
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:4"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "442:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:4"
									},
									"scope": 1218,
									"src": "403:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:4"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "569:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1206,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:4"
									},
									"scope": 1218,
									"src": "528:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:4"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "743:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:4"
									},
									"scope": 1218,
									"src": "685:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1219,
							"src": "297:463:4",
							"usedErrors": []
						}
					],
					"src": "112:649:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1548
						]
					},
					"id": 1549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1220,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1221,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1548,
							"linearizedBaseContracts": [
								1548
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "1241:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1234,
												"nodeType": "Return",
												"src": "1458:30:5"
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:5"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:5"
									},
									"scope": 1548,
									"src": "1175:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "2483:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1247,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1548",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1548",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1245,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1250,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "2526:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:5"
											},
											{
												"assignments": [
													1256,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1256,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1269,
														"src": "2578:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1255,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1263,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1257,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "2596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1259,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "2618:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1265,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:5"
											}
										]
									},
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2431:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:5"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:5"
									},
									"scope": 1548,
									"src": "2412:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "3555:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1281,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "3594:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1282,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "3602:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1280,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1328,
															1372
														],
														"referencedDeclaration": 1372,
														"src": "3572:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1279,
												"id": 1286,
												"nodeType": "Return",
												"src": "3565:79:5"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3504:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:5"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3541:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:5"
									},
									"scope": 1548,
									"src": "3466:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "4020:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1301,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "4059:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "4067:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1304,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "4076:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1300,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1328,
															1372
														],
														"referencedDeclaration": 1372,
														"src": "4037:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1306,
												"nodeType": "Return",
												"src": "4030:59:5"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3904:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3928:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3955:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:5"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "4006:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:5"
									},
									"scope": 1548,
									"src": "3873:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "4601:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1321,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4640:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1322,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "4648:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1323,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "4654:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1320,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1328,
															1372
														],
														"referencedDeclaration": 1372,
														"src": "4618:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1319,
												"id": 1326,
												"nodeType": "Return",
												"src": "4611:94:5"
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "4498:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "4522:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "4549:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:5"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "4587:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:5"
									},
									"scope": 1548,
									"src": "4458:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "5139:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1345,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1548",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1548",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1343,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1348,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "5182:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:5"
											},
											{
												"assignments": [
													1354,
													1356
												],
												"declarations": [
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "5241:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1353,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "5255:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1355,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1363,
												"initialValue": {
													"arguments": [
														{
															"id": 1361,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "5308:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1357,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "5282:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1359,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "5301:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1365,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "5357:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1366,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "5365:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1367,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "5374:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1368,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "5386:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1364,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "5330:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1341,
												"id": 1370,
												"nodeType": "Return",
												"src": "5323:76:5"
											}
										]
									},
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "5000:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "5024:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1332,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "5051:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "5074:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:5"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "5125:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:5"
									},
									"scope": 1548,
									"src": "4960:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "5683:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1383,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "5719:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1384,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "5727:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1382,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1389,
															1418
														],
														"referencedDeclaration": 1418,
														"src": "5700:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1381,
												"id": 1387,
												"nodeType": "Return",
												"src": "5693:80:5"
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "5611:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "5627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:5"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "5669:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:5"
									},
									"scope": 1548,
									"src": "5583:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "6122:168:5",
										"statements": [
											{
												"assignments": [
													1402,
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1402,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "6133:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1401,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "6147:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1403,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1409,
												"initialValue": {
													"arguments": [
														{
															"id": 1407,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "6192:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1405,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "6174:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1411,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "6241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1412,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "6249:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1413,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "6258:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1414,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "6270:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1410,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "6214:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1400,
												"id": 1416,
												"nodeType": "Return",
												"src": "6207:76:5"
											}
										]
									},
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "6001:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "6025:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "6052:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1395,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:5"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "6108:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:5"
									},
									"scope": 1548,
									"src": "5964:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1434,
										"nodeType": "Block",
										"src": "6566:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1429,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "6604:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1430,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "6612:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1428,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1435,
															1464
														],
														"referencedDeclaration": 1464,
														"src": "6583:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1427,
												"id": 1433,
												"nodeType": "Return",
												"src": "6576:84:5"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "6499:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "6515:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:5"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "6552:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:5"
									},
									"scope": 1548,
									"src": "6469:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "7008:170:5",
										"statements": [
											{
												"assignments": [
													1448,
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1448,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1463,
														"src": "7019:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1447,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1463,
														"src": "7033:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1449,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1455,
												"initialValue": {
													"arguments": [
														{
															"id": 1453,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "7080:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1451,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "7060:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1457,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "7129:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1458,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "7137:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1459,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "7146:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1460,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "7158:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1456,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "7102:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1446,
												"id": 1462,
												"nodeType": "Return",
												"src": "7095:76:5"
											}
										]
									},
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "6892:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "6916:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1439,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "6943:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1441,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:5"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "6994:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:5"
									},
									"scope": 1548,
									"src": "6853:325:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "7660:434:5",
										"statements": [
											{
												"condition": {
													"id": 1478,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1469,
													"src": "7674:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1500,
													"nodeType": "Block",
													"src": "8030:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1496,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "8052:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1497,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1473,
																		"src": "8064:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1495,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "8044:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1499,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:5"
														}
													]
												},
												"id": 1501,
												"nodeType": "IfStatement",
												"src": "7670:418:5",
												"trueBody": {
													"id": 1494,
													"nodeType": "Block",
													"src": "7683:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1479,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "7701:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1491,
															"nodeType": "IfStatement",
															"src": "7697:286:5",
															"trueBody": {
																"id": 1490,
																"nodeType": "Block",
																"src": "7725:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1485,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1467,
																							"src": "7927:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1484,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1236,
																						"src": "7916:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1486,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1487,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1483,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1489,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1492,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "8003:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1477,
															"id": 1493,
															"nodeType": "Return",
															"src": "7996:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "7511:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "7535:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "7557:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "7590:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:5"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "7646:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:5"
									},
									"scope": 1548,
									"src": "7466:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "8475:135:5",
										"statements": [
											{
												"condition": {
													"id": 1515,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1506,
													"src": "8489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1524,
													"nodeType": "Block",
													"src": "8546:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1520,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "8568:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1521,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "8580:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1519,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "8560:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1523,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:5"
														}
													]
												},
												"id": 1525,
												"nodeType": "IfStatement",
												"src": "8485:119:5",
												"trueBody": {
													"id": 1518,
													"nodeType": "Block",
													"src": "8498:42:5",
													"statements": [
														{
															"expression": {
																"id": 1516,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "8519:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1514,
															"id": 1517,
															"nodeType": "Return",
															"src": "8512:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "8350:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "8372:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "8405:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:5"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "8461:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1512,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:5"
									},
									"scope": 1548,
									"src": "8315:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "8699:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1534,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "8775:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1544,
													"nodeType": "Block",
													"src": "9105:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1541,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1531,
																		"src": "9126:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1540,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1543,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:5"
														}
													]
												},
												"id": 1545,
												"nodeType": "IfStatement",
												"src": "8771:379:5",
												"trueBody": {
													"id": 1539,
													"nodeType": "Block",
													"src": "8798:301:5",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1529,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 1529,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:5",
																	"valueSize": 1
																}
															],
															"id": 1538,
															"nodeType": "InlineAssembly",
															"src": "8947:142:5"
														}
													]
												}
											}
										]
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "8633:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "8658:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1530,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:5"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:5"
									},
									"scope": 1548,
									"src": "8616:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1549,
							"src": "194:8964:5",
							"usedErrors": []
						}
					],
					"src": "101:9058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1570
						]
					},
					"id": 1571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1550,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1551,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1570,
							"linearizedBaseContracts": [
								1570
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1556,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1555,
												"id": 1558,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 1570,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1568,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1565,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1567,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 1569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 1570,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1571,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1644
						]
					},
					"id": 1645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1573,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:7",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1644,
							"linearizedBaseContracts": [
								1644
							],
							"name": "Counters",
							"nameLocation": "432:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1576,
									"members": [
										{
											"constant": false,
											"id": 1575,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1576,
											"src": "786:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1574,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:7",
									"nodeType": "StructDefinition",
									"scope": 1644,
									"src": "447:374:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "901:38:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1584,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "918:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:7",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1575,
													"src": "918:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1583,
												"id": 1586,
												"nodeType": "Return",
												"src": "911:21:7"
											}
										]
									},
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "844:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1578,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1577,
														"name": "Counter",
														"nameLocations": [
															"844:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1576,
														"src": "844:7:7"
													},
													"referencedDeclaration": 1576,
													"src": "844:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:7"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "892:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:7"
									},
									"scope": 1644,
									"src": "827:112:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "998:70:7",
										"statements": [
											{
												"id": 1600,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:7",
												"statements": [
													{
														"expression": {
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1594,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "1032:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:7",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1575,
																"src": "1032:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1599,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:7"
													}
												]
											}
										]
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "964:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1590,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1589,
														"name": "Counter",
														"nameLocations": [
															"964:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1576,
														"src": "964:7:7"
													},
													"referencedDeclaration": 1576,
													"src": "964:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:7"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:7"
									},
									"scope": 1644,
									"src": "945:123:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "1127:176:7",
										"statements": [
											{
												"assignments": [
													1609
												],
												"declarations": [
													{
														"constant": false,
														"id": 1609,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1629,
														"src": "1137:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1612,
												"initialValue": {
													"expression": {
														"id": 1610,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "1153:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:7",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1575,
													"src": "1153:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1614,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "1185:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:7"
											},
											{
												"id": 1628,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:7",
												"statements": [
													{
														"expression": {
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1620,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "1260:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:7",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1575,
																"src": "1260:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1623,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "1277:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1627,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:7"
													}
												]
											}
										]
									},
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1093:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1603,
														"name": "Counter",
														"nameLocations": [
															"1093:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1576,
														"src": "1093:7:7"
													},
													"referencedDeclaration": 1576,
													"src": "1093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:7"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:7"
									},
									"scope": 1644,
									"src": "1074:229:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "1358:35:7",
										"statements": [
											{
												"expression": {
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1636,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "1368:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:7",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1575,
														"src": "1368:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:7"
											}
										]
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1324:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1632,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1631,
														"name": "Counter",
														"nameLocations": [
															"1324:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1576,
														"src": "1324:7:7"
													},
													"referencedDeclaration": 1576,
													"src": "1324:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:7"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:7"
									},
									"scope": 1644,
									"src": "1309:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1645,
							"src": "424:971:7",
							"usedErrors": []
						}
					],
					"src": "87:1309:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2720
						],
						"Strings": [
							1819
						]
					},
					"id": 1820,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1820,
							"sourceUnit": 2721,
							"src": "126:25:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1648,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1819,
							"linearizedBaseContracts": [
								1819
							],
							"name": "Strings",
							"nameLocation": "196:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1651,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1819,
									"src": "210:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1649,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1650,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1654,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1819,
									"src": "270:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1652,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1653,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1701,
										"nodeType": "Block",
										"src": "486:625:8",
										"statements": [
											{
												"id": 1700,
												"nodeType": "UncheckedBlock",
												"src": "496:609:8",
												"statements": [
													{
														"assignments": [
															1663
														],
														"declarations": [
															{
																"constant": false,
																"id": 1663,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1700,
																"src": "520:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1662,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1670,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1666,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1657,
																		"src": "548:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1664,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2720,
																		"src": "537:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2720_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:8",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2557,
																	"src": "537:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:8"
													},
													{
														"assignments": [
															1672
														],
														"declarations": [
															{
																"constant": false,
																"id": 1672,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1700,
																"src": "572:20:8",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1671,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1677,
														"initialValue": {
															"arguments": [
																{
																	"id": 1675,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1663,
																	"src": "606:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1673,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:8"
													},
													{
														"assignments": [
															1679
														],
														"declarations": [
															{
																"constant": false,
																"id": 1679,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1700,
																"src": "627:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1678,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1680,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:8",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:8"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:8"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1672,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1663,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1679,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:8",
																"valueSize": 1
															}
														],
														"id": 1681,
														"nodeType": "InlineAssembly",
														"src": "699:76:8"
													},
													{
														"body": {
															"id": 1696,
															"nodeType": "Block",
															"src": "801:267:8",
															"statements": [
																{
																	"expression": {
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:8",
																		"subExpression": {
																			"id": 1683,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1679,
																			"src": "819:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1685,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:8"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:8"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:8",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:8"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:8"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:8"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1651,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1679,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1657,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:8",
																			"valueSize": 1
																		}
																	],
																	"id": 1686,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:8"
																},
																{
																	"expression": {
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1687,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "1003:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1690,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1691,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "1036:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1695,
																	"nodeType": "IfStatement",
																	"src": "1032:21:8",
																	"trueBody": {
																		"id": 1694,
																		"nodeType": "Break",
																		"src": "1048:5:8"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1697,
														"nodeType": "WhileStatement",
														"src": "788:280:8"
													},
													{
														"expression": {
															"id": 1698,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "1088:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1661,
														"id": 1699,
														"nodeType": "Return",
														"src": "1081:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "433:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:8"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "471:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1659,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:8"
									},
									"scope": 1819,
									"src": "415:696:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "1290:100:8",
										"statements": [
											{
												"id": 1720,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1711,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1705,
																	"src": "1343:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1714,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "1362:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1712,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2720,
																				"src": "1350:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2720_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:8",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2680,
																			"src": "1350:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1710,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1722,
																	1798,
																	1818
																],
																"referencedDeclaration": 1798,
																"src": "1331:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1709,
														"id": 1719,
														"nodeType": "Return",
														"src": "1324:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1237:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:8"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1275:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1707,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:8"
									},
									"scope": 1819,
									"src": "1216:174:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "1603:347:8",
										"statements": [
											{
												"assignments": [
													1733
												],
												"declarations": [
													{
														"constant": false,
														"id": 1733,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1797,
														"src": "1613:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1732,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1742,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1737,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "1649:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1734,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:8"
											},
											{
												"expression": {
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1743,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "1670:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1745,
														"indexExpression": {
															"hexValue": "30",
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:8"
											},
											{
												"expression": {
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1749,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "1695:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1751,
														"indexExpression": {
															"hexValue": "31",
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1754,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:8"
											},
											{
												"body": {
													"id": 1783,
													"nodeType": "Block",
													"src": "1765:83:8",
													"statements": [
														{
															"expression": {
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1769,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1733,
																		"src": "1779:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1771,
																	"indexExpression": {
																		"id": 1770,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1756,
																		"src": "1786:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1772,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1651,
																		"src": "1791:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1776,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1773,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1725,
																			"src": "1800:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1778,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:8"
														},
														{
															"expression": {
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1779,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "1826:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1782,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1763,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "1753:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1784,
												"initializationExpression": {
													"assignments": [
														1756
													],
													"declarations": [
														{
															"constant": false,
															"id": 1756,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1784,
															"src": "1725:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1755,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1762,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1758,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "1741:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:8",
														"subExpression": {
															"id": 1766,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "1762:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1768,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:8"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1786,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "1865:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1794,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "1936:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1792,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1731,
												"id": 1796,
												"nodeType": "Return",
												"src": "1922:21:8"
											}
										]
									},
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "1534:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "1549:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:8"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "1588:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:8"
									},
									"scope": 1819,
									"src": "1513:437:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1817,
										"nodeType": "Block",
										"src": "2175:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1811,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1801,
																			"src": "2220:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1809,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1807,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1814,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1654,
															"src": "2228:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1806,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1722,
															1798,
															1818
														],
														"referencedDeclaration": 1798,
														"src": "2192:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1805,
												"id": 1816,
												"nodeType": "Return",
												"src": "2185:59:8"
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "2123:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:8"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "2160:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1803,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:8"
									},
									"scope": 1819,
									"src": "2102:149:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1820,
							"src": "188:2065:8",
							"usedErrors": []
						}
					],
					"src": "101:2153:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1843
						],
						"IERC165": [
							1855
						]
					},
					"id": 1844,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1821,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1822,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1844,
							"sourceUnit": 1856,
							"src": "124:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1824,
										"name": "IERC165",
										"nameLocations": [
											"754:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1855,
										"src": "754:7:9"
									},
									"id": 1825,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1823,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1843,
							"linearizedBaseContracts": [
								1843,
								1855
							],
							"name": "ERC165",
							"nameLocation": "744:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1854
									],
									"body": {
										"id": 1841,
										"nodeType": "Block",
										"src": "920:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1834,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "937:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1836,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1855,
																	"src": "957:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1855_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1855_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1835,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1855",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1840,
												"nodeType": "Return",
												"src": "930:47:9"
											}
										]
									},
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1830,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:9"
									},
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "856:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1827,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:9"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "914:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:9"
									},
									"scope": 1843,
									"src": "829:155:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1844,
							"src": "726:260:9",
							"usedErrors": []
						}
					],
					"src": "99:888:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1855
						]
					},
					"id": 1856,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1845,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1846,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1855,
							"linearizedBaseContracts": [
								1855
							],
							"name": "IERC165",
							"nameLocation": "415:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "801:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1848,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:10"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "844:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:10"
									},
									"scope": 1855,
									"src": "774:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1856,
							"src": "405:447:10",
							"usedErrors": []
						}
					],
					"src": "100:753:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2720
						]
					},
					"id": 2721,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1857,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1858,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2720,
							"linearizedBaseContracts": [
								2720
							],
							"name": "Math",
							"nameLocation": "210:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1862,
									"members": [
										{
											"id": 1859,
											"name": "Down",
											"nameLocation": "245:4:11",
											"nodeType": "EnumValue",
											"src": "245:4:11"
										},
										{
											"id": 1860,
											"name": "Up",
											"nameLocation": "287:2:11",
											"nodeType": "EnumValue",
											"src": "287:2:11"
										},
										{
											"id": 1861,
											"name": "Zero",
											"nameLocation": "318:4:11",
											"nodeType": "EnumValue",
											"src": "318:4:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:11",
									"nodeType": "EnumDefinition",
									"src": "221:122:11"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "480:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1872,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "497:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1873,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "501:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1876,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "509:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:11",
													"trueExpression": {
														"id": 1875,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "505:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1871,
												"id": 1878,
												"nodeType": "Return",
												"src": "490:20:11"
											}
										]
									},
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "426:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "437:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:11"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "471:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:11"
									},
									"scope": 2720,
									"src": "413:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "655:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1890,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "672:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1891,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "676:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1894,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1885,
														"src": "684:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:11",
													"trueExpression": {
														"id": 1893,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "680:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1889,
												"id": 1896,
												"nodeType": "Return",
												"src": "665:20:11"
											}
										]
									},
									"documentation": {
										"id": 1881,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "646:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:11"
									},
									"scope": 2720,
									"src": "588:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "876:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1908,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1909,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1903,
																	"src": "935:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1911,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1912,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1901,
																		"src": "941:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1913,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1903,
																		"src": "945:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1915,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1907,
												"id": 1919,
												"nodeType": "Return",
												"src": "923:28:11"
											}
										]
									},
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "822:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "833:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:11"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "867:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:11"
									},
									"scope": 2720,
									"src": "805:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "1228:123:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1931,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "1316:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1935,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1924,
																			"src": "1330:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1938,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1939,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1926,
																"src": "1339:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1930,
												"id": 1944,
												"nodeType": "Return",
												"src": "1309:35:11"
											}
										]
									},
									"documentation": {
										"id": 1922,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "1174:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "1185:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:11"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "1219:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:11"
									},
									"scope": 2720,
									"src": "1157:194:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "1795:3797:11",
										"statements": [
											{
												"id": 2066,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:11",
												"statements": [
													{
														"assignments": [
															1959
														],
														"declarations": [
															{
																"constant": false,
																"id": 1959,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2066,
																"src": "2126:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1958,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1960,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:11"
													},
													{
														"assignments": [
															1962
														],
														"declarations": [
															{
																"constant": false,
																"id": 1962,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2066,
																"src": "2198:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1961,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1963,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:11"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:11"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:11"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:11"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1959,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1959,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1959,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1962,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1949,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1949,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1951,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1951,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:11",
																"valueSize": 1
															}
														],
														"id": 1964,
														"nodeType": "InlineAssembly",
														"src": "2269:166:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1965,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "2516:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1973,
														"nodeType": "IfStatement",
														"src": "2512:75:11",
														"trueBody": {
															"id": 1972,
															"nodeType": "Block",
															"src": "2528:59:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1968,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1959,
																			"src": "2553:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1969,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "2561:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1957,
																	"id": 1971,
																	"nodeType": "Return",
																	"src": "2546:26:11"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1975,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "2697:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1976,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1962,
																		"src": "2711:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1974,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1979,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:11"
													},
													{
														"assignments": [
															1981
														],
														"declarations": [
															{
																"constant": false,
																"id": 1981,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2066,
																"src": "2973:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1980,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1982,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:11",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:11"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:11"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:11"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:11"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1953,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1959,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1959,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1959,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1962,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1962,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1981,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1981,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1981,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1949,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1951,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:11",
																"valueSize": 1
															}
														],
														"id": 1983,
														"nodeType": "InlineAssembly",
														"src": "3004:300:11"
													},
													{
														"assignments": [
															1985
														],
														"declarations": [
															{
																"constant": false,
																"id": 1985,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2066,
																"src": "3611:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1984,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1993,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1986,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1953,
																"src": "3626:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:11",
																			"subExpression": {
																				"id": 1987,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "3642:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1991,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:11",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:11"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:11"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:11"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1953,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1953,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1959,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1959,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1985,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1985,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1985,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1985,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1985,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:11",
																"valueSize": 1
															}
														],
														"id": 1994,
														"nodeType": "InlineAssembly",
														"src": "3672:371:11"
													},
													{
														"expression": {
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1995,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "4109:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1996,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1962,
																	"src": "4118:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1997,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "4126:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2000,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:11"
													},
													{
														"assignments": [
															2002
														],
														"declarations": [
															{
																"constant": false,
																"id": 2002,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2066,
																"src": "4448:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2001,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2009,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2004,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "4471:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2006,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:11"
													},
													{
														"expression": {
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2010,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "4704:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2012,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "4719:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2013,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "4733:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2017,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:11"
													},
													{
														"expression": {
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2018,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "4773:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2020,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "4788:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2021,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "4802:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2025,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:11"
													},
													{
														"expression": {
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2026,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "4843:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2028,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "4858:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2029,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "4872:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2033,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:11"
													},
													{
														"expression": {
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2034,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "4913:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2036,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "4928:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2037,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "4942:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2041,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:11"
													},
													{
														"expression": {
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2042,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "4983:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2044,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "4998:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2045,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "5012:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2049,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:11"
													},
													{
														"expression": {
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2050,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2002,
																"src": "5054:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2052,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "5069:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2053,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "5083:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2057,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:11"
													},
													{
														"expression": {
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2058,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1956,
																"src": "5524:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2059,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "5533:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2060,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "5541:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2063,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:11"
													},
													{
														"expression": {
															"id": 2064,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1956,
															"src": "5569:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1957,
														"id": 2065,
														"nodeType": "Return",
														"src": "5562:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1692:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1711:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1730:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:11"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1779:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:11"
									},
									"scope": 2720,
									"src": "1667:3925:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2111,
										"nodeType": "Block",
										"src": "5872:189:11",
										"statements": [
											{
												"assignments": [
													2084
												],
												"declarations": [
													{
														"constant": false,
														"id": 2084,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2111,
														"src": "5882:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2083,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2090,
												"initialValue": {
													"arguments": [
														{
															"id": 2086,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "5906:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2087,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "5909:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2088,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2075,
															"src": "5912:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2085,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2068,
															2112
														],
														"referencedDeclaration": 2068,
														"src": "5899:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1862",
															"typeString": "enum Math.Rounding"
														},
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2091,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "5938:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1862",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2092,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "5950:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1862_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:11",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1860,
															"src": "5950:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1862",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2096,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "5972:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2097,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2073,
																	"src": "5975:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2098,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2075,
																	"src": "5978:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2095,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2108,
												"nodeType": "IfStatement",
												"src": "5934:98:11",
												"trueBody": {
													"id": 2107,
													"nodeType": "Block",
													"src": "5996:36:11",
													"statements": [
														{
															"expression": {
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2103,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2084,
																	"src": "6010:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2106,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2109,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2084,
													"src": "6048:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2082,
												"id": 2110,
												"nodeType": "Return",
												"src": "6041:13:11"
											}
										]
									},
									"documentation": {
										"id": 2069,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "5749:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "5768:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "5787:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "5816:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1862",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2077,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2076,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1862,
														"src": "5816:8:11"
													},
													"referencedDeclaration": 1862,
													"src": "5816:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1862",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:11"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "5863:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:11"
									},
									"scope": 2720,
									"src": "5724:337:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2223,
										"nodeType": "Block",
										"src": "6337:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2120,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2115,
														"src": "6351:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2126,
												"nodeType": "IfStatement",
												"src": "6347:45:11",
												"trueBody": {
													"id": 2125,
													"nodeType": "Block",
													"src": "6359:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2119,
															"id": 2124,
															"nodeType": "Return",
															"src": "6373:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2128
												],
												"declarations": [
													{
														"constant": false,
														"id": 2128,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2223,
														"src": "7071:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2137,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2131,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "7099:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2130,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2392,
																			2428
																		],
																		"referencedDeclaration": 2392,
																		"src": "7094:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2135,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:11"
											},
											{
												"id": 2222,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:11",
												"statements": [
													{
														"expression": {
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2138,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "7532:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2139,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2128,
																				"src": "7542:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2140,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2115,
																					"src": "7551:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2141,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2128,
																					"src": "7555:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2144,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2148,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:11"
													},
													{
														"expression": {
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2149,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "7581:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2150,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2128,
																				"src": "7591:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2151,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2115,
																					"src": "7600:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2152,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2128,
																					"src": "7604:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2155,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2159,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:11"
													},
													{
														"expression": {
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2160,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "7630:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2161,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2128,
																				"src": "7640:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2162,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2115,
																					"src": "7649:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2163,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2128,
																					"src": "7653:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2166,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2170,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:11"
													},
													{
														"expression": {
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2171,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "7679:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2172,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2128,
																				"src": "7689:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2173,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2115,
																					"src": "7698:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2174,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2128,
																					"src": "7702:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2177,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2181,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:11"
													},
													{
														"expression": {
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2182,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "7728:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2183,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2128,
																				"src": "7738:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2184,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2115,
																					"src": "7747:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2185,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2128,
																					"src": "7751:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2188,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2192,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:11"
													},
													{
														"expression": {
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2193,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "7777:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2194,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2128,
																				"src": "7787:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2195,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2115,
																					"src": "7796:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2196,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2128,
																					"src": "7800:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2199,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2203,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:11"
													},
													{
														"expression": {
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2204,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "7826:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2205,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2128,
																				"src": "7836:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2206,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2115,
																					"src": "7845:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2207,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2128,
																					"src": "7849:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2210,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2214,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2216,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "7886:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2217,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "7894:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2218,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2128,
																		"src": "7898:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2215,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "7882:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2119,
														"id": 2221,
														"nodeType": "Return",
														"src": "7875:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "6294:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:11"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "6328:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:11"
									},
									"scope": 2720,
									"src": "6280:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2259,
										"nodeType": "Block",
										"src": "8098:161:11",
										"statements": [
											{
												"id": 2258,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:11",
												"statements": [
													{
														"assignments": [
															2236
														],
														"declarations": [
															{
																"constant": false,
																"id": 2236,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2258,
																"src": "8132:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2235,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2240,
														"initialValue": {
															"arguments": [
																{
																	"id": 2238,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2227,
																	"src": "8154:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2237,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2224,
																	2260
																],
																"referencedDeclaration": 2224,
																"src": "8149:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2241,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2236,
																"src": "8177:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1862",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2242,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2230,
																					"src": "8187:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1862",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2243,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1862,
																						"src": "8199:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1862_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2244,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1860,
																					"src": "8199:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1862",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2246,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2236,
																						"src": "8214:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2247,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2236,
																						"src": "8223:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2249,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2227,
																					"src": "8232:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2234,
														"id": 2257,
														"nodeType": "Return",
														"src": "8170:72:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "8036:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "8047:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1862",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2229,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2228,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1862,
														"src": "8047:8:11"
													},
													"referencedDeclaration": 1862,
													"src": "8047:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1862",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:11"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "8089:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:11"
									},
									"scope": 2720,
									"src": "8022:237:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2391,
										"nodeType": "Block",
										"src": "8444:922:11",
										"statements": [
											{
												"assignments": [
													2269
												],
												"declarations": [
													{
														"constant": false,
														"id": 2269,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2391,
														"src": "8454:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2271,
												"initialValue": {
													"hexValue": "30",
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:11"
											},
											{
												"id": 2388,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "8510:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2286,
														"nodeType": "IfStatement",
														"src": "8506:99:11",
														"trueBody": {
															"id": 2285,
															"nodeType": "Block",
															"src": "8528:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2277,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "8546:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2280,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:11"
																},
																{
																	"expression": {
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2281,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "8577:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2284,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2287,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "8622:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2301,
														"nodeType": "IfStatement",
														"src": "8618:96:11",
														"trueBody": {
															"id": 2300,
															"nodeType": "Block",
															"src": "8639:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2292,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "8657:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2295,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:11"
																},
																{
																	"expression": {
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2296,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "8687:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2299,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2302,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "8731:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2316,
														"nodeType": "IfStatement",
														"src": "8727:96:11",
														"trueBody": {
															"id": 2315,
															"nodeType": "Block",
															"src": "8748:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2307,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "8766:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2310,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:11"
																},
																{
																	"expression": {
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2311,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "8796:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2314,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2317,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "8840:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2331,
														"nodeType": "IfStatement",
														"src": "8836:96:11",
														"trueBody": {
															"id": 2330,
															"nodeType": "Block",
															"src": "8857:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2322,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "8875:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2325,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:11"
																},
																{
																	"expression": {
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2326,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "8905:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2329,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2332,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "8949:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2346,
														"nodeType": "IfStatement",
														"src": "8945:93:11",
														"trueBody": {
															"id": 2345,
															"nodeType": "Block",
															"src": "8965:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2337,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "8983:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2340,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:11"
																},
																{
																	"expression": {
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2341,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "9012:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2344,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2347,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "9055:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2361,
														"nodeType": "IfStatement",
														"src": "9051:93:11",
														"trueBody": {
															"id": 2360,
															"nodeType": "Block",
															"src": "9071:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2352,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "9089:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2355,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:11"
																},
																{
																	"expression": {
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2356,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "9118:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2359,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2362,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "9161:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2376,
														"nodeType": "IfStatement",
														"src": "9157:93:11",
														"trueBody": {
															"id": 2375,
															"nodeType": "Block",
															"src": "9177:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2367,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2263,
																			"src": "9195:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2370,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:11"
																},
																{
																	"expression": {
																		"id": 2373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2371,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "9224:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2374,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2263,
																	"src": "9267:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2387,
														"nodeType": "IfStatement",
														"src": "9263:64:11",
														"trueBody": {
															"id": 2386,
															"nodeType": "Block",
															"src": "9283:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2382,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2269,
																			"src": "9301:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2385,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2389,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2269,
													"src": "9353:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2267,
												"id": 2390,
												"nodeType": "Return",
												"src": "9346:13:11"
											}
										]
									},
									"documentation": {
										"id": 2261,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:11",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "8397:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:11"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "8435:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:11"
									},
									"scope": 2720,
									"src": "8383:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2427,
										"nodeType": "Block",
										"src": "9599:165:11",
										"statements": [
											{
												"id": 2426,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:11",
												"statements": [
													{
														"assignments": [
															2404
														],
														"declarations": [
															{
																"constant": false,
																"id": 2404,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2426,
																"src": "9633:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2403,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2408,
														"initialValue": {
															"arguments": [
																{
																	"id": 2406,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2395,
																	"src": "9655:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2405,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2392,
																	2428
																],
																"referencedDeclaration": 2392,
																"src": "9650:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2409,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2404,
																"src": "9682:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1862",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2410,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2398,
																					"src": "9692:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1862",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2411,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1862,
																						"src": "9704:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1862_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2412,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1860,
																					"src": "9704:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1862",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2414,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2415,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2404,
																						"src": "9724:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2417,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2395,
																					"src": "9733:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2423,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2402,
														"id": 2425,
														"nodeType": "Return",
														"src": "9675:72:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2393,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2428,
												"src": "9533:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2428,
												"src": "9548:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1862",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2397,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2396,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1862,
														"src": "9548:8:11"
													},
													"referencedDeclaration": 1862,
													"src": "9548:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1862",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:11"
									},
									"returnParameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2428,
												"src": "9590:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:11"
									},
									"scope": 2720,
									"src": "9519:245:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2556,
										"nodeType": "Block",
										"src": "9951:828:11",
										"statements": [
											{
												"assignments": [
													2437
												],
												"declarations": [
													{
														"constant": false,
														"id": 2437,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2556,
														"src": "9961:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2436,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2439,
												"initialValue": {
													"hexValue": "30",
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:11"
											},
											{
												"id": 2553,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2440,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "10017:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2456,
														"nodeType": "IfStatement",
														"src": "10013:99:11",
														"trueBody": {
															"id": 2455,
															"nodeType": "Block",
															"src": "10034:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2431,
																			"src": "10052:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2450,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:11"
																},
																{
																	"expression": {
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2451,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "10085:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2454,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2457,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "10129:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2473,
														"nodeType": "IfStatement",
														"src": "10125:99:11",
														"trueBody": {
															"id": 2472,
															"nodeType": "Block",
															"src": "10146:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2431,
																			"src": "10164:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2467,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:11"
																},
																{
																	"expression": {
																		"id": 2470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2468,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "10197:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2471,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2474,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "10241:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2490,
														"nodeType": "IfStatement",
														"src": "10237:99:11",
														"trueBody": {
															"id": 2489,
															"nodeType": "Block",
															"src": "10258:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2479,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2431,
																			"src": "10276:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2484,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:11"
																},
																{
																	"expression": {
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2485,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "10309:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2491,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "10353:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2507,
														"nodeType": "IfStatement",
														"src": "10349:96:11",
														"trueBody": {
															"id": 2506,
															"nodeType": "Block",
															"src": "10369:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2496,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2431,
																			"src": "10387:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2501,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:11"
																},
																{
																	"expression": {
																		"id": 2504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2502,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "10419:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2505,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2508,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "10462:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2524,
														"nodeType": "IfStatement",
														"src": "10458:96:11",
														"trueBody": {
															"id": 2523,
															"nodeType": "Block",
															"src": "10478:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2513,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2431,
																			"src": "10496:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2518,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:11"
																},
																{
																	"expression": {
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2519,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "10528:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2522,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2525,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "10571:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2541,
														"nodeType": "IfStatement",
														"src": "10567:96:11",
														"trueBody": {
															"id": 2540,
															"nodeType": "Block",
															"src": "10587:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2530,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2431,
																			"src": "10605:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2532,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2535,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:11"
																},
																{
																	"expression": {
																		"id": 2538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2536,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "10637:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2539,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2542,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "10680:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2552,
														"nodeType": "IfStatement",
														"src": "10676:64:11",
														"trueBody": {
															"id": 2551,
															"nodeType": "Block",
															"src": "10696:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2547,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "10714:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2550,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2554,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2437,
													"src": "10766:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2435,
												"id": 2555,
												"nodeType": "Return",
												"src": "10759:13:11"
											}
										]
									},
									"documentation": {
										"id": 2429,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:11",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "9904:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:11"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "9942:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:11"
									},
									"scope": 2720,
									"src": "9889:890:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2592,
										"nodeType": "Block",
										"src": "11014:165:11",
										"statements": [
											{
												"id": 2591,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:11",
												"statements": [
													{
														"assignments": [
															2569
														],
														"declarations": [
															{
																"constant": false,
																"id": 2569,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2591,
																"src": "11048:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2568,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2573,
														"initialValue": {
															"arguments": [
																{
																	"id": 2571,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2560,
																	"src": "11071:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2570,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2557,
																	2593
																],
																"referencedDeclaration": 2557,
																"src": "11065:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2574,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "11098:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1862",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2575,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2563,
																					"src": "11108:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1862",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2576,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1862,
																						"src": "11120:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1862_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2577,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1860,
																					"src": "11120:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1862",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2581,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2579,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2580,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2569,
																						"src": "11139:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2582,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2560,
																					"src": "11148:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2588,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2567,
														"id": 2590,
														"nodeType": "Return",
														"src": "11091:71:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2558,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "10948:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "10963:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1862",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2562,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2561,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1862,
														"src": "10963:8:11"
													},
													"referencedDeclaration": 1862,
													"src": "10963:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1862",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:11"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "11005:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:11"
									},
									"scope": 2720,
									"src": "10933:246:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2679,
										"nodeType": "Block",
										"src": "11493:600:11",
										"statements": [
											{
												"assignments": [
													2602
												],
												"declarations": [
													{
														"constant": false,
														"id": 2602,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2679,
														"src": "11503:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2601,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2604,
												"initialValue": {
													"hexValue": "30",
													"id": 2603,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:11"
											},
											{
												"id": 2676,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2605,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "11559:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2619,
														"nodeType": "IfStatement",
														"src": "11555:98:11",
														"trueBody": {
															"id": 2618,
															"nodeType": "Block",
															"src": "11577:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2610,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11595:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2613,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:11"
																},
																{
																	"expression": {
																		"id": 2616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2614,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "11626:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2617,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2620,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "11670:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2634,
														"nodeType": "IfStatement",
														"src": "11666:95:11",
														"trueBody": {
															"id": 2633,
															"nodeType": "Block",
															"src": "11687:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2625,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11705:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2628,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:11"
																},
																{
																	"expression": {
																		"id": 2631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2629,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "11735:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2632,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2635,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "11778:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2649,
														"nodeType": "IfStatement",
														"src": "11774:95:11",
														"trueBody": {
															"id": 2648,
															"nodeType": "Block",
															"src": "11795:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2640,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11813:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2643,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:11"
																},
																{
																	"expression": {
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2644,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "11843:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2647,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2650,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "11886:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2664,
														"nodeType": "IfStatement",
														"src": "11882:95:11",
														"trueBody": {
															"id": 2663,
															"nodeType": "Block",
															"src": "11903:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2655,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2596,
																			"src": "11921:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2658,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:11"
																},
																{
																	"expression": {
																		"id": 2661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2659,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "11951:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2662,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2596,
																	"src": "11994:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2675,
														"nodeType": "IfStatement",
														"src": "11990:64:11",
														"trueBody": {
															"id": 2674,
															"nodeType": "Block",
															"src": "12010:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2670,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "12028:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2673,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2677,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2602,
													"src": "12080:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2600,
												"id": 2678,
												"nodeType": "Return",
												"src": "12073:13:11"
											}
										]
									},
									"documentation": {
										"id": 2594,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:11",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "11446:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:11"
									},
									"returnParameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "11484:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:11"
									},
									"scope": 2720,
									"src": "11430:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2718,
										"nodeType": "Block",
										"src": "12329:173:11",
										"statements": [
											{
												"id": 2717,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:11",
												"statements": [
													{
														"assignments": [
															2692
														],
														"declarations": [
															{
																"constant": false,
																"id": 2692,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2717,
																"src": "12363:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2691,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2696,
														"initialValue": {
															"arguments": [
																{
																	"id": 2694,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2683,
																	"src": "12387:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2693,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2680,
																	2719
																],
																"referencedDeclaration": 2680,
																"src": "12380:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2697,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2692,
																"src": "12414:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1862",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2698,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2686,
																					"src": "12424:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1862",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2699,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1862,
																						"src": "12436:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1862_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2700,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1860,
																					"src": "12436:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1862",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2707,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2702,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2705,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2703,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2692,
																									"src": "12457:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 2704,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2706,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2708,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2683,
																					"src": "12471:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2714,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2690,
														"id": 2716,
														"nodeType": "Return",
														"src": "12407:78:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2681,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "12263:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "12278:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1862",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2685,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2684,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1862,
														"src": "12278:8:11"
													},
													"referencedDeclaration": 1862,
													"src": "12278:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1862",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:11"
									},
									"returnParameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2719,
												"src": "12320:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:11"
									},
									"scope": 2720,
									"src": "12247:255:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2721,
							"src": "202:12302:11",
							"usedErrors": []
						}
					],
					"src": "103:12402:11"
				},
				"id": 11
			},
			"contracts/SoulBoundToken.sol": {
				"ast": {
					"absolutePath": "contracts/SoulBoundToken.sol",
					"exportedSymbols": {
						"Address": [
							1548
						],
						"Context": [
							1570
						],
						"Counters": [
							1644
						],
						"ERC165": [
							1843
						],
						"ERC721": [
							1057
						],
						"IERC165": [
							1855
						],
						"IERC721": [
							1173
						],
						"IERC721Metadata": [
							1218
						],
						"IERC721Receiver": [
							1191
						],
						"ISoulBoundToken": [
							3068
						],
						"Math": [
							2720
						],
						"Ownable": [
							112
						],
						"SoulBoundToken": [
							3037
						],
						"Strings": [
							1819
						]
					},
					"id": 3038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2722,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2723,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 1058,
							"src": "58:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 2724,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 1645,
							"src": "116:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2725,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 113,
							"src": "169:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/ISoulBoundToken.sol",
							"file": "./interfaces/ISoulBoundToken.sol",
							"id": 2726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 3069,
							"src": "222:42:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2727,
										"name": "ERC721",
										"nameLocations": [
											"293:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1057,
										"src": "293:6:12"
									},
									"id": 2728,
									"nodeType": "InheritanceSpecifier",
									"src": "293:6:12"
								},
								{
									"baseName": {
										"id": 2729,
										"name": "Ownable",
										"nameLocations": [
											"301:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "301:7:12"
									},
									"id": 2730,
									"nodeType": "InheritanceSpecifier",
									"src": "301:7:12"
								},
								{
									"baseName": {
										"id": 2731,
										"name": "ISoulBoundToken",
										"nameLocations": [
											"310:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3068,
										"src": "310:15:12"
									},
									"id": 2732,
									"nodeType": "InheritanceSpecifier",
									"src": "310:15:12"
								}
							],
							"canonicalName": "SoulBoundToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3037,
							"linearizedBaseContracts": [
								3037,
								3068,
								112,
								1057,
								1218,
								1173,
								1843,
								1855,
								1570
							],
							"name": "SoulBoundToken",
							"nameLocation": "275:14:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2736,
									"libraryName": {
										"id": 2733,
										"name": "Counters",
										"nameLocations": [
											"338:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1644,
										"src": "338:8:12"
									},
									"nodeType": "UsingForDirective",
									"src": "332:36:12",
									"typeName": {
										"id": 2735,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2734,
											"name": "Counters.Counter",
											"nameLocations": [
												"351:8:12",
												"360:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1576,
											"src": "351:16:12"
										},
										"referencedDeclaration": 1576,
										"src": "351:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 2739,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "399:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "374:40:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1576_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2738,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2737,
											"name": "Counters.Counter",
											"nameLocations": [
												"374:8:12",
												"383:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1576,
											"src": "374:16:12"
										},
										"referencedDeclaration": 1576,
										"src": "374:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1576_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2743,
									"mutability": "mutable",
									"name": "_accessTier",
									"nameLocation": "447:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "421:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
										"typeString": "mapping(uint256 => uint8)"
									},
									"typeName": {
										"id": 2742,
										"keyType": {
											"id": 2740,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "429:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "421:25:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
											"typeString": "mapping(uint256 => uint8)"
										},
										"valueType": {
											"id": 2741,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "440:5:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2747,
									"mutability": "mutable",
									"name": "_isActive",
									"nameLocation": "489:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "464:34:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 2746,
										"keyType": {
											"id": 2744,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "472:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "464:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueType": {
											"id": 2745,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "483:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2751,
									"mutability": "mutable",
									"name": "_hashedIdentity",
									"nameLocation": "532:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "504:43:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
										"typeString": "mapping(uint256 => bytes32)"
									},
									"typeName": {
										"id": 2750,
										"keyType": {
											"id": 2748,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "512:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "504:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
											"typeString": "mapping(uint256 => bytes32)"
										},
										"valueType": {
											"id": 2749,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "523:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2755,
									"mutability": "mutable",
									"name": "_ownerToTokenId",
									"nameLocation": "581:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 3037,
									"src": "553:43:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2754,
										"keyType": {
											"id": 2752,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "561:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "553:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2753,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "572:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2771,
										"nodeType": "Block",
										"src": "635:65:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2760,
																	"name": "tier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2757,
																	"src": "653:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "661:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "653:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2763,
																	"name": "tier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2757,
																	"src": "666:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 2764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "674:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "666:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "653:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4954",
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "677:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c27fe22e5587a06b531fdeee57b4fe954a8237f51d1940d181db858ee4066fa3",
																"typeString": "literal_string \"IT\""
															},
															"value": "IT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c27fe22e5587a06b531fdeee57b4fe954a8237f51d1940d181db858ee4066fa3",
																"typeString": "literal_string \"IT\""
															}
														],
														"id": 2759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "645:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "645:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2769,
												"nodeType": "ExpressionStatement",
												"src": "645:37:12"
											},
											{
												"id": 2770,
												"nodeType": "PlaceholderStatement",
												"src": "692:1:12"
											}
										]
									},
									"id": 2772,
									"name": "validLevel",
									"nameLocation": "612:10:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "tier",
												"nameLocation": "629:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "623:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2756,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "623:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:12:12"
									},
									"src": "603:97:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2784,
										"nodeType": "Block",
										"src": "752:44:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2779,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2739,
															"src": "762:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1576_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2781,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "778:9:12",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1602,
														"src": "762:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1576_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1576_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "762:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2783,
												"nodeType": "ExpressionStatement",
												"src": "762:27:12"
											}
										]
									},
									"id": 2785,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "536f756c426f756e64546f6b656e",
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "727:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0a5d8db738e3f49a9cd59c5218eed87cf1a9659e1c5ad335b8b9a324001ab505",
														"typeString": "literal_string \"SoulBoundToken\""
													},
													"value": "SoulBoundToken"
												},
												{
													"hexValue": "534254",
													"id": 2776,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "745:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_845674d68138afa9bae1134317c863a5111678a62593e83592279826447aef8e",
														"typeString": "literal_string \"SBT\""
													},
													"value": "SBT"
												}
											],
											"id": 2777,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2774,
												"name": "ERC721",
												"nameLocations": [
													"720:6:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1057,
												"src": "720:6:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "720:31:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:2:12"
									},
									"returnParameters": {
										"id": 2778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:0:12"
									},
									"scope": 3037,
									"src": "706:90:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2848,
										"nodeType": "Block",
										"src": "924:334:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2800,
																	"name": "_ownerToTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2755,
																	"src": "942:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2802,
																"indexExpression": {
																	"id": 2801,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "958:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "942:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "965:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "942:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53544145",
															"id": 2805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "968:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab6e7be7cc44241c381ed5a7ee502c131026b3265e0e6310f1c7de576b41e462",
																"typeString": "literal_string \"STAE\""
															},
															"value": "STAE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab6e7be7cc44241c381ed5a7ee502c131026b3265e0e6310f1c7de576b41e462",
																"typeString": "literal_string \"STAE\""
															}
														],
														"id": 2799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "934:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "934:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2807,
												"nodeType": "ExpressionStatement",
												"src": "934:41:12"
											},
											{
												"assignments": [
													2809
												],
												"declarations": [
													{
														"constant": false,
														"id": 2809,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "993:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2848,
														"src": "985:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2808,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "985:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2813,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2810,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2739,
															"src": "1003:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1576_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2811,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1019:7:12",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1588,
														"src": "1003:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1576_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1576_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1003:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "985:43:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2814,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2739,
															"src": "1038:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1576_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2816,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1054:9:12",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1602,
														"src": "1038:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1576_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1576_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1038:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2818,
												"nodeType": "ExpressionStatement",
												"src": "1038:27:12"
											},
											{
												"expression": {
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2819,
															"name": "_isActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "1075:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 2821,
														"indexExpression": {
															"id": 2820,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2809,
															"src": "1085:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1075:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1096:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1075:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2824,
												"nodeType": "ExpressionStatement",
												"src": "1075:25:12"
											},
											{
												"expression": {
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2825,
															"name": "_accessTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2743,
															"src": "1110:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
																"typeString": "mapping(uint256 => uint8)"
															}
														},
														"id": 2827,
														"indexExpression": {
															"id": 2826,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2809,
															"src": "1122:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1110:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2828,
														"name": "tier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "1133:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1110:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2830,
												"nodeType": "ExpressionStatement",
												"src": "1110:27:12"
											},
											{
												"expression": {
													"id": 2835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2831,
															"name": "_hashedIdentity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2751,
															"src": "1147:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																"typeString": "mapping(uint256 => bytes32)"
															}
														},
														"id": 2833,
														"indexExpression": {
															"id": 2832,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2809,
															"src": "1163:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1147:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2834,
														"name": "hashed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2791,
														"src": "1174:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1147:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2836,
												"nodeType": "ExpressionStatement",
												"src": "1147:33:12"
											},
											{
												"expression": {
													"id": 2841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2837,
															"name": "_ownerToTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2755,
															"src": "1190:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2839,
														"indexExpression": {
															"id": 2838,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2787,
															"src": "1206:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1190:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2840,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2809,
														"src": "1212:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1190:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2842,
												"nodeType": "ExpressionStatement",
												"src": "1190:29:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2844,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2787,
															"src": "1239:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2845,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2809,
															"src": "1243:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2843,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															607,
															636
														],
														"referencedDeclaration": 607,
														"src": "1229:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1229:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2847,
												"nodeType": "ExpressionStatement",
												"src": "1229:22:12"
											}
										]
									},
									"functionSelector": "c12290d2",
									"id": 2849,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2794,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2793,
												"name": "onlyOwner",
												"nameLocations": [
													"897:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "897:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "897:9:12"
										},
										{
											"arguments": [
												{
													"id": 2796,
													"name": "tier",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2789,
													"src": "918:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 2797,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2795,
												"name": "validLevel",
												"nameLocations": [
													"907:10:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2772,
												"src": "907:10:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "907:16:12"
										}
									],
									"name": "safeMint",
									"nameLocation": "811:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "837:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "829:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "tier",
												"nameLocation": "855:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "849:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2788,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "849:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "hashed",
												"nameLocation": "877:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "869:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2790,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:70:12"
									},
									"returnParameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:0:12"
									},
									"scope": 3037,
									"src": "802:456:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2868,
										"nodeType": "Block",
										"src": "1304:120:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2856,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2851,
																		"src": "1343:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2855,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "1335:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1335:16:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2858,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1355:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1359:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1355:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1335:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f",
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1379:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1544e7eb480cc28803f7ff893bd999e62fb759c7d172fc27414594c5d9c925f2",
																"typeString": "literal_string \"NO\""
															},
															"value": "NO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1544e7eb480cc28803f7ff893bd999e62fb759c7d172fc27414594c5d9c925f2",
																"typeString": "literal_string \"NO\""
															}
														],
														"id": 2854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1314:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1314:79:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2863,
												"nodeType": "ExpressionStatement",
												"src": "1314:79:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2865,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2851,
															"src": "1409:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2864,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2913
														],
														"referencedDeclaration": 2913,
														"src": "1403:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2867,
												"nodeType": "ExpressionStatement",
												"src": "1403:14:12"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 2869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1273:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1286:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2869,
												"src": "1278:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:17:12"
									},
									"returnParameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:12"
									},
									"scope": 3037,
									"src": "1264:160:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1043
									],
									"body": {
										"id": 2898,
										"nodeType": "Block",
										"src": "1565:107:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2882,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2871,
																	"src": "1596:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1612:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1604:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2883,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1604:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1604:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1596:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2888,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2873,
																	"src": "1618:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1632:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1624:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2889,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1624:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1624:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1618:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1596:38:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5342544354",
															"id": 2895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1648:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4e77d6751f48f9ae6ec19bfc6775dd68a9f905a6fc43cc23aca4741c7c6930c",
																"typeString": "literal_string \"SBTCT\""
															},
															"value": "SBTCT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4e77d6751f48f9ae6ec19bfc6775dd68a9f905a6fc43cc23aca4741c7c6930c",
																"typeString": "literal_string \"SBTCT\""
															}
														],
														"id": 2881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1575:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1575:90:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2897,
												"nodeType": "ExpressionStatement",
												"src": "1575:90:12"
											}
										]
									},
									"id": 2899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1439:20:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2879,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1556:8:12"
									},
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1477:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "1469:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1499:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "1491:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "1511:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "1528:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:82:12"
									},
									"returnParameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:0:12"
									},
									"scope": 3037,
									"src": "1430:242:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										780
									],
									"body": {
										"id": 2912,
										"nodeType": "Block",
										"src": "1736:37:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2901,
															"src": "1758:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2906,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1746:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SoulBoundToken_$3037_$",
																"typeString": "type(contract super SoulBoundToken)"
															}
														},
														"id": 2908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1752:5:12",
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 780,
														"src": "1746:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2911,
												"nodeType": "ExpressionStatement",
												"src": "1746:20:12"
											}
										]
									},
									"id": 2913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "1687:5:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2904,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2903,
												"name": "ERC721",
												"nameLocations": [
													"1728:6:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1057,
												"src": "1728:6:12"
											}
										],
										"src": "1719:16:12"
									},
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1701:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "1693:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1692:17:12"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1736:0:12"
									},
									"scope": 3037,
									"src": "1678:95:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2931,
										"nodeType": "Block",
										"src": "1880:39:12",
										"statements": [
											{
												"expression": {
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2925,
															"name": "_accessTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2743,
															"src": "1890:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
																"typeString": "mapping(uint256 => uint8)"
															}
														},
														"id": 2927,
														"indexExpression": {
															"id": 2926,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2915,
															"src": "1902:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1890:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2928,
														"name": "tier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2917,
														"src": "1908:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1890:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2930,
												"nodeType": "ExpressionStatement",
												"src": "1890:22:12"
											}
										]
									},
									"functionSelector": "bdca14cf",
									"id": 2932,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2920,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2919,
												"name": "onlyOwner",
												"nameLocations": [
													"1853:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1853:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1853:9:12"
										},
										{
											"arguments": [
												{
													"id": 2922,
													"name": "tier",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2917,
													"src": "1874:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 2923,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2921,
												"name": "validLevel",
												"nameLocations": [
													"1863:10:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2772,
												"src": "1863:10:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1863:16:12"
										}
									],
									"name": "modifyLevel",
									"nameLocation": "1788:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1817:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "1809:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "tier",
												"nameLocation": "1835:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "1829:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2916,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1829:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1799:46:12"
									},
									"returnParameters": {
										"id": 2924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1880:0:12"
									},
									"scope": 3037,
									"src": "1779:140:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2945,
										"nodeType": "Block",
										"src": "1974:38:12",
										"statements": [
											{
												"expression": {
													"id": 2943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2939,
															"name": "_isActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "1984:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 2941,
														"indexExpression": {
															"id": 2940,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2934,
															"src": "1994:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1984:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2000:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1984:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2944,
												"nodeType": "ExpressionStatement",
												"src": "1984:21:12"
											}
										]
									},
									"functionSelector": "916b9bef",
									"id": 2946,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2937,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2936,
												"name": "onlyOwner",
												"nameLocations": [
													"1964:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1964:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1964:9:12"
										}
									],
									"name": "deactivate",
									"nameLocation": "1934:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1953:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "1945:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:12:12"
									},
									"returnParameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1974:0:12"
									},
									"scope": 3037,
									"src": "1925:87:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2959,
										"nodeType": "Block",
										"src": "2067:37:12",
										"statements": [
											{
												"expression": {
													"id": 2957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2953,
															"name": "_isActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "2077:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 2955,
														"indexExpression": {
															"id": 2954,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2948,
															"src": "2087:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2077:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2093:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2077:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2958,
												"nodeType": "ExpressionStatement",
												"src": "2077:20:12"
											}
										]
									},
									"functionSelector": "09df30ec",
									"id": 2960,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2951,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2950,
												"name": "onlyOwner",
												"nameLocations": [
													"2057:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2057:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2057:9:12"
										}
									],
									"name": "reactivate",
									"nameLocation": "2027:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2948,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2046:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "2038:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2038:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2037:12:12"
									},
									"returnParameters": {
										"id": 2952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2067:0:12"
									},
									"scope": 3037,
									"src": "2018:86:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3060
									],
									"body": {
										"id": 2971,
										"nodeType": "Block",
										"src": "2184:39:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2967,
														"name": "_accessTier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2743,
														"src": "2201:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
															"typeString": "mapping(uint256 => uint8)"
														}
													},
													"id": 2969,
													"indexExpression": {
														"id": 2968,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2962,
														"src": "2213:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2201:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2966,
												"id": 2970,
												"nodeType": "Return",
												"src": "2194:22:12"
											}
										]
									},
									"functionSelector": "34566cdf",
									"id": 2972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "accessTier",
									"nameLocation": "2133:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2962,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2152:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "2144:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:12:12"
									},
									"returnParameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "2177:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2177:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2176:7:12"
									},
									"scope": 3037,
									"src": "2124:99:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3067
									],
									"body": {
										"id": 2985,
										"nodeType": "Block",
										"src": "2292:57:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2981,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2974,
																	"src": "2335:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2980,
																"name": "ownerToTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3036,
																"src": "2320:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2320:21:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2979,
														"name": "accessTier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2972,
															2986
														],
														"referencedDeclaration": 2972,
														"src": "2309:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint8_$",
															"typeString": "function (uint256) view returns (uint8)"
														}
													},
													"id": 2983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2978,
												"id": 2984,
												"nodeType": "Return",
												"src": "2302:40:12"
											}
										]
									},
									"functionSelector": "b7caec87",
									"id": 2986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "accessTier",
									"nameLocation": "2238:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2257:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2249:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:15:12"
									},
									"returnParameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2285:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2976,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2285:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:7:12"
									},
									"scope": 3037,
									"src": "2229:120:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2997,
										"nodeType": "Block",
										"src": "2412:37:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2993,
														"name": "_isActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2747,
														"src": "2429:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 2995,
													"indexExpression": {
														"id": 2994,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2988,
														"src": "2439:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2429:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2992,
												"id": 2996,
												"nodeType": "Return",
												"src": "2422:20:12"
											}
										]
									},
									"functionSelector": "82afd23b",
									"id": 2998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isActive",
									"nameLocation": "2364:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2988,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2381:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2998,
												"src": "2373:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2372:12:12"
									},
									"returnParameters": {
										"id": 2992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2998,
												"src": "2406:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2990,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2406:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2405:6:12"
									},
									"scope": 3037,
									"src": "2355:94:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3009,
										"nodeType": "Block",
										"src": "2521:43:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3005,
														"name": "_hashedIdentity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2751,
														"src": "2538:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
															"typeString": "mapping(uint256 => bytes32)"
														}
													},
													"id": 3007,
													"indexExpression": {
														"id": 3006,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3000,
														"src": "2554:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2538:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3004,
												"id": 3008,
												"nodeType": "Return",
												"src": "2531:26:12"
											}
										]
									},
									"functionSelector": "3355594a",
									"id": 3010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hashedIdentity",
									"nameLocation": "2464:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2487:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "2479:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2478:12:12"
									},
									"returnParameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "2512:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3002,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2511:9:12"
									},
									"scope": 3037,
									"src": "2455:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3046
									],
									"body": {
										"id": 3023,
										"nodeType": "Block",
										"src": "2634:56:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3017,
														"name": "_isActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2747,
														"src": "2651:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 3021,
													"indexExpression": {
														"arguments": [
															{
																"id": 3019,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "2676:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3018,
															"name": "ownerToTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3036,
															"src": "2661:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 3020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2661:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2651:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3016,
												"id": 3022,
												"nodeType": "Return",
												"src": "2644:39:12"
											}
										]
									},
									"functionSelector": "39f920ab",
									"id": 3024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasActiveSBT",
									"nameLocation": "2579:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3012,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2600:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "2592:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2592:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:15:12"
									},
									"returnParameters": {
										"id": 3016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "2628:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2628:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:6:12"
									},
									"scope": 3037,
									"src": "2570:120:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3053
									],
									"body": {
										"id": 3035,
										"nodeType": "Block",
										"src": "2765:46:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3031,
														"name": "_ownerToTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2755,
														"src": "2782:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3033,
													"indexExpression": {
														"id": 3032,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3026,
														"src": "2798:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2782:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3030,
												"id": 3034,
												"nodeType": "Return",
												"src": "2775:29:12"
											}
										]
									},
									"functionSelector": "4814f035",
									"id": 3036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerToTokenId",
									"nameLocation": "2705:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2728:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "2720:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2719:15:12"
									},
									"returnParameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "2756:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2756:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:9:12"
									},
									"scope": 3037,
									"src": "2696:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3038,
							"src": "266:2547:12",
							"usedErrors": []
						}
					],
					"src": "32:2782:12"
				},
				"id": 12
			},
			"contracts/interfaces/ISoulBoundToken.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ISoulBoundToken.sol",
					"exportedSymbols": {
						"ISoulBoundToken": [
							3068
						]
					},
					"id": 3069,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3039,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISoulBoundToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3068,
							"linearizedBaseContracts": [
								3068
							],
							"name": "ISoulBoundToken",
							"nameLocation": "68:15:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "39f920ab",
									"id": 3046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasActiveSBT",
									"nameLocation": "99:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "120:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "112:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "111:15:13"
									},
									"returnParameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "150:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "150:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "149:6:13"
									},
									"scope": 3068,
									"src": "90:66:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4814f035",
									"id": 3053,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerToTokenId",
									"nameLocation": "171:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3048,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "194:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3053,
												"src": "186:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "186:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "185:15:13"
									},
									"returnParameters": {
										"id": 3052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3053,
												"src": "224:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:9:13"
									},
									"scope": 3068,
									"src": "162:71:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "34566cdf",
									"id": 3060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accessTier",
									"nameLocation": "248:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "267:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "259:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:12:13"
									},
									"returnParameters": {
										"id": 3059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "294:5:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3057,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "294:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:7:13"
									},
									"scope": 3068,
									"src": "239:62:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b7caec87",
									"id": 3067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accessTier",
									"nameLocation": "316:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3062,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "335:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "327:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:15:13"
									},
									"returnParameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "365:5:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3064,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "365:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "364:7:13"
									},
									"scope": 3068,
									"src": "307:65:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3069,
							"src": "58:316:13",
							"usedErrors": []
						}
					],
					"src": "32:343:13"
				},
				"id": 13
			}
		}
	}
}